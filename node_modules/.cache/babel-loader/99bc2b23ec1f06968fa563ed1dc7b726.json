{"ast":null,"code":"// eslint-disable-next-line import/no-anonymous-default-export\nvar self = this;\nexport default (() => {\n  // eslint-disable-line no-restricted-globals\n  self.addEventListener(\"message\", message => {\n    if (!message) return;\n    var stopNode = false,\n        finishNode = false,\n        startNode = false;\n    const stop = message.data[1];\n    const nodes = stop ? [...message.data[0][0], ...message.data[0][1]] : message.data[0];\n    nodes.map(node => {\n      if (node.isStop === true) stopNode = node;\n      if (node.isFinish === true) finishNode = node;\n      if (node.isStart === true) startNode = node;\n    });\n\n    if (message.data[0][0].filter(node => node.isStop === true).length > 0) {\n      alert('is in');\n    }\n\n    var nodesInShortestPathOrder = [];\n\n    if (!stop) {\n      if (finishNode === false) postMessage(false);\n      let currentNode = finishNode;\n\n      while (currentNode !== null) {\n        if (currentNode.isStart === true) break;\n        nodesInShortestPathOrder.unshift(currentNode);\n        currentNode = currentNode.previousNode;\n      }\n\n      if (!nodesInShortestPathOrder[0].isStart) nodesInShortestPathOrder.unshift(startNode);\n      postMessage(nodesInShortestPathOrder);\n    } else if (stop) {\n      var startToStop = [],\n          stopToFinish = [];\n      let currentNodeFin = finishNode;\n      let currentNodeStop = stopNode;\n\n      while (currentNodeFin !== null) {\n        if (currentNodeFin.isStop === true) break;\n        stopToFinish.unshift(currentNodeFin);\n        currentNodeFin = currentNodeFin.previousNodeSecond;\n      }\n\n      while (currentNodeStop !== null) {\n        if (currentNodeStop.isStart === true) break;\n        startToStop.unshift(currentNodeStop);\n        currentNodeStop = currentNodeStop.previousNode;\n      }\n\n      if (!startToStop[0].isStart) startToStop.unshift(startNode);\n      postMessage([...startToStop, ...stopToFinish]);\n    }\n  });\n});","map":{"version":3,"names":["self","addEventListener","message","stopNode","finishNode","startNode","stop","data","nodes","map","node","isStop","isFinish","isStart","filter","length","alert","nodesInShortestPathOrder","postMessage","currentNode","unshift","previousNode","startToStop","stopToFinish","currentNodeFin","currentNodeStop","previousNodeSecond"],"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/workers/pathGrabWorker.js"],"sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nvar self = this;\nexport default () => {\n    // eslint-disable-line no-restricted-globals\n    self.addEventListener(\"message\", message => {\n\n        if (!message) return;\n\n        var stopNode=false, finishNode=false, startNode=false\n\n        const stop = message.data[1]\n        const nodes = stop ? [...message.data[0][0], ...message.data[0][1]] : message.data[0]\n\n        nodes.map((node) => {\n\n            if(node.isStop === true) stopNode = node\n\n            if(node.isFinish === true) finishNode = node\n\n            if(node.isStart === true) startNode = node\n\n        })\n\n        if (message.data[0][0].filter(node => node.isStop === true).length > 0) {\n            alert('is in')\n        }\n\n        var nodesInShortestPathOrder = [];\n\n        if(!stop) {\n\n            if(finishNode === false) postMessage(false)\n\n            let currentNode = finishNode\n\n            while (currentNode !== null) {\n\n                if(currentNode.isStart===true) break;\n\n                nodesInShortestPathOrder.unshift(currentNode);\n\n                currentNode = currentNode.previousNode;\n            }\n\n            if(!nodesInShortestPathOrder[0].isStart) nodesInShortestPathOrder.unshift(startNode)\n\n            postMessage(nodesInShortestPathOrder)\n\n        } else if(stop) {\n\n            var startToStop=[], stopToFinish=[]\n            let currentNodeFin = finishNode\n            let currentNodeStop = stopNode\n\n            while (currentNodeFin !== null) {\n\n                if(currentNodeFin.isStop===true) break;\n\n                stopToFinish.unshift(currentNodeFin);\n\n                currentNodeFin = currentNodeFin.previousNodeSecond;\n            }\n\n            while (currentNodeStop !== null) {\n\n                if(currentNodeStop.isStart===true) break;\n\n                startToStop.unshift(currentNodeStop);\n\n                currentNodeStop = currentNodeStop.previousNode;\n            }\n\n            if(!startToStop[0].isStart) startToStop.unshift(startNode)\n\n            postMessage([...startToStop, ...stopToFinish])\n        }\n    })\n}"],"mappings":"AAAA;AACA,IAAIA,IAAI,GAAG,IAAX;AACA,gBAAe,MAAM;EACjB;EACAA,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiCC,OAAO,IAAI;IAExC,IAAI,CAACA,OAAL,EAAc;IAEd,IAAIC,QAAQ,GAAC,KAAb;IAAA,IAAoBC,UAAU,GAAC,KAA/B;IAAA,IAAsCC,SAAS,GAAC,KAAhD;IAEA,MAAMC,IAAI,GAAGJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAb;IACA,MAAMC,KAAK,GAAGF,IAAI,GAAG,CAAC,GAAGJ,OAAO,CAACK,IAAR,CAAa,CAAb,EAAgB,CAAhB,CAAJ,EAAwB,GAAGL,OAAO,CAACK,IAAR,CAAa,CAAb,EAAgB,CAAhB,CAA3B,CAAH,GAAoDL,OAAO,CAACK,IAAR,CAAa,CAAb,CAAtE;IAEAC,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;MAEhB,IAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyBR,QAAQ,GAAGO,IAAX;MAEzB,IAAGA,IAAI,CAACE,QAAL,KAAkB,IAArB,EAA2BR,UAAU,GAAGM,IAAb;MAE3B,IAAGA,IAAI,CAACG,OAAL,KAAiB,IAApB,EAA0BR,SAAS,GAAGK,IAAZ;IAE7B,CARD;;IAUA,IAAIR,OAAO,CAACK,IAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmBO,MAAnB,CAA0BJ,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,IAAlD,EAAwDI,MAAxD,GAAiE,CAArE,EAAwE;MACpEC,KAAK,CAAC,OAAD,CAAL;IACH;;IAED,IAAIC,wBAAwB,GAAG,EAA/B;;IAEA,IAAG,CAACX,IAAJ,EAAU;MAEN,IAAGF,UAAU,KAAK,KAAlB,EAAyBc,WAAW,CAAC,KAAD,CAAX;MAEzB,IAAIC,WAAW,GAAGf,UAAlB;;MAEA,OAAOe,WAAW,KAAK,IAAvB,EAA6B;QAEzB,IAAGA,WAAW,CAACN,OAAZ,KAAsB,IAAzB,EAA+B;QAE/BI,wBAAwB,CAACG,OAAzB,CAAiCD,WAAjC;QAEAA,WAAW,GAAGA,WAAW,CAACE,YAA1B;MACH;;MAED,IAAG,CAACJ,wBAAwB,CAAC,CAAD,CAAxB,CAA4BJ,OAAhC,EAAyCI,wBAAwB,CAACG,OAAzB,CAAiCf,SAAjC;MAEzCa,WAAW,CAACD,wBAAD,CAAX;IAEH,CAnBD,MAmBO,IAAGX,IAAH,EAAS;MAEZ,IAAIgB,WAAW,GAAC,EAAhB;MAAA,IAAoBC,YAAY,GAAC,EAAjC;MACA,IAAIC,cAAc,GAAGpB,UAArB;MACA,IAAIqB,eAAe,GAAGtB,QAAtB;;MAEA,OAAOqB,cAAc,KAAK,IAA1B,EAAgC;QAE5B,IAAGA,cAAc,CAACb,MAAf,KAAwB,IAA3B,EAAiC;QAEjCY,YAAY,CAACH,OAAb,CAAqBI,cAArB;QAEAA,cAAc,GAAGA,cAAc,CAACE,kBAAhC;MACH;;MAED,OAAOD,eAAe,KAAK,IAA3B,EAAiC;QAE7B,IAAGA,eAAe,CAACZ,OAAhB,KAA0B,IAA7B,EAAmC;QAEnCS,WAAW,CAACF,OAAZ,CAAoBK,eAApB;QAEAA,eAAe,GAAGA,eAAe,CAACJ,YAAlC;MACH;;MAED,IAAG,CAACC,WAAW,CAAC,CAAD,CAAX,CAAeT,OAAnB,EAA4BS,WAAW,CAACF,OAAZ,CAAoBf,SAApB;MAE5Ba,WAAW,CAAC,CAAC,GAAGI,WAAJ,EAAiB,GAAGC,YAApB,CAAD,CAAX;IACH;EACJ,CAxED;AAyEH,CA3ED"},"metadata":{},"sourceType":"module"}