{"ast":null,"code":"// eslint-disable-next-line import/no-anonymous-default-export\nvar self = this;\nexport default (() => {\n  // eslint-disable-line no-restricted-globals\n  self.addEventListener(\"message\", message => {\n    if (!message) return;\n    var stopNode, finishNode;\n    const stop = message.data[1];\n    const nodes = stop ? [...message.data[0][0], ...message.data[0][1]] : message.data[0];\n    console.log(nodes);\n    nodes.map(node => {\n      if (node.isStop === true) stopNode = node;\n      if (node.isFinish === true) finishNode = node;\n    });\n    var nodesInShortestPathOrder = [];\n\n    if (!stop) {\n      let currentNode = finishNode;\n\n      while (currentNode !== null) {\n        if (currentNode.isStart === true) break;\n        nodesInShortestPathOrder.unshift(currentNode);\n        currentNode = currentNode.previousNode;\n      }\n\n      console.log(nodesInShortestPathOrder);\n      postMessage(nodesInShortestPathOrder);\n    } else {\n      var startToStop = [],\n          stopToFinish = [];\n      let currentNodeFin = finishNode;\n      let currentNodeStop = stopNode;\n\n      while (currentNodeFin !== null) {\n        if (currentNodeFin.isStop === true) break;\n        stopToFinish.unshift(currentNodeFin);\n        currentNodeFin = currentNodeFin.previousNodeSecond;\n      }\n\n      while (currentNodeStop !== null) {\n        if (currentNodeStop.isStart === true) break;\n        startToStop.unshift(currentNodeStop);\n        currentNodeStop = currentNodeStop.previousNode;\n      }\n\n      postMessage([...startToStop, ...stopToFinish]);\n    }\n  });\n});","map":{"version":3,"names":["self","addEventListener","message","stopNode","finishNode","stop","data","nodes","console","log","map","node","isStop","isFinish","nodesInShortestPathOrder","currentNode","isStart","unshift","previousNode","postMessage","startToStop","stopToFinish","currentNodeFin","currentNodeStop","previousNodeSecond"],"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/workers/pathGrabWorker.js"],"sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nvar self = this;\nexport default () => {\n    // eslint-disable-line no-restricted-globals\n    self.addEventListener(\"message\", message => {\n\n        if (!message) return;\n\n        var stopNode, finishNode\n        const stop = message.data[1]\n        const nodes = stop ? [...message.data[0][0], ...message.data[0][1]] : message.data[0]\n\n        console.log(nodes)\n\n        nodes.map((node) => {\n\n            if(node.isStop === true) stopNode = node\n\n            if(node.isFinish === true) finishNode = node\n\n        })\n\n        var nodesInShortestPathOrder = [];\n\n        if(!stop) {\n\n            let currentNode = finishNode\n\n            while (currentNode !== null) {\n\n                if(currentNode.isStart===true) break;\n\n                nodesInShortestPathOrder.unshift(currentNode);\n\n                currentNode = currentNode.previousNode;\n            }\n\n            console.log(nodesInShortestPathOrder)\n\n            postMessage(nodesInShortestPathOrder)\n        } else {\n\n            var startToStop=[], stopToFinish=[]\n            let currentNodeFin = finishNode\n            let currentNodeStop = stopNode\n\n            while (currentNodeFin !== null) {\n\n                if(currentNodeFin.isStop===true) break;\n\n                stopToFinish.unshift(currentNodeFin);\n\n                currentNodeFin = currentNodeFin.previousNodeSecond;\n            }\n\n            while (currentNodeStop !== null) {\n\n                if(currentNodeStop.isStart===true) break;\n\n                startToStop.unshift(currentNodeStop);\n\n                currentNodeStop = currentNodeStop.previousNode;\n            }\n\n            postMessage([...startToStop, ...stopToFinish])\n        }\n    })\n}"],"mappings":"AAAA;AACA,IAAIA,IAAI,GAAG,IAAX;AACA,gBAAe,MAAM;EACjB;EACAA,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiCC,OAAO,IAAI;IAExC,IAAI,CAACA,OAAL,EAAc;IAEd,IAAIC,QAAJ,EAAcC,UAAd;IACA,MAAMC,IAAI,GAAGH,OAAO,CAACI,IAAR,CAAa,CAAb,CAAb;IACA,MAAMC,KAAK,GAAGF,IAAI,GAAG,CAAC,GAAGH,OAAO,CAACI,IAAR,CAAa,CAAb,EAAgB,CAAhB,CAAJ,EAAwB,GAAGJ,OAAO,CAACI,IAAR,CAAa,CAAb,EAAgB,CAAhB,CAA3B,CAAH,GAAoDJ,OAAO,CAACI,IAAR,CAAa,CAAb,CAAtE;IAEAE,OAAO,CAACC,GAAR,CAAYF,KAAZ;IAEAA,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;MAEhB,IAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyBT,QAAQ,GAAGQ,IAAX;MAEzB,IAAGA,IAAI,CAACE,QAAL,KAAkB,IAArB,EAA2BT,UAAU,GAAGO,IAAb;IAE9B,CAND;IAQA,IAAIG,wBAAwB,GAAG,EAA/B;;IAEA,IAAG,CAACT,IAAJ,EAAU;MAEN,IAAIU,WAAW,GAAGX,UAAlB;;MAEA,OAAOW,WAAW,KAAK,IAAvB,EAA6B;QAEzB,IAAGA,WAAW,CAACC,OAAZ,KAAsB,IAAzB,EAA+B;QAE/BF,wBAAwB,CAACG,OAAzB,CAAiCF,WAAjC;QAEAA,WAAW,GAAGA,WAAW,CAACG,YAA1B;MACH;;MAEDV,OAAO,CAACC,GAAR,CAAYK,wBAAZ;MAEAK,WAAW,CAACL,wBAAD,CAAX;IACH,CAhBD,MAgBO;MAEH,IAAIM,WAAW,GAAC,EAAhB;MAAA,IAAoBC,YAAY,GAAC,EAAjC;MACA,IAAIC,cAAc,GAAGlB,UAArB;MACA,IAAImB,eAAe,GAAGpB,QAAtB;;MAEA,OAAOmB,cAAc,KAAK,IAA1B,EAAgC;QAE5B,IAAGA,cAAc,CAACV,MAAf,KAAwB,IAA3B,EAAiC;QAEjCS,YAAY,CAACJ,OAAb,CAAqBK,cAArB;QAEAA,cAAc,GAAGA,cAAc,CAACE,kBAAhC;MACH;;MAED,OAAOD,eAAe,KAAK,IAA3B,EAAiC;QAE7B,IAAGA,eAAe,CAACP,OAAhB,KAA0B,IAA7B,EAAmC;QAEnCI,WAAW,CAACH,OAAZ,CAAoBM,eAApB;QAEAA,eAAe,GAAGA,eAAe,CAACL,YAAlC;MACH;;MAEDC,WAAW,CAAC,CAAC,GAAGC,WAAJ,EAAiB,GAAGC,YAApB,CAAD,CAAX;IACH;EACJ,CA9DD;AA+DH,CAjED"},"metadata":{},"sourceType":"module"}