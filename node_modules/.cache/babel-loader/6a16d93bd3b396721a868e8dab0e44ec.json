{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Visualizer from'./PathFindingVisualizer/Visualizer';import{dijkstra,getNodesInShortestPathOrder}from'../algorithims/dijkstra';import{aStar}from'../algorithims/aStar';import{breadthFirstSearch}from'../algorithims/breadthFirstSearch';import{greedyBFS}from'../algorithims/greedyBestFirstSearch';import{depthFirstSearch}from'../algorithims/depthFisrtSearch';import{randomMaze}from'../mazeAlgorithims/randomMaze';import{verticalMaze}from'../mazeAlgorithims/verticalMaze';import{horizontalMaze}from'../mazeAlgorithims/HorizontalMaze';import{recursiveDivisionMaze}from'../mazeAlgorithims/recursiveDivisionMaze';import{bidirectionalGreedySearch}from'../algorithims/bidirectionalGreedySearch';import{getNodesInShortestPathOrderBidirectionalGreedySearch}from'../algorithims/bidirectionalGreedySearch';import Navbar from'./navComponents/Navbar';import itemData from'../data/item-data';import algData from'../data/alg-data';import'./mainContainer.css';import{ContactlessOutlined}from'@material-ui/icons';// const START_NODE_ROW = 10;\n// const START_NODE_COL = 5;\n// const FINISH_NODE_ROW = 10;\n// const FINISH_NODE_COL = 45;\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainContainer=/*#__PURE__*/function(_Component){_inherits(MainContainer,_Component);var _super=_createSuper(MainContainer);function MainContainer(props){var _this;_classCallCheck(this,MainContainer);_this=_super.call(this,props);_this.handleMouseDown=function(row,col){var newGrid=_this.state.grid;if(_this.state.grid[row][col].isStart){_this.setState({startIsMoving:true});newGrid=_this.state.grid;}else if(_this.state.grid[row][col].isFinish){_this.setState({finishIsMoving:true});newGrid=_this.state.grid;}else if(_this.state.currItemDesc==='Wall'){newGrid=getNewGridWithWallToggled(_this.state.grid,row,col);}else if(_this.state.currItemDesc==='Weight'){newGrid=getNewGridWithWeightToggled(_this.state.grid,row,col);}else if(_this.state.currItemDesc==='Stop'){_this.setState({stopIsMoving:true,isThereStop:true});}_this.setState({grid:newGrid,mouseIsPressed:true});};_this.handleMouseEnter=function(row,col){if(!_this.state.mouseIsPressed)return;var newGrid=_this.state.grid;if(_this.state.startIsMoving){newGrid=getNewGridWithStart(_this.state.grid,row,col,_this.state.startNode);_this.setState({startNode:[row,col]});}else if(_this.state.finishIsMoving){newGrid=getNewGridWithFinish(_this.state.grid,row,col,_this.state.finishNode);_this.setState({finishNode:[row,col]});}else if(_this.state.currItemDesc==='Wall'){newGrid=getNewGridWithWallToggled(_this.state.grid,row,col,_this.currItemDesc);}else if(_this.state.currItemDesc==='Weight'){newGrid=getNewGridWithWeightToggled(_this.state.grid,row,col);}else if(_this.state.currItemDesc==='Stop'){newGrid=getNewGridWithStopToggled(_this.state.grid,row,col,_this.state.prevStop);_this.setState({prevStop:[row,col]});}_this.setState({grid:newGrid});};_this.handleMouseUp=function(row,col){_this.setState({mouseIsPressed:false,startIsMoving:false,finishIsMoving:false});};_this.handleNav=function(){_this.setState({showNav:!_this.state.showNav});};_this.handleItemDescChange=function(e,item){var newItem=\"\".concat(item);itemData.map(function(_item){if(item===_item.id){_this.setState({currItemDesc:newItem,currItemObj:_item});}});};_this.handleTabs=function(e,val){_this.setState({currAlgTab:val,currAlgObj:algData[val]});};_this.handleMazeTabs=function(e,val){_this.setState({currMazeTab:val});console.log(val);};_this.generateMaze=function(e){var currAlg=_this.state.currMazeTab;if(currAlg===0){_this.generateRecursiveDivisionMaze();console.log('hi');}else if(currAlg===1){_this.generateVerticalMaze();}else if(currAlg===2){_this.generateHorizontalMaze();}else if(currAlg===3){_this.generateRandomMaze();}};_this.resetGrid=function(e){_this.clearGrid();};_this.playAnimation=function(e){var currAlg=_this.state.currAlgObj.id;if(currAlg===0){_this.visualizeDijkstra();}else if(currAlg===1){_this.visualizeaStar();}else if(currAlg===6){_this.visualizbfs();}else if(currAlg===2){_this.visualizegbfs();}else if(currAlg===7){_this.visualizegdfs();}else if(currAlg===5){_this.visualizeBidirectionalGreedySearch();}return;};_this.visualizeDijkstra=function(){var grid=_this.state.grid;var stop=_this.state.isThereStop;var startNode=_this.state.startNode;var finishNode=_this.state.finishNode;var stopNode=_this.state.prevStop?_this.state.prevStop:[];var _startNode=grid[startNode[0]][startNode[1]];var _finishNode=grid[finishNode[0]][finishNode[1]];var _stopNode=_this.state.isThereStop?grid[stopNode[0]][stopNode[1]]:false;var visitedNodesInOrder=[];var visitedNodesInOrderStop=[];if(stop){visitedNodesInOrder=dijkstra(grid,_startNode,_stopNode);visitedNodesInOrderStop=dijkstra(grid,_stopNode,_finishNode);var nodesInShortestPathOrder=getNodesInShortestPathOrder(_finishNode);_this.animateDijkstra(visitedNodesInOrder,visitedNodesInOrderStop,nodesInShortestPathOrder);}else if(!stop){visitedNodesInOrder=dijkstra(grid,_startNode,_finishNode);var _nodesInShortestPathOrder=getNodesInShortestPathOrder(_finishNode);_this.animateDijkstra(visitedNodesInOrder,visitedNodesInOrderStop,_nodesInShortestPathOrder);}};_this.animateMaze=function(walls){var _loop=function _loop(i){if(i===walls.length){setTimeout(function(){_this.clearGrid();var newGrid=getNewGridWithMaze(_this.state.grid,walls);_this.setState({grid:newGrid,generatingMaze:false});},i*10);return{v:void 0};}var wall=walls[i];var node=_this.state.grid[wall[0]][wall[1]];node.isWall=true;setTimeout(function(){//Walls\ndocument.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node node-wall\";},i*10);};for(var i=0;i<=walls.length;i++){var _ret=_loop(i);if(typeof _ret===\"object\")return _ret.v;}};_this.state={grid:[],mouseIsPressed:false,showNav:false,currItemDesc:'Start',currItemObj:itemData[0],currAlgObj:algData[0],currAlgTab:0,currMazeAlg:'Recursive Division Maze',currMazeTab:0,startNode:[10,5],finishNode:[10,45],startIsMoving:false,finishIsMoving:false,isThereStop:false,stopIsMoving:false,prevStop:[],generatingMaze:false,visualizingAlgorithm:false};return _this;}_createClass(MainContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var grid=renderGrid(this.state);this.setState({grid:grid});}},{key:\"clearGrid\",value:function clearGrid(){if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}var rowNum=(window.innerHeight-25)/25-2;var colNum=(window.innerWidth-20)/25;var grid=this.state.grid;var startNode=this.state.startNode;var finishNode=this.state.finishNode;for(var row=0;row<this.state.grid.length;row++){for(var col=0;col<this.state.grid[0].length;col++){if(!(row===startNode[0]&&col===startNode[1]||row===finishNode[0]&&col===finishNode[1])){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node\";}}}var newGrid=getGridWithoutPath(this.state.grid);this.setState({grid:newGrid,visualizingAlgorithm:false,generatingMaze:false});}// play animation\n},{key:\"animateDijkstra\",value://animte dijkstra\nfunction animateDijkstra(visitedNodesInOrder,visitedNodesInOrderStop,nodesInShortestPathOrder){var _this2=this;console.log(visitedNodesInOrder);var isStop=this.state.isThereStop;if(isStop){var _loop2=function _loop2(i){if(i===visitedNodesInOrder.length){// setTimeout(() => {\n//   this.animateShortestPath(nodesInShortestPathOrder);\n// }, 10 * i);\n// return;\nreturn\"break\";}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';},10*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret2=_loop2(i);if(_ret2===\"break\")break;}var _loop3=function _loop3(_i){if(_i===visitedNodesInOrderStop.length){setTimeout(function(){_this2.animateShortestPath(nodesInShortestPathOrder);},10*_i);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrderStop[_i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';},10*_i);};for(var _i=0;_i<=visitedNodesInOrderStop.length;_i++){var _ret3=_loop3(_i);if(typeof _ret3===\"object\")return _ret3.v;}}else if(!isStop){var _loop4=function _loop4(_i2){if(_i2===visitedNodesInOrder.length){setTimeout(function(){_this2.animateShortestPath(nodesInShortestPathOrder);},10*_i2);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[_i2];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';},10*_i2);};for(var _i2=0;_i2<=visitedNodesInOrder.length;_i2++){var _ret4=_loop4(_i2);if(typeof _ret4===\"object\")return _ret4.v;}}}},{key:\"animateaStar\",value://animate aStar\nfunction animateaStar(visitedNodesInOrder,nodesInShortestPathOrder){var _this3=this;var _loop5=function _loop5(i){if(i===visitedNodesInOrder.length){setTimeout(function(){_this3.animateShortestPath(nodesInShortestPathOrder);},10*i);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';},10*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret5=_loop5(i);if(typeof _ret5===\"object\")return _ret5.v;}}},{key:\"visualizeaStar\",value:function visualizeaStar(){var grid=this.state.grid;var startNode=this.state.startNode;var finishNode=this.state.finishNode;var _startNode=grid[startNode[0]][startNode[1]];var _finishNode=grid[finishNode[0]][finishNode[1]];var visitedNodesInOrder=aStar(grid,_startNode,_finishNode);var nodesInShortestPathOrder=getNodesInShortestPathOrder(_finishNode);this.animateaStar(visitedNodesInOrder,nodesInShortestPathOrder);}//animate breadth first search \n},{key:\"animatebfs\",value:function animatebfs(visitedNodesInOrder,nodesInShortestPathOrder){var _this4=this;var _loop6=function _loop6(i){if(i===visitedNodesInOrder.length){setTimeout(function(){_this4.animateShortestPath(nodesInShortestPathOrder);},10*i);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';},10*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret6=_loop6(i);if(typeof _ret6===\"object\")return _ret6.v;}}},{key:\"visualizbfs\",value:function visualizbfs(){var grid=this.state.grid;var startNode=this.state.startNode;var finishNode=this.state.finishNode;var _startNode=grid[startNode[0]][startNode[1]];var _finishNode=grid[finishNode[0]][finishNode[1]];var visitedNodesInOrder=breadthFirstSearch(grid,_startNode,_finishNode);var nodesInShortestPathOrder=getNodesInShortestPathOrder(_finishNode);this.animatebfs(visitedNodesInOrder,nodesInShortestPathOrder);}// greedy best first search\n},{key:\"animategbfs\",value:function animategbfs(visitedNodesInOrder,nodesInShortestPathOrder){var _this5=this;var _loop7=function _loop7(i){if(i===visitedNodesInOrder.length){setTimeout(function(){_this5.animateShortestPath(nodesInShortestPathOrder);},10*i);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';},10*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret7=_loop7(i);if(typeof _ret7===\"object\")return _ret7.v;}}},{key:\"visualizegbfs\",value:function visualizegbfs(){var grid=this.state.grid;var startNode=this.state.startNode;var finishNode=this.state.finishNode;var _startNode=grid[startNode[0]][startNode[1]];var _finishNode=grid[finishNode[0]][finishNode[1]];var visitedNodesInOrder=greedyBFS(grid,_startNode,_finishNode);var nodesInShortestPathOrder=getNodesInShortestPathOrder(_finishNode);this.animategbfs(visitedNodesInOrder,nodesInShortestPathOrder);}// depth first search\n},{key:\"animatedfs\",value:function animatedfs(visitedNodesInOrder,nodesInShortestPathOrder){var _this6=this;var _loop8=function _loop8(i){if(i===visitedNodesInOrder.length){setTimeout(function(){_this6.animateShortestPath(nodesInShortestPathOrder);},10*i);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';},10*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret8=_loop8(i);if(typeof _ret8===\"object\")return _ret8.v;}}},{key:\"visualizegdfs\",value:function visualizegdfs(){var grid=this.state.grid;var startNode=this.state.startNode;var finishNode=this.state.finishNode;var _startNode=grid[startNode[0]][startNode[1]];var _finishNode=grid[finishNode[0]][finishNode[1]];var visitedNodesInOrder=depthFirstSearch(grid,_startNode,_finishNode);var nodesInShortestPathOrder=getNodesInShortestPathOrder(_finishNode);this.animategbfs(visitedNodesInOrder,nodesInShortestPathOrder);}// bidirectional greedy first search\n},{key:\"animateBidirectionalAlgorithm\",value:function animateBidirectionalAlgorithm(visitedNodesInOrderStart,visitedNodesInOrderFinish,nodesInShortestPathOrder,isShortedPath){var _this7=this;var len=Math.max(visitedNodesInOrderStart.length,visitedNodesInOrderFinish.length);var _loop9=function _loop9(i){var nodeA=visitedNodesInOrderStart[i];var nodeB=visitedNodesInOrderFinish[i];if(i===visitedNodesInOrderStart.length){setTimeout(function(){var visitedNodesInOrder=getVisitedNodesInOrder(visitedNodesInOrderStart,visitedNodesInOrderFinish);if(isShortedPath){_this7.animateShortestPath(nodesInShortestPathOrder,visitedNodesInOrder);}else{_this7.setState({visualizingAlgorithm:false});}},i*10);return{v:void 0};}setTimeout(function(){//visited nodes\nif(nodeA!==undefined)document.getElementById(\"node-\".concat(nodeA.row,\"-\").concat(nodeA.col)).className=\"node node-visited\";if(nodeB!==undefined)document.getElementById(\"node-\".concat(nodeB.row,\"-\").concat(nodeB.col)).className=\"node node-visited\";},i*10);};for(var i=1;i<=len;i++){var _ret9=_loop9(i);if(typeof _ret9===\"object\")return _ret9.v;}}},{key:\"visualizeBidirectionalGreedySearch\",value:function visualizeBidirectionalGreedySearch(){var _this8=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({visualizingAlgorithm:true});setTimeout(function(){var grid=_this8.state.grid;var _startNode=_this8.state.startNode;var _finishNode=_this8.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var visitedNodesInOrder=bidirectionalGreedySearch(grid,startNode,finishNode);var visitedNodesInOrderStart=visitedNodesInOrder[0];var visitedNodesInOrderFinish=visitedNodesInOrder[1];var isShortedPath=visitedNodesInOrder[2];var nodesInShortestPathOrder=getNodesInShortestPathOrderBidirectionalGreedySearch(visitedNodesInOrderStart[visitedNodesInOrderStart.length-1],visitedNodesInOrderFinish[visitedNodesInOrderFinish.length-1]);_this8.animateBidirectionalAlgorithm(visitedNodesInOrderStart,visitedNodesInOrderFinish,nodesInShortestPathOrder,isShortedPath);},10);}//finish animations\n},{key:\"animateShortestPath\",value:function animateShortestPath(nodesInShortestPathOrder){var _loop10=function _loop10(i){setTimeout(function(){var node=nodesInShortestPathOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-shortest-path';},50*i);};for(var i=0;i<nodesInShortestPathOrder.length;i++){_loop10(i);}}//generate mazes\n},{key:\"generateRandomMaze\",value:function generateRandomMaze(){var _this9=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({generatingMaze:true});setTimeout(function(){var grid=_this9.state.grid;var _startNode=_this9.state.startNode;var _finishNode=_this9.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var walls=randomMaze(grid,startNode,finishNode);_this9.animateMaze(walls);},10);}},{key:\"generateRecursiveDivisionMaze\",value:function generateRecursiveDivisionMaze(){var _this10=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({generatingMaze:true});setTimeout(function(){var grid=_this10.state.grid;var _startNode=_this10.state.startNode;var _finishNode=_this10.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var walls=recursiveDivisionMaze(grid,startNode,finishNode);_this10.animateMaze(walls);},10);}},{key:\"generateVerticalMaze\",value:function generateVerticalMaze(){var _this11=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({generatingMaze:true});setTimeout(function(){var grid=_this11.state.grid;var _startNode=_this11.state.startNode;var _finishNode=_this11.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var walls=verticalMaze(grid,startNode,finishNode);_this11.animateMaze(walls);},10);}},{key:\"generateHorizontalMaze\",value:function generateHorizontalMaze(){var _this12=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({generatingMaze:true});setTimeout(function(){var grid=_this12.state.grid;var _startNode=_this12.state.startNode;var _finishNode=_this12.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var walls=horizontalMaze(grid,startNode,finishNode);_this12.animateMaze(walls);},10);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"visualizer-container\",children:/*#__PURE__*/_jsx(Visualizer,{state:this.state,handleMouseDown:this.handleMouseDown,handleMouseEnter:this.handleMouseEnter,handleMouseUp:this.handleMouseUp})}),/*#__PURE__*/_jsx(Navbar,{state:this.state,toggleNav:this.handleNav,resetGrid:this.resetGrid,handleMazeTabs:this.handleMazeTabs,genMaze:this.generateMaze,play:this.playAnimation,handleTabs:this.handleTabs,handleItemChange:this.handleItemDescChange,visualizeDijkstra:this.visualizeDijkstra})]});}}]);return MainContainer;}(Component);export{MainContainer as default};var renderGrid=function renderGrid(state){var grid=[];var rowNum=window.innerHeight/25+3;var colNum=window.innerWidth/25+2;for(var row=0;row<rowNum;row++){var currentRow=[];for(var col=0;col<colNum;col++){var node=createNode(col,row,state);node.className='node-wall';currentRow.push(node);}grid.push(currentRow);}return grid;};var createNode=function createNode(col,row,state){var startNode=state.startNode;var finishNode=state.finishNode;var stopNode=state.prevStop;return{col:col,row:row,isStart:row===startNode[0]&&col===startNode[1],isFinish:row===finishNode[0]&&col===finishNode[1],isStop:state.isThereStop?row===stopNode[0]&&col===stopNode[1]:null,distance:Infinity,isVisited:false,isWall:false,previousNode:null};};var rerenderGrid=function rerenderGrid(state){var grid=state.grid;var startNode=grid[state.startNode[0]][state.startNode[1]];var finishNode=grid[state.finishNode[0]][state.finishNode[1]];for(var row=0;row<grid.length;row++){var colNum=grid[row];for(var col=0;col<colNum.length;col++){var node=grid[row][col];if(node.isWall||node.isWeight||node.isStop){node.isWall=false;node.isWeight=false;node.isStop=false;node.isVisited=false;}if(node===startNode){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node node-start\";}else if(node===finishNode){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node node-finish\";}else{document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node\";}}}return grid;};var getNewGridWithStart=function getNewGridWithStart(grid,row,col,prevStart){var newGrid=grid.slice();var newStart=newGrid[row][col];var oldStart=newGrid[prevStart[0]][prevStart[1]];var oldNode=_objectSpread(_objectSpread({},oldStart),{},{isStart:!oldStart.isStart});var newNode=_objectSpread(_objectSpread({},newStart),{},{isStart:!newStart.isStart});newGrid[row][col]=newNode;newGrid[prevStart[0]][prevStart[1]]=oldNode;return newGrid;};var getNewGridWithFinish=function getNewGridWithFinish(grid,row,col,prevFinish){var newGrid=grid.slice();if(newGrid[row][col].isStart||newGrid[row][col].isWall)return grid;var newFinish=newGrid[row][col];var oldFinish=newGrid[prevFinish[0]][prevFinish[1]];var oldNode=_objectSpread(_objectSpread({},oldFinish),{},{isFinish:!oldFinish.isFinish});var newNode=_objectSpread(_objectSpread({},newFinish),{},{isFinish:!newFinish.isFinish});newGrid[row][col]=newNode;newGrid[prevFinish[0]][prevFinish[1]]=oldNode;return newGrid;};var getNewGridWithWallToggled=function getNewGridWithWallToggled(grid,row,col){var newGrid=grid.slice();var node=newGrid[row][col];var newNode=_objectSpread({},node);newNode=_objectSpread(_objectSpread({},node),{},{isWall:!node.isWall});newGrid[row][col]=newNode;return newGrid;};var getNewGridWithWeightToggled=function getNewGridWithWeightToggled(grid,row,col){var newGrid=grid.slice();var node=newGrid[row][col];var newNode=_objectSpread({},node);newNode=_objectSpread(_objectSpread({},node),{},{isWeight:!node.isWeight});newGrid[row][col]=newNode;return newGrid;};var getNewGridWithStopToggled=function getNewGridWithStopToggled(grid,row,col,prevStop){var newGrid=grid.slice();var newStop=newGrid[row][col];if(prevStop.length===0){var _newNode=_objectSpread(_objectSpread({},newStop),{},{isStop:!newStop.isStop});newGrid[row][col]=_newNode;return newGrid;}var oldStop=newGrid[prevStop[0]][prevStop[1]];var oldNode=_objectSpread(_objectSpread({},oldStop),{},{isStop:!oldStop.isStop});var newNode=_objectSpread(_objectSpread({},newStop),{},{isStop:!newStop.isStop});newGrid[row][col]=newNode;newGrid[prevStop[0]][prevStop[1]]=oldNode;return newGrid;};var getNewGridWithMaze=function getNewGridWithMaze(grid,walls){var newGrid=grid.slice();var _iterator=_createForOfIteratorHelper(walls),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var wall=_step.value;var node=grid[wall[0]][wall[1]];var newNode=_objectSpread(_objectSpread({},node),{},{isWall:true});newGrid[wall[0]][wall[1]]=newNode;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return newGrid;};var getInitialGrid=function getInitialGrid(numRows,numColumns){var grid=[];for(var row=0;row<numRows;row++){var currentRow=[];for(var col=0;col<numColumns;col++){currentRow.push(createNode(row,col));}grid.push(currentRow);}return grid;};var getVisitedNodesInOrder=function getVisitedNodesInOrder(visitedNodesInOrderStart,visitedNodesInOrderFinish){var visitedNodesInOrder=[];var n=Math.max(visitedNodesInOrderStart.length,visitedNodesInOrderFinish.length);for(var i=0;i<n;i++){if(visitedNodesInOrderStart[i]!==undefined){visitedNodesInOrder.push(visitedNodesInOrderStart[i]);}if(visitedNodesInOrderFinish[i]!==undefined){visitedNodesInOrder.push(visitedNodesInOrderFinish[i]);}}return visitedNodesInOrder;};var getGridWithoutPath=function getGridWithoutPath(grid){var newGrid=grid.slice();var _iterator2=_createForOfIteratorHelper(grid),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var row=_step2.value;var _iterator3=_createForOfIteratorHelper(row),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var node=_step3.value;var newNode=_objectSpread(_objectSpread({},node),{},{distance:Infinity,totalDistance:Infinity,isVisited:false,isShortest:false,previousNode:null,isWall:false,isWeight:false,isStop:false});newGrid[node.row][node.col]=newNode;}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return newGrid;};","map":{"version":3,"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/components/MainContainer.jsx"],"names":["React","Component","Visualizer","dijkstra","getNodesInShortestPathOrder","aStar","breadthFirstSearch","greedyBFS","depthFirstSearch","randomMaze","verticalMaze","horizontalMaze","recursiveDivisionMaze","bidirectionalGreedySearch","getNodesInShortestPathOrderBidirectionalGreedySearch","Navbar","itemData","algData","ContactlessOutlined","MainContainer","props","handleMouseDown","row","col","newGrid","state","grid","isStart","setState","startIsMoving","isFinish","finishIsMoving","currItemDesc","getNewGridWithWallToggled","getNewGridWithWeightToggled","stopIsMoving","isThereStop","mouseIsPressed","handleMouseEnter","getNewGridWithStart","startNode","getNewGridWithFinish","finishNode","getNewGridWithStopToggled","prevStop","handleMouseUp","handleNav","showNav","handleItemDescChange","e","item","newItem","map","_item","id","currItemObj","handleTabs","val","currAlgTab","currAlgObj","handleMazeTabs","currMazeTab","console","log","generateMaze","currAlg","generateRecursiveDivisionMaze","generateVerticalMaze","generateHorizontalMaze","generateRandomMaze","resetGrid","clearGrid","playAnimation","visualizeDijkstra","visualizeaStar","visualizbfs","visualizegbfs","visualizegdfs","visualizeBidirectionalGreedySearch","stop","stopNode","_startNode","_finishNode","_stopNode","visitedNodesInOrder","visitedNodesInOrderStop","nodesInShortestPathOrder","animateDijkstra","animateMaze","walls","i","length","setTimeout","getNewGridWithMaze","generatingMaze","wall","node","isWall","document","getElementById","className","currMazeAlg","visualizingAlgorithm","renderGrid","rowNum","window","innerHeight","colNum","innerWidth","getGridWithoutPath","isStop","animateShortestPath","animateaStar","animatebfs","animategbfs","visitedNodesInOrderStart","visitedNodesInOrderFinish","isShortedPath","len","Math","max","nodeA","nodeB","getVisitedNodesInOrder","undefined","animateBidirectionalAlgorithm","currentRow","createNode","push","distance","Infinity","isVisited","previousNode","rerenderGrid","isWeight","prevStart","slice","newStart","oldStart","oldNode","newNode","prevFinish","newFinish","oldFinish","newStop","oldStop","getInitialGrid","numRows","numColumns","n","totalDistance","isShortest"],"mappings":"ymCAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CACA,OAAQC,QAAR,CAAkBC,2BAAlB,KAAoD,yBAApD,CACA,OAAQC,KAAR,KAAoB,sBAApB,CACA,OAASC,kBAAT,KAAmC,mCAAnC,CACA,OAASC,SAAT,KAA0B,sCAA1B,CACA,OAASC,gBAAT,KAAiC,iCAAjC,CACA,OAASC,UAAT,KAA2B,+BAA3B,CACA,OAASC,YAAT,KAA6B,iCAA7B,CACA,OAASC,cAAT,KAA+B,mCAA/B,CACA,OAASC,qBAAT,KAAsC,0CAAtC,CACA,OAASC,yBAAT,KAA0C,0CAA1C,CACA,OAASC,oDAAT,KAAqE,0CAArE,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAO,qBAAP,CACA,OAASC,mBAAT,KAAoC,oBAApC,CAEA;AACA;AACA;AACA;2FAEqBC,CAAAA,a,8GACjB,uBAAYC,KAAZ,CAAkB,+CACd,uBAAMA,KAAN,EADc,MA6BlBC,eA7BkB,CA6BA,SAACC,GAAD,CAAMC,GAAN,CAAc,CAC5B,GAAIC,CAAAA,OAAO,CAAG,MAAKC,KAAL,CAAWC,IAAzB,CACA,GAAG,MAAKD,KAAL,CAAWC,IAAX,CAAgBJ,GAAhB,EAAqBC,GAArB,EAA0BI,OAA7B,CAAqC,CACnC,MAAKC,QAAL,CAAc,CAACC,aAAa,CAAE,IAAhB,CAAd,EACAL,OAAO,CAAG,MAAKC,KAAL,CAAWC,IAArB,CACD,CAHD,IAGO,IAAG,MAAKD,KAAL,CAAWC,IAAX,CAAgBJ,GAAhB,EAAqBC,GAArB,EAA0BO,QAA7B,CAAsC,CAC3C,MAAKF,QAAL,CAAc,CAACG,cAAc,CAAE,IAAjB,CAAd,EACAP,OAAO,CAAG,MAAKC,KAAL,CAAWC,IAArB,CACD,CAHM,IAGA,IAAG,MAAKD,KAAL,CAAWO,YAAX,GAA4B,MAA/B,CAAuC,CAC5CR,OAAO,CAAGS,yBAAyB,CAAC,MAAKR,KAAL,CAAWC,IAAZ,CAAkBJ,GAAlB,CAAuBC,GAAvB,CAAnC,CACD,CAFM,IAEA,IAAG,MAAKE,KAAL,CAAWO,YAAX,GAA4B,QAA/B,CAAwC,CAC7CR,OAAO,CAAGU,2BAA2B,CAAC,MAAKT,KAAL,CAAWC,IAAZ,CAAkBJ,GAAlB,CAAuBC,GAAvB,CAArC,CACD,CAFM,IAEA,IAAG,MAAKE,KAAL,CAAWO,YAAX,GAA4B,MAA/B,CAAsC,CAC3C,MAAKJ,QAAL,CAAc,CAACO,YAAY,CAAE,IAAf,CAAqBC,WAAW,CAAE,IAAlC,CAAd,EACD,CACD,MAAKR,QAAL,CAAc,CAACF,IAAI,CAAEF,OAAP,CAAgBa,cAAc,CAAE,IAAhC,CAAd,EACH,CA7CiB,OA+ClBC,gBA/CkB,CA+CC,SAAChB,GAAD,CAAMC,GAAN,CAAc,CAC7B,GAAI,CAAC,MAAKE,KAAL,CAAWY,cAAhB,CAAgC,OAChC,GAAIb,CAAAA,OAAO,CAAG,MAAKC,KAAL,CAAWC,IAAzB,CACA,GAAG,MAAKD,KAAL,CAAWI,aAAd,CAA4B,CAC1BL,OAAO,CAAGe,mBAAmB,CAAC,MAAKd,KAAL,CAAWC,IAAZ,CAAkBJ,GAAlB,CAAuBC,GAAvB,CAA4B,MAAKE,KAAL,CAAWe,SAAvC,CAA7B,CACA,MAAKZ,QAAL,CAAc,CAACY,SAAS,CAAE,CAAClB,GAAD,CAAMC,GAAN,CAAZ,CAAd,EACD,CAHD,IAIK,IAAG,MAAKE,KAAL,CAAWM,cAAd,CAA6B,CAChCP,OAAO,CAAGiB,oBAAoB,CAAC,MAAKhB,KAAL,CAAWC,IAAZ,CAAkBJ,GAAlB,CAAuBC,GAAvB,CAA4B,MAAKE,KAAL,CAAWiB,UAAvC,CAA9B,CACA,MAAKd,QAAL,CAAc,CAACc,UAAU,CAAE,CAACpB,GAAD,CAAMC,GAAN,CAAb,CAAd,EACD,CAHI,IAGE,IAAG,MAAKE,KAAL,CAAWO,YAAX,GAA4B,MAA/B,CAAuC,CAC5CR,OAAO,CAAGS,yBAAyB,CAAC,MAAKR,KAAL,CAAWC,IAAZ,CAAkBJ,GAAlB,CAAuBC,GAAvB,CAA4B,MAAKS,YAAjC,CAAnC,CACD,CAFM,IAEA,IAAG,MAAKP,KAAL,CAAWO,YAAX,GAA4B,QAA/B,CAAwC,CAC7CR,OAAO,CAAGU,2BAA2B,CAAC,MAAKT,KAAL,CAAWC,IAAZ,CAAkBJ,GAAlB,CAAuBC,GAAvB,CAArC,CACD,CAFM,IAEC,IAAG,MAAKE,KAAL,CAAWO,YAAX,GAA4B,MAA/B,CAAsC,CAC5CR,OAAO,CAAGmB,yBAAyB,CAAC,MAAKlB,KAAL,CAAWC,IAAZ,CAAkBJ,GAAlB,CAAuBC,GAAvB,CAA4B,MAAKE,KAAL,CAAWmB,QAAvC,CAAnC,CACA,MAAKhB,QAAL,CAAc,CAACgB,QAAQ,CAAE,CAACtB,GAAD,CAAMC,GAAN,CAAX,CAAd,EACD,CACD,MAAKK,QAAL,CAAc,CAACF,IAAI,CAAEF,OAAP,CAAd,EACH,CAlEiB,OAoElBqB,aApEkB,CAoEF,SAACvB,GAAD,CAAMC,GAAN,CAAc,CAC1B,MAAKK,QAAL,CAAc,CAACS,cAAc,CAAE,KAAjB,CAAwBR,aAAa,CAAE,KAAvC,CAA8CE,cAAc,CAAE,KAA9D,CAAd,EACH,CAtEiB,OAwElBe,SAxEkB,CAwEN,UAAM,CAChB,MAAKlB,QAAL,CAAc,CAACmB,OAAO,CAAE,CAAC,MAAKtB,KAAL,CAAWsB,OAAtB,CAAd,EACD,CA1EiB,OAyGlBC,oBAzGkB,CAyGK,SAACC,CAAD,CAAIC,IAAJ,CAAa,CAClC,GAAIC,CAAAA,OAAO,WAAMD,IAAN,CAAX,CACAlC,QAAQ,CAACoC,GAAT,CAAa,SAACC,KAAD,CAAW,CACtB,GAAGH,IAAI,GAAKG,KAAK,CAACC,EAAlB,CAAqB,CAAC,MAAK1B,QAAL,CAAc,CAACI,YAAY,CAAEmB,OAAf,CAAwBI,WAAW,CAAEF,KAArC,CAAd,EAA2D,CAClF,CAFD,EAGD,CA9GiB,OAgHlBG,UAhHkB,CAgHL,SAACP,CAAD,CAAIQ,GAAJ,CAAY,CACvB,MAAK7B,QAAL,CAAc,CAAC8B,UAAU,CAAED,GAAb,CAAkBE,UAAU,CAAE1C,OAAO,CAACwC,GAAD,CAArC,CAAd,EACD,CAlHiB,OAoHlBG,cApHkB,CAoHD,SAACX,CAAD,CAAIQ,GAAJ,CAAY,CAC3B,MAAK7B,QAAL,CAAc,CAACiC,WAAW,CAAEJ,GAAd,CAAd,EACAK,OAAO,CAACC,GAAR,CAAYN,GAAZ,EACD,CAvHiB,OAyHlBO,YAzHkB,CAyHH,SAACf,CAAD,CAAO,CACpB,GAAIgB,CAAAA,OAAO,CAAG,MAAKxC,KAAL,CAAWoC,WAAzB,CAEA,GAAGI,OAAO,GAAG,CAAb,CAAe,CACb,MAAKC,6BAAL,GACAJ,OAAO,CAACC,GAAR,CAAY,IAAZ,EACD,CAHD,IAGO,IAAGE,OAAO,GAAG,CAAb,CAAe,CACpB,MAAKE,oBAAL,GACD,CAFM,IAEA,IAAGF,OAAO,GAAG,CAAb,CAAe,CACpB,MAAKG,sBAAL,GACD,CAFM,IAEA,IAAGH,OAAO,GAAG,CAAb,CAAe,CACpB,MAAKI,kBAAL,GACD,CACF,CAtIiB,OAwIlBC,SAxIkB,CAwIN,SAACrB,CAAD,CAAO,CACjB,MAAKsB,SAAL,GACD,CA1IiB,OA2KlBC,aA3KkB,CA2KF,SAACvB,CAAD,CAAO,CACrB,GAAIgB,CAAAA,OAAO,CAAG,MAAKxC,KAAL,CAAWkC,UAAX,CAAsBL,EAApC,CACA,GAAGW,OAAO,GAAG,CAAb,CAAe,CACb,MAAKQ,iBAAL,GACD,CAFD,IAEO,IAAGR,OAAO,GAAG,CAAb,CAAe,CACpB,MAAKS,cAAL,GACD,CAFM,IAEA,IAAGT,OAAO,GAAG,CAAb,CAAe,CACpB,MAAKU,WAAL,GACD,CAFM,IAEA,IAAGV,OAAO,GAAG,CAAb,CAAe,CACpB,MAAKW,aAAL,GACD,CAFM,IAEA,IAAGX,OAAO,GAAG,CAAb,CAAe,CACpB,MAAKY,aAAL,GACD,CAFM,IAEA,IAAGZ,OAAO,GAAG,CAAb,CAAe,CACpB,MAAKa,kCAAL,GACD,CACD,OACD,CA3LiB,OAgPlBL,iBAhPkB,CAgPE,UAAM,IACb/C,CAAAA,IADa,CACL,MAAKD,KADA,CACbC,IADa,CAEpB,GAAMqD,CAAAA,IAAI,CAAG,MAAKtD,KAAL,CAAWW,WAAxB,CACA,GAAMI,CAAAA,SAAS,CAAG,MAAKf,KAAL,CAAWe,SAA7B,CACA,GAAME,CAAAA,UAAU,CAAG,MAAKjB,KAAL,CAAWiB,UAA9B,CACA,GAAMsC,CAAAA,QAAQ,CAAG,MAAKvD,KAAL,CAAWmB,QAAX,CAAsB,MAAKnB,KAAL,CAAWmB,QAAjC,CAA4C,EAA7D,CACA,GAAMqC,CAAAA,UAAU,CAAGvD,IAAI,CAACc,SAAS,CAAC,CAAD,CAAV,CAAJ,CAAmBA,SAAS,CAAC,CAAD,CAA5B,CAAnB,CACA,GAAM0C,CAAAA,WAAW,CAAGxD,IAAI,CAACgB,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAApB,CACA,GAAMyC,CAAAA,SAAS,CAAG,MAAK1D,KAAL,CAAWW,WAAX,CAAyBV,IAAI,CAACsD,QAAQ,CAAC,CAAD,CAAT,CAAJ,CAAkBA,QAAQ,CAAC,CAAD,CAA1B,CAAzB,CAA0D,KAA5E,CACA,GAAII,CAAAA,mBAAmB,CAAG,EAA1B,CACA,GAAIC,CAAAA,uBAAuB,CAAG,EAA9B,CACA,GAAGN,IAAH,CAAQ,CACNK,mBAAmB,CAAGjF,QAAQ,CAACuB,IAAD,CAAOuD,UAAP,CAAmBE,SAAnB,CAA9B,CACAE,uBAAuB,CAAGlF,QAAQ,CAACuB,IAAD,CAAOyD,SAAP,CAAkBD,WAAlB,CAAlC,CACA,GAAMI,CAAAA,wBAAwB,CAAGlF,2BAA2B,CAAC8E,WAAD,CAA5D,CACA,MAAKK,eAAL,CAAqBH,mBAArB,CAA0CC,uBAA1C,CAAmEC,wBAAnE,EACD,CALD,IAKO,IAAG,CAACP,IAAJ,CAAS,CACdK,mBAAmB,CAAGjF,QAAQ,CAACuB,IAAD,CAAOuD,UAAP,CAAmBC,WAAnB,CAA9B,CACA,GAAMI,CAAAA,yBAAwB,CAAGlF,2BAA2B,CAAC8E,WAAD,CAA5D,CACA,MAAKK,eAAL,CAAqBH,mBAArB,CAA0CC,uBAA1C,CAAmEC,yBAAnE,EACD,CACN,CArQiB,OAqdlBE,WArdkB,CAqdJ,SAACC,KAAD,CAAW,0BACdC,CADc,EAErB,GAAIA,CAAC,GAAKD,KAAK,CAACE,MAAhB,CAAwB,CACtBC,UAAU,CAAC,UAAM,CACf,MAAKrB,SAAL,GACA,GAAI/C,CAAAA,OAAO,CAAGqE,kBAAkB,CAAC,MAAKpE,KAAL,CAAWC,IAAZ,CAAkB+D,KAAlB,CAAhC,CACA,MAAK7D,QAAL,CAAc,CAAEF,IAAI,CAAEF,OAAR,CAAiBsE,cAAc,CAAE,KAAjC,CAAd,EACD,CAJS,CAIPJ,CAAC,CAAG,EAJG,CAAV,CAKA,iBACD,CACD,GAAIK,CAAAA,IAAI,CAAGN,KAAK,CAACC,CAAD,CAAhB,CACA,GAAIM,CAAAA,IAAI,CAAG,MAAKvE,KAAL,CAAWC,IAAX,CAAgBqE,IAAI,CAAC,CAAD,CAApB,EAAyBA,IAAI,CAAC,CAAD,CAA7B,CAAX,CACAC,IAAI,CAACC,MAAL,CAAc,IAAd,CACAL,UAAU,CAAC,UAAM,CACf;AACAM,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,gBADF,CAED,CAJS,CAIPV,CAAC,CAAG,EAJG,CAAV,CAbqB,EACvB,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAID,KAAK,CAACE,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,gBAA/BA,CAA+B,0CAiBvC,CACF,CAxeiB,CAEd,MAAKjE,KAAL,CAAa,CACTC,IAAI,CAAE,EADG,CAETW,cAAc,CAAE,KAFP,CAGTU,OAAO,CAAE,KAHA,CAITf,YAAY,CAAE,OAJL,CAKTuB,WAAW,CAAEvC,QAAQ,CAAC,CAAD,CALZ,CAMT2C,UAAU,CAAE1C,OAAO,CAAC,CAAD,CANV,CAOTyC,UAAU,CAAE,CAPH,CAQT2C,WAAW,CAAE,yBARJ,CASTxC,WAAW,CAAE,CATJ,CAUTrB,SAAS,CAAE,CAAC,EAAD,CAAK,CAAL,CAVF,CAWTE,UAAU,CAAE,CAAC,EAAD,CAAK,EAAL,CAXH,CAYTb,aAAa,CAAE,KAZN,CAaTE,cAAc,CAAE,KAbP,CAcTK,WAAW,CAAE,KAdJ,CAeTD,YAAY,CAAE,KAfL,CAgBTS,QAAQ,CAAE,EAhBD,CAiBTkD,cAAc,CAAE,KAjBP,CAkBTQ,oBAAoB,CAAE,KAlBb,CAAb,CAFc,aAsBjB,C,2DAED,4BAAoB,CAChB,GAAM5E,CAAAA,IAAI,CAAG6E,UAAU,CAAC,KAAK9E,KAAN,CAAvB,CACA,KAAKG,QAAL,CAAc,CAACF,IAAI,CAAJA,IAAD,CAAd,EACH,C,yBAiHD,oBAAY,CACV,GAAI,KAAKD,KAAL,CAAW6E,oBAAX,EAAmC,KAAK7E,KAAL,CAAWqE,cAAlD,CAAkE,CAChE,OACD,CACD,GAAIU,CAAAA,MAAM,CAAI,CAACC,MAAM,CAACC,WAAP,CAAmB,EAApB,EAA0B,EAA3B,CAA+B,CAA5C,CACA,GAAIC,CAAAA,MAAM,CAAG,CAACF,MAAM,CAACG,UAAP,CAAkB,EAAnB,EAAyB,EAAtC,CACA,GAAMlF,CAAAA,IAAI,CAAG,KAAKD,KAAL,CAAWC,IAAxB,CACA,GAAMc,CAAAA,SAAS,CAAG,KAAKf,KAAL,CAAWe,SAA7B,CACA,GAAME,CAAAA,UAAU,CAAG,KAAKjB,KAAL,CAAWiB,UAA9B,CACA,IAAK,GAAIpB,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAG,KAAKG,KAAL,CAAWC,IAAX,CAAgBiE,MAAxC,CAAgDrE,GAAG,EAAnD,CAAuD,CACrD,IAAK,GAAIC,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAG,KAAKE,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmBiE,MAA3C,CAAmDpE,GAAG,EAAtD,CAA0D,CACxD,GACE,EACGD,GAAG,GAAKkB,SAAS,CAAC,CAAD,CAAjB,EAAwBjB,GAAG,GAAKiB,SAAS,CAAC,CAAD,CAA1C,EACClB,GAAG,GAAKoB,UAAU,CAAC,CAAD,CAAlB,EAAyBnB,GAAG,GAAKmB,UAAU,CAAC,CAAD,CAF9C,CADF,CAKE,CACAwD,QAAQ,CAACC,cAAT,gBAAgC7E,GAAhC,aAAuCC,GAAvC,GAA8C6E,SAA9C,CAA0D,MAA1D,CACD,CACF,CACF,CACD,GAAM5E,CAAAA,OAAO,CAAGqF,kBAAkB,CAAC,KAAKpF,KAAL,CAAWC,IAAZ,CAAlC,CACA,KAAKE,QAAL,CAAc,CACZF,IAAI,CAAEF,OADM,CAEZ8E,oBAAoB,CAAE,KAFV,CAGZR,cAAc,CAAE,KAHJ,CAAd,EAKD,CAED;+BAoBA;AAEA,yBAAgBV,mBAAhB,CAAqCC,uBAArC,CAA8DC,wBAA9D,CAAwF,iBACtFxB,OAAO,CAACC,GAAR,CAAYqB,mBAAZ,EACA,GAAM0B,CAAAA,MAAM,CAAG,KAAKrF,KAAL,CAAWW,WAA1B,CAEA,GAAG0E,MAAH,CAAU,4BACCpB,CADD,EAEN,GAAIA,CAAC,GAAKN,mBAAmB,CAACO,MAA9B,CAAsC,CACpC;AACA;AACA;AACA;AACA,cACD,CACDC,UAAU,CAAC,UAAM,CACf,GAAMI,CAAAA,IAAI,CAAGZ,mBAAmB,CAACM,CAAD,CAAhC,CACAQ,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,mBADF,CAED,CAJS,CAIP,GAAKV,CAJE,CAAV,CATM,EACR,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIN,mBAAmB,CAACO,MAAzC,CAAiDD,CAAC,EAAlD,CAAsD,kBAA7CA,CAA6C,qBAMlD,MAOH,CAdO,2BAeCA,EAfD,EAgBN,GAAIA,EAAC,GAAKL,uBAAuB,CAACM,MAAlC,CAA0C,CACxCC,UAAU,CAAC,UAAM,CACf,MAAI,CAACmB,mBAAL,CAAyBzB,wBAAzB,EACD,CAFS,CAEP,GAAKI,EAFE,CAAV,CAGA,iBACD,CACDE,UAAU,CAAC,UAAM,CACf,GAAMI,CAAAA,IAAI,CAAGX,uBAAuB,CAACK,EAAD,CAApC,CACAQ,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,mBADF,CAED,CAJS,CAIP,GAAKV,EAJE,CAAV,CAtBM,EAeR,IAAK,GAAIA,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,EAAIL,uBAAuB,CAACM,MAA7C,CAAqDD,EAAC,EAAtD,CAA0D,kBAAjDA,EAAiD,4CAYzD,CACF,CA5BD,IA4BO,IAAG,CAACoB,MAAJ,CAAW,4BACPpB,GADO,EAEd,GAAIA,GAAC,GAAKN,mBAAmB,CAACO,MAA9B,CAAsC,CACpCC,UAAU,CAAC,UAAM,CACf,MAAI,CAACmB,mBAAL,CAAyBzB,wBAAzB,EACD,CAFS,CAEP,GAAKI,GAFE,CAAV,CAGA,iBACD,CACDE,UAAU,CAAC,UAAM,CACf,GAAMI,CAAAA,IAAI,CAAGZ,mBAAmB,CAACM,GAAD,CAAhC,CACAQ,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,mBADF,CAED,CAJS,CAIP,GAAKV,GAJE,CAAV,CARc,EAChB,IAAK,GAAIA,CAAAA,GAAC,CAAG,CAAb,CAAgBA,GAAC,EAAIN,mBAAmB,CAACO,MAAzC,CAAiDD,GAAC,EAAlD,CAAsD,kBAA7CA,GAA6C,4CAYrD,CACF,CACF,C,4BAyBD;AAEA,sBAAaN,mBAAb,CAAkCE,wBAAlC,CAA4D,4CACjDI,CADiD,EAExD,GAAIA,CAAC,GAAKN,mBAAmB,CAACO,MAA9B,CAAsC,CACpCC,UAAU,CAAC,UAAM,CACb,MAAI,CAACmB,mBAAL,CAAyBzB,wBAAzB,EACH,CAFS,CAEP,GAAKI,CAFE,CAAV,CAGA,iBACC,CACHE,UAAU,CAAC,UAAM,CACf,GAAMI,CAAAA,IAAI,CAAGZ,mBAAmB,CAACM,CAAD,CAAhC,CACAQ,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,mBADF,CAEC,CAJO,CAIL,GAAKV,CAJA,CAAV,CARwD,EAC1D,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIN,mBAAmB,CAACO,MAAzC,CAAiDD,CAAC,EAAlD,CAAsD,kBAA7CA,CAA6C,4CAYrD,CACF,C,8BAED,yBAAiB,IACRhE,CAAAA,IADQ,CACA,KAAKD,KADL,CACRC,IADQ,CAEf,GAAMc,CAAAA,SAAS,CAAG,KAAKf,KAAL,CAAWe,SAA7B,CACA,GAAME,CAAAA,UAAU,CAAG,KAAKjB,KAAL,CAAWiB,UAA9B,CACA,GAAMuC,CAAAA,UAAU,CAAGvD,IAAI,CAACc,SAAS,CAAC,CAAD,CAAV,CAAJ,CAAmBA,SAAS,CAAC,CAAD,CAA5B,CAAnB,CACA,GAAM0C,CAAAA,WAAW,CAAGxD,IAAI,CAACgB,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAApB,CACA,GAAM0C,CAAAA,mBAAmB,CAAG/E,KAAK,CAACqB,IAAD,CAAOuD,UAAP,CAAmBC,WAAnB,CAAjC,CACA,GAAMI,CAAAA,wBAAwB,CAAGlF,2BAA2B,CAAC8E,WAAD,CAA5D,CACA,KAAK8B,YAAL,CAAkB5B,mBAAlB,CAAuCE,wBAAvC,EACD,CAED;0BAEA,oBAAWF,mBAAX,CAAgCE,wBAAhC,CAA0D,4CAC/CI,CAD+C,EAEtD,GAAIA,CAAC,GAAKN,mBAAmB,CAACO,MAA9B,CAAsC,CACpCC,UAAU,CAAC,UAAM,CACb,MAAI,CAACmB,mBAAL,CAAyBzB,wBAAzB,EACH,CAFS,CAEP,GAAKI,CAFE,CAAV,CAGA,iBACC,CACHE,UAAU,CAAC,UAAM,CACf,GAAMI,CAAAA,IAAI,CAAGZ,mBAAmB,CAACM,CAAD,CAAhC,CACAQ,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,mBADF,CAEC,CAJO,CAIL,GAAKV,CAJA,CAAV,CARsD,EACxD,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIN,mBAAmB,CAACO,MAAzC,CAAiDD,CAAC,EAAlD,CAAsD,kBAA7CA,CAA6C,4CAYrD,CACF,C,2BAED,sBAAc,IACLhE,CAAAA,IADK,CACG,KAAKD,KADR,CACLC,IADK,CAEZ,GAAMc,CAAAA,SAAS,CAAG,KAAKf,KAAL,CAAWe,SAA7B,CACA,GAAME,CAAAA,UAAU,CAAG,KAAKjB,KAAL,CAAWiB,UAA9B,CACA,GAAMuC,CAAAA,UAAU,CAAGvD,IAAI,CAACc,SAAS,CAAC,CAAD,CAAV,CAAJ,CAAmBA,SAAS,CAAC,CAAD,CAA5B,CAAnB,CACA,GAAM0C,CAAAA,WAAW,CAAGxD,IAAI,CAACgB,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAApB,CACA,GAAM0C,CAAAA,mBAAmB,CAAG9E,kBAAkB,CAACoB,IAAD,CAAOuD,UAAP,CAAmBC,WAAnB,CAA9C,CACA,GAAMI,CAAAA,wBAAwB,CAAGlF,2BAA2B,CAAC8E,WAAD,CAA5D,CACA,KAAK+B,UAAL,CAAgB7B,mBAAhB,CAAqCE,wBAArC,EACD,CAED;2BAEA,qBAAYF,mBAAZ,CAAiCE,wBAAjC,CAA2D,4CAChDI,CADgD,EAEvD,GAAIA,CAAC,GAAKN,mBAAmB,CAACO,MAA9B,CAAsC,CACpCC,UAAU,CAAC,UAAM,CACb,MAAI,CAACmB,mBAAL,CAAyBzB,wBAAzB,EACH,CAFS,CAEP,GAAKI,CAFE,CAAV,CAGA,iBACC,CACHE,UAAU,CAAC,UAAM,CACf,GAAMI,CAAAA,IAAI,CAAGZ,mBAAmB,CAACM,CAAD,CAAhC,CACAQ,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,mBADF,CAEC,CAJO,CAIL,GAAKV,CAJA,CAAV,CARuD,EACzD,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIN,mBAAmB,CAACO,MAAzC,CAAiDD,CAAC,EAAlD,CAAsD,kBAA7CA,CAA6C,4CAYrD,CACF,C,6BAED,wBAAgB,IACPhE,CAAAA,IADO,CACC,KAAKD,KADN,CACPC,IADO,CAEd,GAAMc,CAAAA,SAAS,CAAG,KAAKf,KAAL,CAAWe,SAA7B,CACA,GAAME,CAAAA,UAAU,CAAG,KAAKjB,KAAL,CAAWiB,UAA9B,CACA,GAAMuC,CAAAA,UAAU,CAAGvD,IAAI,CAACc,SAAS,CAAC,CAAD,CAAV,CAAJ,CAAmBA,SAAS,CAAC,CAAD,CAA5B,CAAnB,CACA,GAAM0C,CAAAA,WAAW,CAAGxD,IAAI,CAACgB,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAApB,CACA,GAAM0C,CAAAA,mBAAmB,CAAG7E,SAAS,CAACmB,IAAD,CAAOuD,UAAP,CAAmBC,WAAnB,CAArC,CACA,GAAMI,CAAAA,wBAAwB,CAAGlF,2BAA2B,CAAC8E,WAAD,CAA5D,CACA,KAAKgC,WAAL,CAAiB9B,mBAAjB,CAAsCE,wBAAtC,EACD,CAED;0BAEA,oBAAWF,mBAAX,CAAgCE,wBAAhC,CAA0D,4CAC/CI,CAD+C,EAEtD,GAAIA,CAAC,GAAKN,mBAAmB,CAACO,MAA9B,CAAsC,CACpCC,UAAU,CAAC,UAAM,CACb,MAAI,CAACmB,mBAAL,CAAyBzB,wBAAzB,EACH,CAFS,CAEP,GAAKI,CAFE,CAAV,CAGA,iBACC,CACHE,UAAU,CAAC,UAAM,CACf,GAAMI,CAAAA,IAAI,CAAGZ,mBAAmB,CAACM,CAAD,CAAhC,CACAQ,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,mBADF,CAEC,CAJO,CAIL,GAAKV,CAJA,CAAV,CARsD,EACxD,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIN,mBAAmB,CAACO,MAAzC,CAAiDD,CAAC,EAAlD,CAAsD,kBAA7CA,CAA6C,4CAYrD,CACF,C,6BAED,wBAAgB,IACPhE,CAAAA,IADO,CACC,KAAKD,KADN,CACPC,IADO,CAEd,GAAMc,CAAAA,SAAS,CAAG,KAAKf,KAAL,CAAWe,SAA7B,CACA,GAAME,CAAAA,UAAU,CAAG,KAAKjB,KAAL,CAAWiB,UAA9B,CACA,GAAMuC,CAAAA,UAAU,CAAGvD,IAAI,CAACc,SAAS,CAAC,CAAD,CAAV,CAAJ,CAAmBA,SAAS,CAAC,CAAD,CAA5B,CAAnB,CACA,GAAM0C,CAAAA,WAAW,CAAGxD,IAAI,CAACgB,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAApB,CACA,GAAM0C,CAAAA,mBAAmB,CAAG5E,gBAAgB,CAACkB,IAAD,CAAOuD,UAAP,CAAmBC,WAAnB,CAA5C,CACA,GAAMI,CAAAA,wBAAwB,CAAGlF,2BAA2B,CAAC8E,WAAD,CAA5D,CACA,KAAKgC,WAAL,CAAiB9B,mBAAjB,CAAsCE,wBAAtC,EACD,CAED;6CAEA,uCACE6B,wBADF,CAEEC,yBAFF,CAGE9B,wBAHF,CAIE+B,aAJF,CAKE,iBACA,GAAIC,CAAAA,GAAG,CAAGC,IAAI,CAACC,GAAL,CACRL,wBAAwB,CAACxB,MADjB,CAERyB,yBAAyB,CAACzB,MAFlB,CAAV,CADA,2BAKSD,CALT,EAME,GAAI+B,CAAAA,KAAK,CAAGN,wBAAwB,CAACzB,CAAD,CAApC,CACA,GAAIgC,CAAAA,KAAK,CAAGN,yBAAyB,CAAC1B,CAAD,CAArC,CACA,GAAIA,CAAC,GAAKyB,wBAAwB,CAACxB,MAAnC,CAA2C,CACzCC,UAAU,CAAC,UAAM,CACf,GAAIR,CAAAA,mBAAmB,CAAGuC,sBAAsB,CAC9CR,wBAD8C,CAE9CC,yBAF8C,CAAhD,CAIA,GAAIC,aAAJ,CAAmB,CACjB,MAAI,CAACN,mBAAL,CACEzB,wBADF,CAEEF,mBAFF,EAID,CALD,IAKO,CACL,MAAI,CAACxD,QAAL,CAAc,CAAE0E,oBAAoB,CAAE,KAAxB,CAAd,EACD,CACF,CAbS,CAaPZ,CAAC,CAAG,EAbG,CAAV,CAcA,iBACD,CACDE,UAAU,CAAC,UAAM,CACf;AACA,GAAI6B,KAAK,GAAKG,SAAd,CACE1B,QAAQ,CAACC,cAAT,gBAAgCsB,KAAK,CAACnG,GAAtC,aAA6CmG,KAAK,CAAClG,GAAnD,GAA0D6E,SAA1D,CACE,mBADF,CAEF,GAAIsB,KAAK,GAAKE,SAAd,CACE1B,QAAQ,CAACC,cAAT,gBAAgCuB,KAAK,CAACpG,GAAtC,aAA6CoG,KAAK,CAACnG,GAAnD,GAA0D6E,SAA1D,CACE,mBADF,CAEH,CARS,CAQPV,CAAC,CAAG,EARG,CAAV,CAzBF,EAKA,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI4B,GAArB,CAA0B5B,CAAC,EAA3B,CAA+B,kBAAtBA,CAAsB,4CA6B9B,CACF,C,kDAED,6CAAqC,iBACnC,GAAI,KAAKjE,KAAL,CAAW6E,oBAAX,EAAmC,KAAK7E,KAAL,CAAWqE,cAAlD,CAAkE,CAChE,OACD,CACD,KAAKlE,QAAL,CAAc,CAAE0E,oBAAoB,CAAE,IAAxB,CAAd,EACAV,UAAU,CAAC,UAAM,IACPlE,CAAAA,IADO,CACE,MAAI,CAACD,KADP,CACPC,IADO,CAEf,GAAMuD,CAAAA,UAAU,CAAG,MAAI,CAACxD,KAAL,CAAWe,SAA9B,CACA,GAAM0C,CAAAA,WAAW,CAAG,MAAI,CAACzD,KAAL,CAAWiB,UAA/B,CACA,GAAMF,CAAAA,SAAS,CAAGd,IAAI,CAACuD,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAAlB,CACA,GAAMvC,CAAAA,UAAU,CAAGhB,IAAI,CAACwD,WAAW,CAAC,CAAD,CAAZ,CAAJ,CAAqBA,WAAW,CAAC,CAAD,CAAhC,CAAnB,CACA,GAAME,CAAAA,mBAAmB,CAAGvE,yBAAyB,CACnDa,IADmD,CAEnDc,SAFmD,CAGnDE,UAHmD,CAArD,CAKA,GAAMyE,CAAAA,wBAAwB,CAAG/B,mBAAmB,CAAC,CAAD,CAApD,CACA,GAAMgC,CAAAA,yBAAyB,CAAGhC,mBAAmB,CAAC,CAAD,CAArD,CACA,GAAMiC,CAAAA,aAAa,CAAGjC,mBAAmB,CAAC,CAAD,CAAzC,CACA,GAAME,CAAAA,wBAAwB,CAAGxE,oDAAoD,CACnFqG,wBAAwB,CAACA,wBAAwB,CAACxB,MAAzB,CAAkC,CAAnC,CAD2D,CAEnFyB,yBAAyB,CAACA,yBAAyB,CAACzB,MAA1B,CAAmC,CAApC,CAF0D,CAArF,CAIA,MAAI,CAACkC,6BAAL,CACEV,wBADF,CAEEC,yBAFF,CAGE9B,wBAHF,CAIE+B,aAJF,EAMD,CAxBS,CAwBP,EAxBO,CAAV,CAyBD,CAED;mCAEA,6BAAoB/B,wBAApB,CAA8C,8BACnCI,CADmC,EAE1CE,UAAU,CAAC,UAAM,CACf,GAAMI,CAAAA,IAAI,CAAGV,wBAAwB,CAACI,CAAD,CAArC,CACAQ,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CACE,yBADF,CAED,CAJS,CAIP,GAAKV,CAJE,CAAV,CAF0C,EAC5C,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,wBAAwB,CAACK,MAA7C,CAAqDD,CAAC,EAAtD,CAA0D,SAAjDA,CAAiD,EAMzD,CACF,CAED;kCAuBA,6BAAqB,iBACnB,GAAI,KAAKjE,KAAL,CAAW6E,oBAAX,EAAmC,KAAK7E,KAAL,CAAWqE,cAAlD,CAAkE,CAChE,OACD,CACD,KAAKlE,QAAL,CAAc,CAAEkE,cAAc,CAAE,IAAlB,CAAd,EACAF,UAAU,CAAC,UAAM,IACPlE,CAAAA,IADO,CACE,MAAI,CAACD,KADP,CACPC,IADO,CAEf,GAAMuD,CAAAA,UAAU,CAAG,MAAI,CAACxD,KAAL,CAAWe,SAA9B,CACA,GAAM0C,CAAAA,WAAW,CAAG,MAAI,CAACzD,KAAL,CAAWiB,UAA/B,CACA,GAAMF,CAAAA,SAAS,CAAGd,IAAI,CAACuD,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAAlB,CACA,GAAMvC,CAAAA,UAAU,CAAGhB,IAAI,CAACwD,WAAW,CAAC,CAAD,CAAZ,CAAJ,CAAqBA,WAAW,CAAC,CAAD,CAAhC,CAAnB,CACA,GAAMO,CAAAA,KAAK,CAAGhF,UAAU,CAACiB,IAAD,CAAOc,SAAP,CAAkBE,UAAlB,CAAxB,CACA,MAAI,CAAC8C,WAAL,CAAiBC,KAAjB,EACD,CARS,CAQP,EARO,CAAV,CASD,C,6CAED,wCAAgC,kBAC9B,GAAI,KAAKhE,KAAL,CAAW6E,oBAAX,EAAmC,KAAK7E,KAAL,CAAWqE,cAAlD,CAAkE,CAChE,OACD,CACD,KAAKlE,QAAL,CAAc,CAAEkE,cAAc,CAAE,IAAlB,CAAd,EACAF,UAAU,CAAC,UAAM,IACPlE,CAAAA,IADO,CACE,OAAI,CAACD,KADP,CACPC,IADO,CAEf,GAAMuD,CAAAA,UAAU,CAAG,OAAI,CAACxD,KAAL,CAAWe,SAA9B,CACA,GAAM0C,CAAAA,WAAW,CAAG,OAAI,CAACzD,KAAL,CAAWiB,UAA/B,CACA,GAAMF,CAAAA,SAAS,CAAGd,IAAI,CAACuD,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAAlB,CACA,GAAMvC,CAAAA,UAAU,CAAGhB,IAAI,CAACwD,WAAW,CAAC,CAAD,CAAZ,CAAJ,CAAqBA,WAAW,CAAC,CAAD,CAAhC,CAAnB,CACA,GAAMO,CAAAA,KAAK,CAAG7E,qBAAqB,CAACc,IAAD,CAAOc,SAAP,CAAkBE,UAAlB,CAAnC,CACA,OAAI,CAAC8C,WAAL,CAAiBC,KAAjB,EACD,CARS,CAQP,EARO,CAAV,CASD,C,oCAED,+BAAuB,kBACrB,GAAI,KAAKhE,KAAL,CAAW6E,oBAAX,EAAmC,KAAK7E,KAAL,CAAWqE,cAAlD,CAAkE,CAChE,OACD,CACD,KAAKlE,QAAL,CAAc,CAAEkE,cAAc,CAAE,IAAlB,CAAd,EACAF,UAAU,CAAC,UAAM,IACPlE,CAAAA,IADO,CACE,OAAI,CAACD,KADP,CACPC,IADO,CAEf,GAAMuD,CAAAA,UAAU,CAAG,OAAI,CAACxD,KAAL,CAAWe,SAA9B,CACA,GAAM0C,CAAAA,WAAW,CAAG,OAAI,CAACzD,KAAL,CAAWiB,UAA/B,CACA,GAAMF,CAAAA,SAAS,CAAGd,IAAI,CAACuD,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAAlB,CACA,GAAMvC,CAAAA,UAAU,CAAGhB,IAAI,CAACwD,WAAW,CAAC,CAAD,CAAZ,CAAJ,CAAqBA,WAAW,CAAC,CAAD,CAAhC,CAAnB,CACA,GAAMO,CAAAA,KAAK,CAAG/E,YAAY,CAACgB,IAAD,CAAOc,SAAP,CAAkBE,UAAlB,CAA1B,CACA,OAAI,CAAC8C,WAAL,CAAiBC,KAAjB,EACD,CARS,CAQP,EARO,CAAV,CASD,C,sCAED,iCAAyB,kBACvB,GAAI,KAAKhE,KAAL,CAAW6E,oBAAX,EAAmC,KAAK7E,KAAL,CAAWqE,cAAlD,CAAkE,CAChE,OACD,CACD,KAAKlE,QAAL,CAAc,CAAEkE,cAAc,CAAE,IAAlB,CAAd,EACAF,UAAU,CAAC,UAAM,IACPlE,CAAAA,IADO,CACE,OAAI,CAACD,KADP,CACPC,IADO,CAEf,GAAMuD,CAAAA,UAAU,CAAG,OAAI,CAACxD,KAAL,CAAWe,SAA9B,CACA,GAAM0C,CAAAA,WAAW,CAAG,OAAI,CAACzD,KAAL,CAAWiB,UAA/B,CACA,GAAMF,CAAAA,SAAS,CAAGd,IAAI,CAACuD,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,CAAlB,CACA,GAAMvC,CAAAA,UAAU,CAAGhB,IAAI,CAACwD,WAAW,CAAC,CAAD,CAAZ,CAAJ,CAAqBA,WAAW,CAAC,CAAD,CAAhC,CAAnB,CACA,GAAMO,CAAAA,KAAK,CAAG9E,cAAc,CAACe,IAAD,CAAOc,SAAP,CAAkBE,UAAlB,CAA5B,CACA,OAAI,CAAC8C,WAAL,CAAiBC,KAAjB,EACD,CARS,CAQP,EARO,CAAV,CASD,C,sBAED,iBAAQ,CACJ,mBACI,aAAK,SAAS,CAAC,gBAAf,wBAEI,YAAK,SAAS,CAAC,sBAAf,uBACI,KAAC,UAAD,EACI,KAAK,CAAE,KAAKhE,KADhB,CAEI,eAAe,CAAE,KAAKJ,eAF1B,CAGI,gBAAgB,CAAE,KAAKiB,gBAH3B,CAII,aAAa,CAAE,KAAKO,aAJxB,EADJ,EAFJ,cAUI,KAAC,MAAD,EAAQ,KAAK,CAAE,KAAKpB,KAApB,CAA2B,SAAS,CAAE,KAAKqB,SAA3C,CAAsD,SAAS,CAAE,KAAKwB,SAAtE,CAAiF,cAAc,CAAE,KAAKV,cAAtG,CAAsH,OAAO,CAAE,KAAKI,YAApI,CAAkJ,IAAI,CAAE,KAAKQ,aAA7J,CAA4K,UAAU,CAAE,KAAKhB,UAA7L,CAAyM,gBAAgB,CAAE,KAAKR,oBAAhO,CAAsP,iBAAiB,CAAE,KAAKyB,iBAA9Q,EAVJ,GADJ,CAcH,C,2BA1jBsCxE,S,SAAtBkB,a,aA6jBrB,GAAMoF,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAC9E,KAAD,CAAW,CAC1B,GAAMC,CAAAA,IAAI,CAAG,EAAb,CACA,GAAI8E,CAAAA,MAAM,CAAKC,MAAM,CAACC,WAAR,CAAuB,EAAxB,CAA8B,CAA3C,CACA,GAAIC,CAAAA,MAAM,CAAKF,MAAM,CAACG,UAAR,CAAsB,EAAvB,CAA6B,CAA1C,CACA,IAAK,GAAItF,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGkF,MAAxB,CAAgClF,GAAG,EAAnC,CAAuC,CACrC,GAAMwG,CAAAA,UAAU,CAAG,EAAnB,CACA,IAAK,GAAIvG,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGoF,MAAxB,CAAgCpF,GAAG,EAAnC,CAAuC,CACrC,GAAIyE,CAAAA,IAAI,CAAG+B,UAAU,CAACxG,GAAD,CAAMD,GAAN,CAAWG,KAAX,CAArB,CACAuE,IAAI,CAACI,SAAL,CAAiB,WAAjB,CACA0B,UAAU,CAACE,IAAX,CAAgBhC,IAAhB,EACD,CACDtE,IAAI,CAACsG,IAAL,CAAUF,UAAV,EACD,CACD,MAAOpG,CAAAA,IAAP,CACH,CAdD,CAkBA,GAAMqG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACxG,GAAD,CAAMD,GAAN,CAAWG,KAAX,CAAqB,CACpC,GAAMe,CAAAA,SAAS,CAAGf,KAAK,CAACe,SAAxB,CACA,GAAME,CAAAA,UAAU,CAAGjB,KAAK,CAACiB,UAAzB,CACA,GAAMsC,CAAAA,QAAQ,CAAGvD,KAAK,CAACmB,QAAvB,CACA,MAAO,CACLrB,GAAG,CAAHA,GADK,CAELD,GAAG,CAAHA,GAFK,CAGLK,OAAO,CAAEL,GAAG,GAAKkB,SAAS,CAAC,CAAD,CAAjB,EAAwBjB,GAAG,GAAKiB,SAAS,CAAC,CAAD,CAH7C,CAILV,QAAQ,CAAER,GAAG,GAAKoB,UAAU,CAAC,CAAD,CAAlB,EAAyBnB,GAAG,GAAKmB,UAAU,CAAC,CAAD,CAJhD,CAKLoE,MAAM,CAAErF,KAAK,CAACW,WAAN,CAAoBd,GAAG,GAAK0D,QAAQ,CAAC,CAAD,CAAhB,EAAuBzD,GAAG,GAAKyD,QAAQ,CAAC,CAAD,CAA3D,CAAiE,IALpE,CAMLiD,QAAQ,CAAEC,QANL,CAOLC,SAAS,CAAE,KAPN,CAQLlC,MAAM,CAAE,KARH,CASLmC,YAAY,CAAE,IATT,CAAP,CAWD,CAfH,CAiBE,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAC5G,KAAD,CAAW,CAC9B,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAnB,CACA,GAAMc,CAAAA,SAAS,CAAGd,IAAI,CAACD,KAAK,CAACe,SAAN,CAAgB,CAAhB,CAAD,CAAJ,CAAyBf,KAAK,CAACe,SAAN,CAAgB,CAAhB,CAAzB,CAAlB,CACA,GAAME,CAAAA,UAAU,CAAGhB,IAAI,CAACD,KAAK,CAACiB,UAAN,CAAiB,CAAjB,CAAD,CAAJ,CAA0BjB,KAAK,CAACiB,UAAN,CAAiB,CAAjB,CAA1B,CAAnB,CACA,IAAI,GAAIpB,CAAAA,GAAG,CAAG,CAAd,CAAiBA,GAAG,CAAGI,IAAI,CAACiE,MAA5B,CAAoCrE,GAAG,EAAvC,CAA0C,CACxC,GAAIqF,CAAAA,MAAM,CAAGjF,IAAI,CAACJ,GAAD,CAAjB,CACA,IAAI,GAAIC,CAAAA,GAAG,CAAG,CAAd,CAAiBA,GAAG,CAAGoF,MAAM,CAAChB,MAA9B,CAAsCpE,GAAG,EAAzC,CAA4C,CAC1C,GAAIyE,CAAAA,IAAI,CAAGtE,IAAI,CAACJ,GAAD,CAAJ,CAAUC,GAAV,CAAX,CACA,GAAGyE,IAAI,CAACC,MAAL,EAAeD,IAAI,CAACsC,QAApB,EAAgCtC,IAAI,CAACc,MAAxC,CAA+C,CAC7Cd,IAAI,CAACC,MAAL,CAAc,KAAd,CACAD,IAAI,CAACsC,QAAL,CAAgB,KAAhB,CACAtC,IAAI,CAACc,MAAL,CAAc,KAAd,CACAd,IAAI,CAACmC,SAAL,CAAiB,KAAjB,CACD,CACD,GAAGnC,IAAI,GAAKxD,SAAZ,CAAsB,CACpB0D,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CAAoE,iBAApE,CACD,CAFD,IAEO,IAAGJ,IAAI,GAAKtD,UAAZ,CAAuB,CAC5BwD,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CAAoE,kBAApE,CACD,CAFM,IAEA,CACLF,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC1E,GAArC,aAA4C0E,IAAI,CAACzE,GAAjD,GAAwD6E,SAAxD,CAAoE,MAApE,CACD,CACF,CACF,CACD,MAAO1E,CAAAA,IAAP,CAED,CAzBD,CA2BA,GAAMa,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACb,IAAD,CAAOJ,GAAP,CAAYC,GAAZ,CAAiBgH,SAAjB,CAA+B,CACzD,GAAM/G,CAAAA,OAAO,CAAGE,IAAI,CAAC8G,KAAL,EAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAGjH,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,CAAjB,CACA,GAAMmH,CAAAA,QAAQ,CAAGlH,OAAO,CAAC+G,SAAS,CAAC,CAAD,CAAV,CAAP,CAAsBA,SAAS,CAAC,CAAD,CAA/B,CAAjB,CACA,GAAMI,CAAAA,OAAO,gCACRD,QADQ,MAEX/G,OAAO,CAAE,CAAC+G,QAAQ,CAAC/G,OAFR,EAAb,CAIA,GAAMiH,CAAAA,OAAO,gCACRH,QADQ,MAEX9G,OAAO,CAAE,CAAC8G,QAAQ,CAAC9G,OAFR,EAAb,CAIAH,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,EAAoBqH,OAApB,CACApH,OAAO,CAAC+G,SAAS,CAAC,CAAD,CAAV,CAAP,CAAsBA,SAAS,CAAC,CAAD,CAA/B,EAAsCI,OAAtC,CACA,MAAOnH,CAAAA,OAAP,CACD,CAfD,CAiBA,GAAMiB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACf,IAAD,CAAOJ,GAAP,CAAYC,GAAZ,CAAiBsH,UAAjB,CAAgC,CAC3D,GAAMrH,CAAAA,OAAO,CAAGE,IAAI,CAAC8G,KAAL,EAAhB,CACA,GAAGhH,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,EAAkBI,OAAlB,EAA6BH,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,EAAkB0E,MAAlD,CAA0D,MAAOvE,CAAAA,IAAP,CAC1D,GAAMoH,CAAAA,SAAS,CAAGtH,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,CAAlB,CACA,GAAMwH,CAAAA,SAAS,CAAGvH,OAAO,CAACqH,UAAU,CAAC,CAAD,CAAX,CAAP,CAAuBA,UAAU,CAAC,CAAD,CAAjC,CAAlB,CACA,GAAMF,CAAAA,OAAO,gCACRI,SADQ,MAEXjH,QAAQ,CAAE,CAACiH,SAAS,CAACjH,QAFV,EAAb,CAIA,GAAM8G,CAAAA,OAAO,gCACRE,SADQ,MAEXhH,QAAQ,CAAE,CAACgH,SAAS,CAAChH,QAFV,EAAb,CAIAN,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,EAAoBqH,OAApB,CACApH,OAAO,CAACqH,UAAU,CAAC,CAAD,CAAX,CAAP,CAAuBA,UAAU,CAAC,CAAD,CAAjC,EAAwCF,OAAxC,CACA,MAAOnH,CAAAA,OAAP,CACD,CAhBD,CAkBA,GAAMS,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACP,IAAD,CAAOJ,GAAP,CAAYC,GAAZ,CAAoB,CACpD,GAAMC,CAAAA,OAAO,CAAGE,IAAI,CAAC8G,KAAL,EAAhB,CACA,GAAMxC,CAAAA,IAAI,CAAGxE,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,CAAb,CACA,GAAIqH,CAAAA,OAAO,kBAAO5C,IAAP,CAAX,CACA4C,OAAO,gCACF5C,IADE,MAELC,MAAM,CAAE,CAACD,IAAI,CAACC,MAFT,EAAP,CAIAzE,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,EAAoBqH,OAApB,CACA,MAAOpH,CAAAA,OAAP,CACD,CAVD,CAYA,GAAMU,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAACR,IAAD,CAAOJ,GAAP,CAAYC,GAAZ,CAAoB,CACtD,GAAMC,CAAAA,OAAO,CAAGE,IAAI,CAAC8G,KAAL,EAAhB,CACA,GAAMxC,CAAAA,IAAI,CAAGxE,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,CAAb,CACA,GAAIqH,CAAAA,OAAO,kBAAO5C,IAAP,CAAX,CACA4C,OAAO,gCACF5C,IADE,MAELsC,QAAQ,CAAE,CAACtC,IAAI,CAACsC,QAFX,EAAP,CAIA9G,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,EAAoBqH,OAApB,CACA,MAAOpH,CAAAA,OAAP,CACD,CAVD,CAYA,GAAMmB,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACjB,IAAD,CAAOJ,GAAP,CAAYC,GAAZ,CAAiBqB,QAAjB,CAA8B,CAC9D,GAAMpB,CAAAA,OAAO,CAAGE,IAAI,CAAC8G,KAAL,EAAhB,CACA,GAAMQ,CAAAA,OAAO,CAAGxH,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,CAAhB,CACA,GAAGqB,QAAQ,CAAC+C,MAAT,GAAoB,CAAvB,CAAyB,CACvB,GAAMiD,CAAAA,QAAO,gCACRI,OADQ,MAEXlC,MAAM,CAAE,CAACkC,OAAO,CAAClC,MAFN,EAAb,CAIAtF,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,EAAoBqH,QAApB,CACA,MAAOpH,CAAAA,OAAP,CACD,CACD,GAAMyH,CAAAA,OAAO,CAAGzH,OAAO,CAACoB,QAAQ,CAAC,CAAD,CAAT,CAAP,CAAqBA,QAAQ,CAAC,CAAD,CAA7B,CAAhB,CACA,GAAM+F,CAAAA,OAAO,gCACRM,OADQ,MAEXnC,MAAM,CAAE,CAACmC,OAAO,CAACnC,MAFN,EAAb,CAIA,GAAM8B,CAAAA,OAAO,gCACRI,OADQ,MAEXlC,MAAM,CAAE,CAACkC,OAAO,CAAClC,MAFN,EAAb,CAIAtF,OAAO,CAACF,GAAD,CAAP,CAAaC,GAAb,EAAoBqH,OAApB,CACApH,OAAO,CAACoB,QAAQ,CAAC,CAAD,CAAT,CAAP,CAAqBA,QAAQ,CAAC,CAAD,CAA7B,EAAoC+F,OAApC,CACA,MAAOnH,CAAAA,OAAP,CACD,CAvBD,CAyBA,GAAMqE,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACnE,IAAD,CAAO+D,KAAP,CAAiB,CAC1C,GAAIjE,CAAAA,OAAO,CAAGE,IAAI,CAAC8G,KAAL,EAAd,CAD0C,yCAEzB/C,KAFyB,YAE1C,+CAAwB,IAAfM,CAAAA,IAAe,aACtB,GAAIC,CAAAA,IAAI,CAAGtE,IAAI,CAACqE,IAAI,CAAC,CAAD,CAAL,CAAJ,CAAcA,IAAI,CAAC,CAAD,CAAlB,CAAX,CACA,GAAI6C,CAAAA,OAAO,gCACN5C,IADM,MAETC,MAAM,CAAE,IAFC,EAAX,CAIAzE,OAAO,CAACuE,IAAI,CAAC,CAAD,CAAL,CAAP,CAAiBA,IAAI,CAAC,CAAD,CAArB,EAA4B6C,OAA5B,CACD,CATyC,qDAU1C,MAAOpH,CAAAA,OAAP,CACD,CAXD,CAaA,GAAM0H,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,OAAD,CAAUC,UAAV,CAAyB,CAC9C,GAAI1H,CAAAA,IAAI,CAAG,EAAX,CACA,IAAK,GAAIJ,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAG6H,OAAxB,CAAiC7H,GAAG,EAApC,CAAwC,CACtC,GAAIwG,CAAAA,UAAU,CAAG,EAAjB,CACA,IAAK,GAAIvG,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAG6H,UAAxB,CAAoC7H,GAAG,EAAvC,CAA2C,CACzCuG,UAAU,CAACE,IAAX,CAAgBD,UAAU,CAACzG,GAAD,CAAMC,GAAN,CAA1B,EACD,CACDG,IAAI,CAACsG,IAAL,CAAUF,UAAV,EACD,CACD,MAAOpG,CAAAA,IAAP,CACD,CAVD,CAYA,GAAMiG,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAC7BR,wBAD6B,CAE7BC,yBAF6B,CAG1B,CACH,GAAIhC,CAAAA,mBAAmB,CAAG,EAA1B,CACA,GAAIiE,CAAAA,CAAC,CAAG9B,IAAI,CAACC,GAAL,CACNL,wBAAwB,CAACxB,MADnB,CAENyB,yBAAyB,CAACzB,MAFpB,CAAR,CAIA,IAAK,GAAID,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG2D,CAApB,CAAuB3D,CAAC,EAAxB,CAA4B,CAC1B,GAAIyB,wBAAwB,CAACzB,CAAD,CAAxB,GAAgCkC,SAApC,CAA+C,CAC7CxC,mBAAmB,CAAC4C,IAApB,CAAyBb,wBAAwB,CAACzB,CAAD,CAAjD,EACD,CACD,GAAI0B,yBAAyB,CAAC1B,CAAD,CAAzB,GAAiCkC,SAArC,CAAgD,CAC9CxC,mBAAmB,CAAC4C,IAApB,CAAyBZ,yBAAyB,CAAC1B,CAAD,CAAlD,EACD,CACF,CACD,MAAON,CAAAA,mBAAP,CACD,CAlBD,CAoBA,GAAMyB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACnF,IAAD,CAAU,CACnC,GAAIF,CAAAA,OAAO,CAAGE,IAAI,CAAC8G,KAAL,EAAd,CADmC,0CAEnB9G,IAFmB,aAEnC,kDAAsB,IAAbJ,CAAAA,GAAa,wDACHA,GADG,aACpB,kDAAsB,IAAb0E,CAAAA,IAAa,cACpB,GAAI4C,CAAAA,OAAO,gCACN5C,IADM,MAETiC,QAAQ,CAAEC,QAFD,CAGToB,aAAa,CAAEpB,QAHN,CAITC,SAAS,CAAE,KAJF,CAKToB,UAAU,CAAE,KALH,CAMTnB,YAAY,CAAE,IANL,CAOTnC,MAAM,CAAE,KAPC,CAQTqC,QAAQ,CAAE,KARD,CASTxB,MAAM,CAAE,KATC,EAAX,CAWAtF,OAAO,CAACwE,IAAI,CAAC1E,GAAN,CAAP,CAAkB0E,IAAI,CAACzE,GAAvB,EAA8BqH,OAA9B,CACD,CAdmB,uDAerB,CAjBkC,uDAkBnC,MAAOpH,CAAAA,OAAP,CACD,CAnBD","sourcesContent":["import React, {Component} from 'react';\nimport Visualizer from './PathFindingVisualizer/Visualizer'\nimport {dijkstra, getNodesInShortestPathOrder} from '../algorithims/dijkstra';\nimport {aStar} from '../algorithims/aStar'\nimport { breadthFirstSearch } from '../algorithims/breadthFirstSearch';\nimport { greedyBFS } from '../algorithims/greedyBestFirstSearch';\nimport { depthFirstSearch } from '../algorithims/depthFisrtSearch';\nimport { randomMaze } from '../mazeAlgorithims/randomMaze';\nimport { verticalMaze } from '../mazeAlgorithims/verticalMaze';\nimport { horizontalMaze } from '../mazeAlgorithims/HorizontalMaze';\nimport { recursiveDivisionMaze } from '../mazeAlgorithims/recursiveDivisionMaze';\nimport { bidirectionalGreedySearch } from '../algorithims/bidirectionalGreedySearch';\nimport { getNodesInShortestPathOrderBidirectionalGreedySearch } from '../algorithims/bidirectionalGreedySearch';\nimport Navbar from './navComponents/Navbar';\nimport itemData from '../data/item-data'\nimport algData from '../data/alg-data'\nimport './mainContainer.css'\nimport { ContactlessOutlined } from '@material-ui/icons';\n\n// const START_NODE_ROW = 10;\n// const START_NODE_COL = 5;\n// const FINISH_NODE_ROW = 10;\n// const FINISH_NODE_COL = 45;\n\nexport default class MainContainer extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            grid: [],\n            mouseIsPressed: false,\n            showNav: false,\n            currItemDesc: 'Start',\n            currItemObj: itemData[0],\n            currAlgObj: algData[0],\n            currAlgTab: 0,\n            currMazeAlg: 'Recursive Division Maze',\n            currMazeTab: 0,\n            startNode: [10, 5],\n            finishNode: [10, 45],\n            startIsMoving: false,\n            finishIsMoving: false,\n            isThereStop: false,\n            stopIsMoving: false,\n            prevStop: [],\n            generatingMaze: false,\n            visualizingAlgorithm: false\n        }\n    }\n\n    componentDidMount() {\n        const grid = renderGrid(this.state);\n        this.setState({grid});\n    }\n\n    handleMouseDown = (row, col) => {\n        var newGrid = this.state.grid\n        if(this.state.grid[row][col].isStart){\n          this.setState({startIsMoving: true})\n          newGrid = this.state.grid\n        } else if(this.state.grid[row][col].isFinish){\n          this.setState({finishIsMoving: true})\n          newGrid = this.state.grid\n        } else if(this.state.currItemDesc === 'Wall') {\n          newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n        } else if(this.state.currItemDesc === 'Weight'){\n          newGrid = getNewGridWithWeightToggled(this.state.grid, row, col);\n        } else if(this.state.currItemDesc === 'Stop'){\n          this.setState({stopIsMoving: true, isThereStop: true})\n        }\n        this.setState({grid: newGrid, mouseIsPressed: true});\n    }\n    \n    handleMouseEnter = (row, col) => {\n        if (!this.state.mouseIsPressed) return;\n        var newGrid = this.state.grid;\n        if(this.state.startIsMoving){\n          newGrid = getNewGridWithStart(this.state.grid, row, col, this.state.startNode)\n          this.setState({startNode: [row, col]})\n        } \n        else if(this.state.finishIsMoving){\n          newGrid = getNewGridWithFinish(this.state.grid, row, col, this.state.finishNode)\n          this.setState({finishNode: [row, col]})\n        } else if(this.state.currItemDesc === 'Wall') {\n          newGrid = getNewGridWithWallToggled(this.state.grid, row, col, this.currItemDesc);\n        } else if(this.state.currItemDesc === 'Weight'){\n          newGrid = getNewGridWithWeightToggled(this.state.grid, row, col);\n        }  else if(this.state.currItemDesc === 'Stop'){\n          newGrid = getNewGridWithStopToggled(this.state.grid, row, col, this.state.prevStop);\n          this.setState({prevStop: [row, col]})\n        }\n        this.setState({grid: newGrid});\n    }\n    \n    handleMouseUp = (row, col) => {\n        this.setState({mouseIsPressed: false, startIsMoving: false, finishIsMoving: false});\n    }\n\n    handleNav = () => {\n      this.setState({showNav: !this.state.showNav})\n    }\n\n    clearGrid() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      const startNode = this.state.startNode\n      const finishNode = this.state.finishNode\n      for (let row = 0; row < this.state.grid.length; row++) {\n        for (let col = 0; col < this.state.grid[0].length; col++) {\n          if (\n            !(\n              (row === startNode[0] && col === startNode[1]) ||\n              (row === finishNode[0] && col === finishNode[1])\n            )\n          ) {\n            document.getElementById(`node-${row}-${col}`).className = \"node\";\n          }\n        }\n      }\n      var rowNum = ((window.innerHeight-25) / 25)-2\n      var colNum = (window.innerWidth-20) / 25\n      const newGrid = getInitialGrid(rowNum, colNum);\n      this.setState({\n        grid: newGrid,\n        visualizingAlgorithm: false,\n        generatingMaze: false,\n      });\n    }\n\n    //navBar functions\n    handleItemDescChange = (e, item) => {\n      var newItem = `${item}`\n      itemData.map((_item) => {\n        if(item === _item.id){this.setState({currItemDesc: newItem, currItemObj: _item})}\n      })\n    }\n\n    handleTabs = (e, val) => {\n      this.setState({currAlgTab: val, currAlgObj: algData[val]})\n    }\n\n    handleMazeTabs = (e, val) => {\n      this.setState({currMazeTab: val})\n      console.log(val)\n    }\n\n    generateMaze = (e) => {\n      var currAlg = this.state.currMazeTab\n      \n      if(currAlg===0){\n        this.generateRecursiveDivisionMaze()\n        console.log('hi')\n      } else if(currAlg===1){\n        this.generateVerticalMaze()\n      } else if(currAlg===2){\n        this.generateHorizontalMaze()\n      } else if(currAlg===3){\n        this.generateRandomMaze()\n      }\n    }\n\n    resetGrid = (e) => {\n      this.clearGrid()\n    }\n\n    clearGrid() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      var rowNum = ((window.innerHeight-25) / 25)-2\n      var colNum = (window.innerWidth-20) / 25\n      const grid = this.state.grid\n      const startNode = this.state.startNode\n      const finishNode = this.state.finishNode\n      for (let row = 0; row < this.state.grid.length; row++) {\n        for (let col = 0; col < this.state.grid[0].length; col++) {\n          if (\n            !(\n              (row === startNode[0] && col === startNode[1]) ||\n              (row === finishNode[0] && col === finishNode[1])\n            )\n          ) {\n            document.getElementById(`node-${row}-${col}`).className = \"node\";\n          }\n        }\n      }\n      const newGrid = getGridWithoutPath(this.state.grid);\n      this.setState({\n        grid: newGrid,\n        visualizingAlgorithm: false,\n        generatingMaze: false,\n      });\n    }\n\n    // play animation\n\n    playAnimation = (e) => {\n      var currAlg = this.state.currAlgObj.id\n      if(currAlg===0){\n        this.visualizeDijkstra()\n      } else if(currAlg===1){\n        this.visualizeaStar()\n      } else if(currAlg===6){\n        this.visualizbfs()\n      } else if(currAlg===2){\n        this.visualizegbfs()\n      } else if(currAlg===7){\n        this.visualizegdfs()\n      } else if(currAlg===5){\n        this.visualizeBidirectionalGreedySearch()\n      }\n      return\n    }\n\n    //animte dijkstra\n\n    animateDijkstra(visitedNodesInOrder, visitedNodesInOrderStop, nodesInShortestPathOrder) {\n      console.log(visitedNodesInOrder)\n      const isStop = this.state.isThereStop\n\n      if(isStop){\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n          if (i === visitedNodesInOrder.length) {\n            // setTimeout(() => {\n            //   this.animateShortestPath(nodesInShortestPathOrder);\n            // }, 10 * i);\n            // return;\n            break;\n          }\n          setTimeout(() => {\n            const node = visitedNodesInOrder[i];\n            document.getElementById(`node-${node.row}-${node.col}`).className =\n              'node node-visited';\n          }, 10 * i);\n        }\n        for (let i = 0; i <= visitedNodesInOrderStop.length; i++) {\n          if (i === visitedNodesInOrderStop.length) {\n            setTimeout(() => {\n              this.animateShortestPath(nodesInShortestPathOrder);\n            }, 10 * i);\n            return;\n          }\n          setTimeout(() => {\n            const node = visitedNodesInOrderStop[i];\n            document.getElementById(`node-${node.row}-${node.col}`).className =\n              'node node-visited';\n          }, 10 * i);\n        }\n      } else if(!isStop){\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n          if (i === visitedNodesInOrder.length) {\n            setTimeout(() => {\n              this.animateShortestPath(nodesInShortestPathOrder);\n            }, 10 * i);\n            return;\n          }\n          setTimeout(() => {\n            const node = visitedNodesInOrder[i];\n            document.getElementById(`node-${node.row}-${node.col}`).className =\n              'node node-visited';\n          }, 10 * i);\n        }\n      }\n    }\n    \n    visualizeDijkstra = () => {\n          const {grid} = this.state;\n          const stop = this.state.isThereStop\n          const startNode = this.state.startNode\n          const finishNode = this.state.finishNode\n          const stopNode = this.state.prevStop ? this.state.prevStop : []\n          const _startNode = grid[startNode[0]][startNode[1]];\n          const _finishNode = grid[finishNode[0]][finishNode[1]]\n          const _stopNode = this.state.isThereStop ? grid[stopNode[0]][stopNode[1]] : false;\n          var visitedNodesInOrder = []\n          var visitedNodesInOrderStop = []\n          if(stop){\n            visitedNodesInOrder = dijkstra(grid, _startNode, _stopNode);\n            visitedNodesInOrderStop = dijkstra(grid, _stopNode, _finishNode)\n            const nodesInShortestPathOrder = getNodesInShortestPathOrder(_finishNode);\n            this.animateDijkstra(visitedNodesInOrder, visitedNodesInOrderStop, nodesInShortestPathOrder);\n          } else if(!stop){\n            visitedNodesInOrder = dijkstra(grid, _startNode, _finishNode);\n            const nodesInShortestPathOrder = getNodesInShortestPathOrder(_finishNode);\n            this.animateDijkstra(visitedNodesInOrder, visitedNodesInOrderStop, nodesInShortestPathOrder);\n          }\n    }\n\n    //animate aStar\n\n    animateaStar(visitedNodesInOrder, nodesInShortestPathOrder) {\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n        if (i === visitedNodesInOrder.length) {\n          setTimeout(() => {\n              this.animateShortestPath(nodesInShortestPathOrder);\n          }, 10 * i);\n          return;\n          }\n        setTimeout(() => {\n          const node = visitedNodesInOrder[i];\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            'node node-visited';\n          }, 10 * i);\n      }\n    }\n\n    visualizeaStar() {\n      const {grid} = this.state;\n      const startNode = this.state.startNode\n      const finishNode = this.state.finishNode\n      const _startNode = grid[startNode[0]][startNode[1]];\n      const _finishNode = grid[finishNode[0]][finishNode[1]];\n      const visitedNodesInOrder = aStar(grid, _startNode, _finishNode);\n      const nodesInShortestPathOrder = getNodesInShortestPathOrder(_finishNode);\n      this.animateaStar(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n\n    //animate breadth first search \n\n    animatebfs(visitedNodesInOrder, nodesInShortestPathOrder) {\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n        if (i === visitedNodesInOrder.length) {\n          setTimeout(() => {\n              this.animateShortestPath(nodesInShortestPathOrder);\n          }, 10 * i);\n          return;\n          }\n        setTimeout(() => {\n          const node = visitedNodesInOrder[i];\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            'node node-visited';\n          }, 10 * i);\n      }\n    }\n\n    visualizbfs() {\n      const {grid} = this.state;\n      const startNode = this.state.startNode\n      const finishNode = this.state.finishNode\n      const _startNode = grid[startNode[0]][startNode[1]];\n      const _finishNode = grid[finishNode[0]][finishNode[1]];\n      const visitedNodesInOrder = breadthFirstSearch(grid, _startNode, _finishNode);\n      const nodesInShortestPathOrder = getNodesInShortestPathOrder(_finishNode);\n      this.animatebfs(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n\n    // greedy best first search\n\n    animategbfs(visitedNodesInOrder, nodesInShortestPathOrder) {\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n        if (i === visitedNodesInOrder.length) {\n          setTimeout(() => {\n              this.animateShortestPath(nodesInShortestPathOrder);\n          }, 10 * i);\n          return;\n          }\n        setTimeout(() => {\n          const node = visitedNodesInOrder[i];\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            'node node-visited';\n          }, 10 * i);\n      }\n    }\n\n    visualizegbfs() {\n      const {grid} = this.state;\n      const startNode = this.state.startNode\n      const finishNode = this.state.finishNode\n      const _startNode = grid[startNode[0]][startNode[1]];\n      const _finishNode = grid[finishNode[0]][finishNode[1]];\n      const visitedNodesInOrder = greedyBFS(grid, _startNode, _finishNode)\n      const nodesInShortestPathOrder = getNodesInShortestPathOrder(_finishNode)\n      this.animategbfs(visitedNodesInOrder, nodesInShortestPathOrder)\n    }\n\n    // depth first search\n\n    animatedfs(visitedNodesInOrder, nodesInShortestPathOrder) {\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n        if (i === visitedNodesInOrder.length) {\n          setTimeout(() => {\n              this.animateShortestPath(nodesInShortestPathOrder);\n          }, 10 * i);\n          return;\n          }\n        setTimeout(() => {\n          const node = visitedNodesInOrder[i];\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            'node node-visited';\n          }, 10 * i);\n      }\n    }\n\n    visualizegdfs() {\n      const {grid} = this.state;\n      const startNode = this.state.startNode\n      const finishNode = this.state.finishNode\n      const _startNode = grid[startNode[0]][startNode[1]];\n      const _finishNode = grid[finishNode[0]][finishNode[1]];\n      const visitedNodesInOrder = depthFirstSearch(grid, _startNode, _finishNode)\n      const nodesInShortestPathOrder = getNodesInShortestPathOrder(_finishNode)\n      this.animategbfs(visitedNodesInOrder, nodesInShortestPathOrder)\n    }\n\n    // bidirectional greedy first search\n\n    animateBidirectionalAlgorithm(\n      visitedNodesInOrderStart,\n      visitedNodesInOrderFinish,\n      nodesInShortestPathOrder,\n      isShortedPath\n    ) {\n      let len = Math.max(\n        visitedNodesInOrderStart.length,\n        visitedNodesInOrderFinish.length\n      );\n      for (let i = 1; i <= len; i++) {\n        let nodeA = visitedNodesInOrderStart[i];\n        let nodeB = visitedNodesInOrderFinish[i];\n        if (i === visitedNodesInOrderStart.length) {\n          setTimeout(() => {\n            let visitedNodesInOrder = getVisitedNodesInOrder(\n              visitedNodesInOrderStart,\n              visitedNodesInOrderFinish\n            );\n            if (isShortedPath) {\n              this.animateShortestPath(\n                nodesInShortestPathOrder,\n                visitedNodesInOrder\n              );\n            } else {\n              this.setState({ visualizingAlgorithm: false });\n            }\n          }, i * 10);\n          return;\n        }\n        setTimeout(() => {\n          //visited nodes\n          if (nodeA !== undefined)\n            document.getElementById(`node-${nodeA.row}-${nodeA.col}`).className =\n              \"node node-visited\";\n          if (nodeB !== undefined)\n            document.getElementById(`node-${nodeB.row}-${nodeB.col}`).className =\n              \"node node-visited\";\n        }, i * 10);\n      }\n    }\n\n    visualizeBidirectionalGreedySearch() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ visualizingAlgorithm: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]];\n        const finishNode = grid[_finishNode[0]][_finishNode[1]];\n        const visitedNodesInOrder = bidirectionalGreedySearch(\n          grid,\n          startNode,\n          finishNode\n        );\n        const visitedNodesInOrderStart = visitedNodesInOrder[0];\n        const visitedNodesInOrderFinish = visitedNodesInOrder[1];\n        const isShortedPath = visitedNodesInOrder[2];\n        const nodesInShortestPathOrder = getNodesInShortestPathOrderBidirectionalGreedySearch(\n          visitedNodesInOrderStart[visitedNodesInOrderStart.length - 1],\n          visitedNodesInOrderFinish[visitedNodesInOrderFinish.length - 1]\n        );\n        this.animateBidirectionalAlgorithm(\n          visitedNodesInOrderStart,\n          visitedNodesInOrderFinish,\n          nodesInShortestPathOrder,\n          isShortedPath\n        );\n      }, 10);\n    }\n\n    //finish animations\n\n    animateShortestPath(nodesInShortestPathOrder) {\n      for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n        setTimeout(() => {\n          const node = nodesInShortestPathOrder[i];\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            'node node-shortest-path';\n        }, 50 * i);\n      }\n    }\n\n    //generate mazes\n\n    animateMaze = (walls) => {\n      for (let i = 0; i <= walls.length; i++) {\n        if (i === walls.length) {\n          setTimeout(() => {\n            this.clearGrid();\n            let newGrid = getNewGridWithMaze(this.state.grid, walls);\n            this.setState({ grid: newGrid, generatingMaze: false });\n          }, i * 10);\n          return;\n        }\n        let wall = walls[i];\n        let node = this.state.grid[wall[0]][wall[1]];\n        node.isWall = true\n        setTimeout(() => {\n          //Walls\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            \"node node-wall\";\n        }, i * 10);\n      }\n    };\n\n    generateRandomMaze() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ generatingMaze: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]]\n        const finishNode = grid[_finishNode[0]][_finishNode[1]]\n        const walls = randomMaze(grid, startNode, finishNode);\n        this.animateMaze(walls);\n      }, 10);\n    }\n  \n    generateRecursiveDivisionMaze() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ generatingMaze: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]]\n        const finishNode = grid[_finishNode[0]][_finishNode[1]]\n        const walls = recursiveDivisionMaze(grid, startNode, finishNode);\n        this.animateMaze(walls);\n      }, 10);\n    }\n  \n    generateVerticalMaze() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ generatingMaze: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]]\n        const finishNode = grid[_finishNode[0]][_finishNode[1]]\n        const walls = verticalMaze(grid, startNode, finishNode);\n        this.animateMaze(walls);\n      }, 10);\n    }\n  \n    generateHorizontalMaze() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ generatingMaze: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]]\n        const finishNode = grid[_finishNode[0]][_finishNode[1]]\n        const walls = horizontalMaze(grid, startNode, finishNode);\n        this.animateMaze(walls);\n      }, 10);\n    }\n\n    render(){ \n        return(\n            <div className=\"main-container\">\n                {/* <button onClick={this.handleNav}>show nav</button> */}\n                <div className=\"visualizer-container\">\n                    <Visualizer \n                        state={this.state} \n                        handleMouseDown={this.handleMouseDown} \n                        handleMouseEnter={this.handleMouseEnter} \n                        handleMouseUp={this.handleMouseUp}\n                    />\n                </div>\n                <Navbar state={this.state} toggleNav={this.handleNav} resetGrid={this.resetGrid} handleMazeTabs={this.handleMazeTabs} genMaze={this.generateMaze} play={this.playAnimation} handleTabs={this.handleTabs} handleItemChange={this.handleItemDescChange} visualizeDijkstra={this.visualizeDijkstra}/>\n            </div>\n        )\n    }\n}\n\nconst renderGrid = (state) => {\n    const grid = [];\n    var rowNum = ((window.innerHeight) / 25) + 3\n    var colNum = ((window.innerWidth) / 25) + 2\n    for (let row = 0; row < rowNum; row++) {\n      const currentRow = [];\n      for (let col = 0; col < colNum; col++) {\n        var node = createNode(col, row, state)\n        node.className = 'node-wall'\n        currentRow.push(node);\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n}\n\n\n\nconst createNode = (col, row, state) => {\n    const startNode = state.startNode\n    const finishNode = state.finishNode\n    const stopNode = state.prevStop\n    return {\n      col,\n      row,\n      isStart: row === startNode[0] && col === startNode[1],\n      isFinish: row === finishNode[0] && col === finishNode[1],\n      isStop: state.isThereStop ? row === stopNode[0] && col === stopNode[1] : null,\n      distance: Infinity,\n      isVisited: false,\n      isWall: false,\n      previousNode: null,\n    };\n  };\n\n  const rerenderGrid = (state) => {\n    const grid = state.grid\n    const startNode = grid[state.startNode[0]][state.startNode[1]]\n    const finishNode = grid[state.finishNode[0]][state.finishNode[1]]\n    for(let row = 0; row < grid.length; row++){\n      var colNum = grid[row]\n      for(let col = 0; col < colNum.length; col++){\n        var node = grid[row][col]\n        if(node.isWall || node.isWeight || node.isStop){\n          node.isWall = false\n          node.isWeight = false\n          node.isStop = false\n          node.isVisited = false\n        }\n        if(node === startNode){\n          document.getElementById(`node-${node.row}-${node.col}`).className = \"node node-start\";\n        } else if(node === finishNode){\n          document.getElementById(`node-${node.row}-${node.col}`).className = \"node node-finish\";\n        } else {\n          document.getElementById(`node-${node.row}-${node.col}`).className = \"node\";\n        }\n      }\n    }\n    return grid\n\n  }\n\n  const getNewGridWithStart = (grid, row, col, prevStart) => {\n    const newGrid = grid.slice();\n    const newStart = newGrid[row][col];\n    const oldStart = newGrid[prevStart[0]][prevStart[1]]\n    const oldNode = {\n      ...oldStart,\n      isStart: !oldStart.isStart\n    }\n    const newNode = {\n      ...newStart,\n      isStart: !newStart.isStart,\n    };\n    newGrid[row][col] = newNode;\n    newGrid[prevStart[0]][prevStart[1]] = oldNode\n    return newGrid;\n  }\n\n  const getNewGridWithFinish = (grid, row, col, prevFinish) => {\n    const newGrid = grid.slice();\n    if(newGrid[row][col].isStart || newGrid[row][col].isWall) return grid;\n    const newFinish = newGrid[row][col];\n    const oldFinish = newGrid[prevFinish[0]][prevFinish[1]]\n    const oldNode = {\n      ...oldFinish,\n      isFinish: !oldFinish.isFinish\n    }\n    const newNode = {\n      ...newFinish,\n      isFinish: !newFinish.isFinish,\n    };\n    newGrid[row][col] = newNode;\n    newGrid[prevFinish[0]][prevFinish[1]] = oldNode\n    return newGrid;\n  }\n\n  const getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    var newNode = {...node}\n    newNode = {\n      ...node,\n      isWall: !node.isWall,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n  };\n\n  const getNewGridWithWeightToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    var newNode = {...node}\n    newNode = {\n      ...node,\n      isWeight: !node.isWeight,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n  };\n\n  const getNewGridWithStopToggled = (grid, row, col, prevStop) => {\n    const newGrid = grid.slice();\n    const newStop = newGrid[row][col];\n    if(prevStop.length === 0){\n      const newNode = {\n        ...newStop,\n        isStop: !newStop.isStop,\n      };\n      newGrid[row][col] = newNode;\n      return newGrid;\n    }\n    const oldStop = newGrid[prevStop[0]][prevStop[1]]\n    const oldNode = {\n      ...oldStop,\n      isStop: !oldStop.isStop\n    }\n    const newNode = {\n      ...newStop,\n      isStop: !newStop.isStop,\n    };\n    newGrid[row][col] = newNode;\n    newGrid[prevStop[0]][prevStop[1]] = oldNode\n    return newGrid;\n  };\n\n  const getNewGridWithMaze = (grid, walls) => {\n    let newGrid = grid.slice();\n    for (let wall of walls) {\n      let node = grid[wall[0]][wall[1]];\n      let newNode = {\n        ...node,\n        isWall: true,\n      };\n      newGrid[wall[0]][wall[1]] = newNode;\n    }\n    return newGrid;\n  };\n\n  const getInitialGrid = (numRows, numColumns) => {\n    let grid = [];\n    for (let row = 0; row < numRows; row++) {\n      let currentRow = [];\n      for (let col = 0; col < numColumns; col++) {\n        currentRow.push(createNode(row, col));\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  };\n\n  const getVisitedNodesInOrder = (\n    visitedNodesInOrderStart,\n    visitedNodesInOrderFinish\n  ) => {\n    let visitedNodesInOrder = [];\n    let n = Math.max(\n      visitedNodesInOrderStart.length,\n      visitedNodesInOrderFinish.length\n    );\n    for (let i = 0; i < n; i++) {\n      if (visitedNodesInOrderStart[i] !== undefined) {\n        visitedNodesInOrder.push(visitedNodesInOrderStart[i]);\n      }\n      if (visitedNodesInOrderFinish[i] !== undefined) {\n        visitedNodesInOrder.push(visitedNodesInOrderFinish[i]);\n      }\n    }\n    return visitedNodesInOrder;\n  };\n\n  const getGridWithoutPath = (grid) => {\n    let newGrid = grid.slice();\n    for (let row of grid) {\n      for (let node of row) {\n        let newNode = {\n          ...node,\n          distance: Infinity,\n          totalDistance: Infinity,\n          isVisited: false,\n          isShortest: false,\n          previousNode: null,\n          isWall: false,\n          isWeight: false,\n          isStop: false\n        };\n        newGrid[node.row][node.col] = newNode;\n      }\n    }\n    return newGrid;\n  };"]},"metadata":{},"sourceType":"module"}