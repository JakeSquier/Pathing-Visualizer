{"ast":null,"code":"// eslint-disable-next-line import/no-anonymous-default-export\nvar self = this;\nexport default (() => {\n  // eslint-disable-line no-restricted-globals\n  self.addEventListener(\"message\", message => {\n    if (!message) return;\n    let currentNode = message.data[0];\n    const stop = message.data[1];\n    const nodesInShortestPathOrder = [];\n\n    if (!stop) {\n      while (currentNode !== null) {\n        if (currentNode.isStart == true) break;\n        nodesInShortestPathOrder.unshift(currentNode);\n        currentNode = currentNode.previousNode;\n      }\n    } else {\n      var firstPath = [];\n      var secondPath = [];\n      console.log(message.data[0][0][message.data[0][0].length - 1], message.data[0][1][1]);\n      console.log(message.data);\n    }\n\n    postMessage(nodesInShortestPathOrder);\n  });\n});","map":{"version":3,"names":["self","addEventListener","message","currentNode","data","stop","nodesInShortestPathOrder","isStart","unshift","previousNode","firstPath","secondPath","console","log","length","postMessage"],"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/workers/pathGrabWorker.js"],"sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nvar self = this;\nexport default () => {\n    // eslint-disable-line no-restricted-globals\n    self.addEventListener(\"message\", message => {\n        if (!message) return;\n        let currentNode = message.data[0]\n        const stop = message.data[1]\n        const nodesInShortestPathOrder = [];\n\n        if(!stop) {\n            while (currentNode !== null) {\n\n                if(currentNode.isStart==true) break;\n\n                nodesInShortestPathOrder.unshift(currentNode);\n                currentNode = currentNode.previousNode;\n            }\n        } else {\n            var firstPath = []\n            var secondPath = []\n            console.log(message.data[0][0][message.data[0][0].length-1], message.data[0][1][1])\n            console.log(message.data)\n\n        }\n\n        postMessage(nodesInShortestPathOrder)\n    })\n}"],"mappings":"AAAA;AACA,IAAIA,IAAI,GAAG,IAAX;AACA,gBAAe,MAAM;EACjB;EACAA,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiCC,OAAO,IAAI;IACxC,IAAI,CAACA,OAAL,EAAc;IACd,IAAIC,WAAW,GAAGD,OAAO,CAACE,IAAR,CAAa,CAAb,CAAlB;IACA,MAAMC,IAAI,GAAGH,OAAO,CAACE,IAAR,CAAa,CAAb,CAAb;IACA,MAAME,wBAAwB,GAAG,EAAjC;;IAEA,IAAG,CAACD,IAAJ,EAAU;MACN,OAAOF,WAAW,KAAK,IAAvB,EAA6B;QAEzB,IAAGA,WAAW,CAACI,OAAZ,IAAqB,IAAxB,EAA8B;QAE9BD,wBAAwB,CAACE,OAAzB,CAAiCL,WAAjC;QACAA,WAAW,GAAGA,WAAW,CAACM,YAA1B;MACH;IACJ,CARD,MAQO;MACH,IAAIC,SAAS,GAAG,EAAhB;MACA,IAAIC,UAAU,GAAG,EAAjB;MACAC,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACE,IAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmBF,OAAO,CAACE,IAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmBU,MAAnB,GAA0B,CAA7C,CAAZ,EAA6DZ,OAAO,CAACE,IAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA7D;MACAQ,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACE,IAApB;IAEH;;IAEDW,WAAW,CAACT,wBAAD,CAAX;EACH,CAvBD;AAwBH,CA1BD"},"metadata":{},"sourceType":"module"}