{"ast":null,"code":"import _objectSpread from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import $ from'jquery';import Visualizer from'./PathFindingVisualizer/Visualizer';import{randomMaze}from'../mazeAlgorithims/randomMaze';import{verticalMaze}from'../mazeAlgorithims/verticalMaze';import{horizontalMaze}from'../mazeAlgorithims/HorizontalMaze';import{recursiveDivisionMaze}from'../mazeAlgorithims/recursiveDivisionMaze';import Navbar from'./navComponents/Navbar';import NavTop from'./navComponents/sideNav';import itemData from'../data/item-data';import algData from'../data/alg-data';import pathGrabWorker from'../workers/pathGrabWorker';import _dijkstraWorker from\"../workers/dijkstraWorker\";import aStarWorker from'../workers/aStarWorker';import greedyBestFirstSearchWorker from'../workers/greedyBestFirstSearchWorker';import breadthFirstSearchWorker from'../workers/breadthFirstSearchWorker';import depthFirstSearchWorker from'../workers/depthFirstSearchWorker';import bidirectionalGreedySearchWorker from'../workers/bidirectionalGreedySearchWorker';import WebWorker from\"../workers/workerSetup\";import'./mainContainer.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainContainer=/*#__PURE__*/function(_Component){_inherits(MainContainer,_Component);var _super=_createSuper(MainContainer);function MainContainer(props){var _this;_classCallCheck(this,MainContainer);_this=_super.call(this,props);_this.handleMouseDown=function(row,col){var newGrid=_this.state.grid;var node=newGrid[row][col];if(_this.state.visualizingAlgorithm||_this.state.generatingMaze)return;if(_this.state.grid[row][col].isStart){_this.setState({startIsMoving:true});newGrid=_this.state.grid;}else if(_this.state.grid[row][col].isFinish){_this.setState({finishIsMoving:true});newGrid=_this.state.grid;}else if(_this.state.currItemDesc==='Stop'){_this.setState({stopIsMoving:true,isThereStop:true});}else if(_this.state.currItemDesc==='Wall'&&!node.isStart&&!node.isFinish&&!node.isStop){newGrid=getNewGridWithWallToggled(newGrid,row,col);}_this.setState({grid:newGrid,mouseIsPressed:true});};_this.handleMouseEnter=function(row,col){if(!_this.state.mouseIsPressed)return;var newGrid=_this.state.grid;var node=newGrid[row][col];if(node.isStart||node.isStop||node.isFinish||_this.state.visualizingAlgorithm||_this.state.generatingMaze)return;if(_this.state.startIsMoving){newGrid=getNewGridWithStart(_this.state.grid,row,col,_this.state.startNode);_this.setState({startNode:[row,col]});}else if(_this.state.finishIsMoving){newGrid=getNewGridWithFinish(_this.state.grid,row,col,_this.state.finishNode);_this.setState({finishNode:[row,col]});}else if(_this.state.currItemDesc==='Stop'){newGrid=getNewGridWithStopToggled(_this.state.grid,row,col,_this.state.prevStop);_this.setState({prevStop:[row,col]});}else if(_this.state.currItemDesc==='Wall'&&!node.isStart&&!node.isFinish&&!node.isStop){newGrid=getNewGridWithWallToggled(newGrid,row,col);}_this.setState({grid:newGrid});};_this.handleMouseUp=function(row,col){_this.setState({mouseIsPressed:false,startIsMoving:false,finishIsMoving:false});};_this.handleNav=function(){_this.setState({showNav:!_this.state.showNav});};_this.handleItemDescChange=function(e,item){var newItem=\"\".concat(item);itemData.map(function(_item){if(item===_item.id)_this.setState({currItemDesc:newItem,currItemObj:_item});return _item;});};_this.handleTabs=function(e){var val=e.target.dataset.val;_this.setState({currAlgTab:val,currAlgObj:algData[val]});};_this.handleMiniTabs=function(e){var val=_this.state.currAlgTab;if(val+1>algData.length-1){val=0;}else{val++;}_this.setState({currAlgTab:val,currAlgObj:algData[val]});};_this.handleMazeTabs=function(e){var val=parseInt(e.target.dataset.val);_this.setState({currMazeTab:val});};_this.handleMiniMazeTabs=function(up){var val=_this.state.currMazeTab;if(up){if(val<=0){_this.setState({currMazeTab:3});return;}val--;}else{if(val>=3){_this.setState({currMazeTab:0});return;}val++;}_this.setState({currMazeTab:val});};_this.handleSpeedChange=function(e,val){var currSpeed=_this.state.animationSpeed;if(val&&currSpeed>5){_this.setState({animationSpeed:currSpeed-5});}if(!val&&currSpeed<35){_this.setState({animationSpeed:currSpeed+5});}};_this.generateMaze=function(e){if(_this.state.generatingMaze||_this.state.visualizingAlgorithm||!_this.state.gridClean||_this.state.maze)return;_this.setState({maze:true});var currAlg=_this.state.currMazeTab;if(currAlg===0){_this.generateRecursiveDivisionMaze();}else if(currAlg===1){_this.generateVerticalMaze();}else if(currAlg===2){_this.generateHorizontalMaze();}else if(currAlg===3){_this.generateRandomMaze();}};_this.resetGrid=function(){if(_this.state.visualizingAlgorithm||_this.state.generatingMaze){return;}document.getElementsByClassName('progress')[0].style.width='0%';var rowNum=_this.state.rowNum;var colNum=_this.state.colNum;var grid=_this.state.grid;var startNode=_this.state.startNode;var finishNode=_this.state.finishNode;var stopNode=_this.state.isThereStop?_this.state.prevStop:false;for(var row=0;row<rowNum;row++){for(var col=0;col<colNum;col++){if(row===startNode[0]&&col===startNode[1]){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node node-start\";}else if(row===finishNode[0]&&col===finishNode[1]){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node node-finish\";}else if(stopNode!==false&&row===stopNode[0]&&col===stopNode[1]){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node node-stop\";}else if(grid[row][col].isWall){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node node-wall\";}else{document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node\";}}}var newGrid=getGridWithoutPath(_this.state.grid,true);_this.setState({grid:newGrid,visualizingAlgorithm:false,generatingMaze:false,gridClean:true,maze:false});};_this.clearGrid=function(){if(_this.state.visualizingAlgorithm||_this.state.generatingMaze){return;}document.getElementsByClassName('progress')[0].style.width='0%';var rowNum=_this.state.rowNum;var colNum=_this.state.colNum;var startNode=_this.state.startNode;var finishNode=_this.state.finishNode;for(var row=0;row<rowNum;row++){for(var col=0;col<colNum;col++){if(row===startNode[0]&&col===startNode[1]){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node node-start\";}else if(row===finishNode[0]&&col===finishNode[1]){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node node-finish\";}else{document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=\"node\";}}}var newGrid=getGridWithoutPath(_this.state.grid);_this.setState({grid:newGrid,visualizingAlgorithm:false,generatingMaze:false,prevStop:[],isThereStop:false,gridClean:true,maze:false});};_this.playAnimation=function(e){if(_this.state.generatingMaze||_this.state.visualizingAlgorithm||!_this.state.gridClean)return;var currAlg=_this.state.currAlgObj.id;_this.setState({gridClean:false,visualizingAlgorithm:true,showNav:false});if(currAlg===0){_this.visualizeDijkstra();}else if(currAlg===1){_this.visualizeaStar();}else if(currAlg===4){_this.visualizbfs();}else if(currAlg===2){_this.visualizegbfs();}else if(currAlg===5){_this.visualizedfs();}else if(currAlg===3){_this.visualizeBidirectionalGreedySearch();}return;};_this.handleProgressSetup=function(isThereStop,isSecondAnimation,animationSpeed,animationDuration){var progressBar=document.getElementById(\"progressBar\");progressBar.className='progress progress-no-stop';if(!isThereStop){progressBar.className='progress progress-no-stop-anime';progressBar.style.animationDuration=\"\".concat(animationDuration*animationSpeed/1000,\"s\");progressBar.addEventListener('animationend',function(){progressBar.classList.remove('progress-no-stop-anime');progressBar.className='progress progress-no-stop';});return 100/animationDuration;}else if(!isSecondAnimation&&isThereStop){progressBar.className='progress progress-no-stop-anime';progressBar.style.animationDuration=\"\".concat(animationDuration*animationSpeed/1000,\"s\");progressBar.addEventListener('animationend',function(){progressBar.classList.remove('progress-no-stop-anime');progressBar.className='progress progress-no-stop';});return 50/animationDuration;}else if(isSecondAnimation&&isThereStop){progressBar.className='progress progress-stop-anime';progressBar.style.animationDuration=\"\".concat(animationDuration*animationSpeed/1000,\"s\");progressBar.addEventListener('animationend',function(){progressBar.classList.remove('progress-stop-anime');progressBar.className='progress progress-stop';});return 50/animationDuration;}};_this.animateDijkstra=function(visitedNodesInOrder,nodesInShortestPathOrder,animationStall){var animationSpeed=arguments.length>3&&arguments[3]!==undefined?arguments[3]:10;var isThereStop=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var isSecondAnimation=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var animationColor;animationColor=isSecondAnimation?animationColor='node-target-visited':animationColor='node-visited';//progressTracker\nvar progress=$(\"#progressBar\");var integralVal=_this.handleProgressSetup(isThereStop,isSecondAnimation,animationSpeed,visitedNodesInOrder.length);var _loop=function _loop(i){if(i===visitedNodesInOrder.length){if(isSecondAnimation&&isThereStop)return{v:void 0};setTimeout(_this.animateShortestPath,animationStall*animationSpeed,nodesInShortestPathOrder);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node \".concat(animationColor,\" node-gap-vert node-gap-horiz\");progress.width(\"+=\".concat(integralVal,\"%\"));},animationSpeed*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret=_loop(i);if(typeof _ret===\"object\")return _ret.v;}};_this.visualizeDijkstra=function(){_this.dijkstraWorker=new WebWorker(_dijkstraWorker);_this.pathGrabWorker=new WebWorker(pathGrabWorker);var grid=_this.state.grid;var START_NODE=_this.state.startNode;var FINISH_NODE=_this.state.finishNode;var STOP_NODE=_this.state.prevStop;var startNode=grid[START_NODE[0]][START_NODE[1]];var finishNode=grid[FINISH_NODE[0]][FINISH_NODE[1]];var stopNode=_this.state.isThereStop?grid[STOP_NODE[0]][STOP_NODE[1]]:[];if(_this.state.isThereStop){_this.dijkstraWorker.postMessage([grid,startNode,finishNode,stopNode]);_this.dijkstraWorker.addEventListener('message',function(message){var animateTiming=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(message){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.pathGrabWorker.postMessage([message.data,true]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var animateTime=function animateTime(message,messageTwo){var nodesInShortestPathOrder;if(messageTwo.data[0][0]===false&&messageTwo.data[1][0]===false){nodesInShortestPathOrder=[startNode,stopNode,finishNode];}else if(messageTwo.data[0][0]===false){nodesInShortestPathOrder=[startNode].concat(_toConsumableArray(messageTwo.data[1]));}else if(messageTwo.data[1][0]===false){nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),[finishNode]);}else{nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),_toConsumableArray(messageTwo.data[1]));}_this.animateDijkstra(message.data[0],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,false);setTimeout(_this.animateDijkstra,message.data[0].length*_this.state.animationSpeed,message.data[1],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,true);};animateTime(message,messageTwo);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function animateTiming(_x){return _ref.apply(this,arguments);};}();animateTiming(message);});return;}else if(!_this.state.isThereStop){_this.dijkstraWorker.postMessage([grid,startNode,finishNode,false]);_this.dijkstraWorker.addEventListener('message',function(message){_this.pathGrabWorker.postMessage([message.data,false]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var nodesInShortestPathOrder=messageTwo.data===false?[startNode,finishNode]:messageTwo.data;_this.animateDijkstra(message.data,nodesInShortestPathOrder,message.data.length,_this.state.animationSpeed,_this.state.isThereStop);});});}};_this.animateaStar=function(visitedNodesInOrder,nodesInShortestPathOrder,animationStall,animationSpeed,isThereStop){var isSecondAnimation=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var animationColor;animationColor=isSecondAnimation?animationColor='node-target-visited':animationColor='node-visited';//progress tracker\nvar progress=$(\"#progressBar\");progress.replaceWith($(\"#progressBar\")).clone(true);var integralVal=_this.handleProgressSetup(isThereStop,isSecondAnimation,animationSpeed,visitedNodesInOrder.length);var _loop2=function _loop2(i){if(i===visitedNodesInOrder.length){if(isSecondAnimation&&isThereStop)return{v:void 0};setTimeout(_this.animateShortestPath,animationStall*animationSpeed,nodesInShortestPathOrder);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node \".concat(animationColor,\" node-gap-vert node-gap-horiz\");progress.width(\"+=\".concat(integralVal,\"%\"));},animationSpeed*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret2=_loop2(i);if(typeof _ret2===\"object\")return _ret2.v;}};_this.visualizeaStar=function(){_this.aStarWorker=new WebWorker(aStarWorker);_this.pathGrabWorker=new WebWorker(pathGrabWorker);var grid=_this.state.grid;var START_NODE=_this.state.startNode;var FINISH_NODE=_this.state.finishNode;var STOP_NODE=_this.state.prevStop;var startNode=grid[START_NODE[0]][START_NODE[1]];var finishNode=grid[FINISH_NODE[0]][FINISH_NODE[1]];var stopNode=_this.state.isThereStop?grid[STOP_NODE[0]][STOP_NODE[1]]:[];if(_this.state.isThereStop){_this.aStarWorker.postMessage([grid,startNode,finishNode,stopNode]);_this.aStarWorker.addEventListener('message',function(message){var animateTiming=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this.pathGrabWorker.postMessage([message.data,true]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var animateTime=function animateTime(message,messageTwo){var nodesInShortestPathOrder;if(messageTwo.data[0][0]===false&&messageTwo.data[1][0]===false){nodesInShortestPathOrder=[startNode,stopNode,finishNode];}else if(messageTwo.data[0][0]===false){nodesInShortestPathOrder=[startNode].concat(_toConsumableArray(messageTwo.data[1]));}else if(messageTwo.data[1][0]===false){nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),[finishNode]);}else{nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),_toConsumableArray(messageTwo.data[1]));}_this.animateaStar(message.data[0],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,false);setTimeout(_this.animateaStar,message.data[0].length*_this.state.animationSpeed,message.data[1],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,true);};animateTime(message,messageTwo);});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function animateTiming(_x2){return _ref2.apply(this,arguments);};}();animateTiming(message);});return;}else if(!_this.state.isThereStop){_this.aStarWorker.postMessage([grid,startNode,finishNode,false]);_this.aStarWorker.addEventListener('message',function(message){_this.pathGrabWorker.postMessage([message.data,false]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var nodesInShortestPathOrder=messageTwo.data===false?[startNode,finishNode]:messageTwo.data;_this.animateaStar(message.data,nodesInShortestPathOrder,message.data.length,_this.state.animationSpeed,_this.state.isThereStop,false);});});}};_this.animatebfs=function(visitedNodesInOrder,nodesInShortestPathOrder,animationStall,animationSpeed,isThereStop){var isSecondAnimation=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var animationColor;animationColor=isSecondAnimation?animationColor='node-target-visited':animationColor='node-visited';//progress tracker\nvar progress=$(\"#progressBar\");progress.replaceWith($(\"#progressBar\")).clone(true);var integralVal=_this.handleProgressSetup(isThereStop,isSecondAnimation,animationSpeed,visitedNodesInOrder.length);var _loop3=function _loop3(i){if(i===visitedNodesInOrder.length){if(isSecondAnimation&&isThereStop)return{v:void 0};setTimeout(_this.animateShortestPath,animationSpeed*animationStall,nodesInShortestPathOrder);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node \".concat(animationColor,\" node-gap-vert node-gap-horiz\");progress.width(\"+=\".concat(integralVal,\"%\"));},animationSpeed*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret3=_loop3(i);if(typeof _ret3===\"object\")return _ret3.v;}};_this.visualizbfs=function(){_this.breadthFirstSearchWorker=new WebWorker(breadthFirstSearchWorker);_this.pathGrabWorker=new WebWorker(pathGrabWorker);var grid=_this.state.grid;var START_NODE=_this.state.startNode;var FINISH_NODE=_this.state.finishNode;var STOP_NODE=_this.state.prevStop;var startNode=grid[START_NODE[0]][START_NODE[1]];var finishNode=grid[FINISH_NODE[0]][FINISH_NODE[1]];var stopNode=_this.state.isThereStop?grid[STOP_NODE[0]][STOP_NODE[1]]:[];if(_this.state.isThereStop){_this.breadthFirstSearchWorker.postMessage([grid,startNode,finishNode,stopNode]);_this.breadthFirstSearchWorker.addEventListener('message',function(message){var animateTiming=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(message){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this.pathGrabWorker.postMessage([message.data,true]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var animateTime=function animateTime(message,messageTwo){var nodesInShortestPathOrder;if(messageTwo.data[0][0]===false&&messageTwo.data[1][0]===false){nodesInShortestPathOrder=[startNode,stopNode,finishNode];}else if(messageTwo.data[0][0]===false){nodesInShortestPathOrder=[startNode].concat(_toConsumableArray(messageTwo.data[1]));}else if(messageTwo.data[1][0]===false){nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),[finishNode]);}else{nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),_toConsumableArray(messageTwo.data[1]));}_this.animatebfs(message.data[0],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,false);setTimeout(_this.animatebfs,message.data[0].length*_this.state.animationSpeed,message.data[1],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,true);};animateTime(message,messageTwo);});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function animateTiming(_x3){return _ref3.apply(this,arguments);};}();animateTiming(message);});return;}else if(!_this.state.isThereStop){_this.breadthFirstSearchWorker.postMessage([grid,startNode,finishNode,false]);_this.breadthFirstSearchWorker.addEventListener('message',function(message){_this.pathGrabWorker.postMessage([message.data,false]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var nodesInShortestPathOrder=messageTwo.data===false?[startNode,finishNode]:messageTwo.data;_this.animatebfs(message.data,nodesInShortestPathOrder,message.data.length,_this.state.animationSpeed,false);});});}};_this.animategbfs=function(visitedNodesInOrder,nodesInShortestPathOrder,animationStall,animationSpeed,isThereStop){var isSecondAnimation=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var animationColor;animationColor=isSecondAnimation?animationColor='node-target-visited':animationColor='node-visited';//progress tracker\nvar progress=$(\"#progressBar\");progress.replaceWith($(\"#progressBar\")).clone(true);var integralVal=_this.handleProgressSetup(isThereStop,isSecondAnimation,animationSpeed,visitedNodesInOrder.length);var _loop4=function _loop4(i){if(i===visitedNodesInOrder.length){if(isSecondAnimation&&isThereStop)return{v:void 0};setTimeout(_this.animateShortestPath,animationStall*animationSpeed,nodesInShortestPathOrder);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node \".concat(animationColor,\" node-gap-vert node-gap-horiz\");progress.width(\"+=\".concat(integralVal,\"%\"));},animationSpeed*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret4=_loop4(i);if(typeof _ret4===\"object\")return _ret4.v;}};_this.visualizegbfs=function(){_this.greedyBestFirstSearchWorker=new WebWorker(greedyBestFirstSearchWorker);_this.pathGrabWorker=new WebWorker(pathGrabWorker);var grid=_this.state.grid;var START_NODE=_this.state.startNode;var FINISH_NODE=_this.state.finishNode;var STOP_NODE=_this.state.prevStop;var startNode=grid[START_NODE[0]][START_NODE[1]];var finishNode=grid[FINISH_NODE[0]][FINISH_NODE[1]];var stopNode=_this.state.isThereStop?grid[STOP_NODE[0]][STOP_NODE[1]]:[];if(_this.state.isThereStop){_this.greedyBestFirstSearchWorker.postMessage([grid,startNode,finishNode,stopNode]);_this.greedyBestFirstSearchWorker.addEventListener('message',function(message){var animateTiming=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(message){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_this.pathGrabWorker.postMessage([message.data,true]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var animateTime=function animateTime(message,messageTwo){var nodesInShortestPathOrder;if(messageTwo.data[0][0]===false&&messageTwo.data[1][0]===false){nodesInShortestPathOrder=[startNode,stopNode,finishNode];}else if(messageTwo.data[0][0]===false){nodesInShortestPathOrder=[startNode].concat(_toConsumableArray(messageTwo.data[1]));}else if(messageTwo.data[1][0]===false){nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),[finishNode]);}else{nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),_toConsumableArray(messageTwo.data[1]));}_this.animategbfs(message.data[0],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,false);setTimeout(_this.animategbfs,message.data[0].length*_this.state.animationSpeed,message.data[1],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,true);};animateTime(message,messageTwo);});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function animateTiming(_x4){return _ref4.apply(this,arguments);};}();animateTiming(message);});}else if(!_this.state.isThereStop){_this.greedyBestFirstSearchWorker.postMessage([grid,startNode,finishNode,false]);_this.greedyBestFirstSearchWorker.addEventListener('message',function(message){_this.pathGrabWorker.postMessage([message.data,false]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var nodesInShortestPathOrder=messageTwo.data===false?[startNode,finishNode]:messageTwo.data;_this.animategbfs(message.data,nodesInShortestPathOrder,message.data.length,_this.state.animationSpeed,_this.state.isThereStop,false);});});}};_this.animatedfs=function(visitedNodesInOrder,nodesInShortestPathOrder,animationStall,animationSpeed,isThereStop){var isSecondAnimation=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var animationColor;animationColor=isSecondAnimation?animationColor='node-target-visited':animationColor='node-visited';//progress tracker\nvar progress=$(\"#progressBar\");progress.replaceWith($(\"#progressBar\")).clone(true);var integralVal=_this.handleProgressSetup(isThereStop,isSecondAnimation,animationSpeed,visitedNodesInOrder.length);var _loop5=function _loop5(i){if(i===visitedNodesInOrder.length){if(isSecondAnimation&&isThereStop)return{v:void 0};setTimeout(_this.animateShortestPath,animationStall*animationSpeed,nodesInShortestPathOrder);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node \".concat(animationColor,\" node-gap-vert node-gap-horiz\");progress.width(\"+=\".concat(integralVal,\"%\"));},animationSpeed*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret5=_loop5(i);if(typeof _ret5===\"object\")return _ret5.v;}};_this.visualizedfs=function(){_this.depthFirstSearchWorker=new WebWorker(depthFirstSearchWorker);_this.pathGrabWorker=new WebWorker(pathGrabWorker);var grid=_this.state.grid;var START_NODE=_this.state.startNode;var FINISH_NODE=_this.state.finishNode;var STOP_NODE=_this.state.prevStop;var startNode=grid[START_NODE[0]][START_NODE[1]];var finishNode=grid[FINISH_NODE[0]][FINISH_NODE[1]];var stopNode=_this.state.isThereStop?grid[STOP_NODE[0]][STOP_NODE[1]]:[];if(_this.state.isThereStop){_this.depthFirstSearchWorker.postMessage([grid,startNode,finishNode,stopNode]);_this.depthFirstSearchWorker.addEventListener('message',function(message){var animateTiming=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(message){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_this.pathGrabWorker.postMessage([message.data,true]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var animateTime=function animateTime(message,messageTwo){var nodesInShortestPathOrder;if(messageTwo.data[0][0]===false&&messageTwo.data[1][0]===false){nodesInShortestPathOrder=[startNode,stopNode,finishNode];}else if(messageTwo.data[0][0]===false){nodesInShortestPathOrder=[startNode].concat(_toConsumableArray(messageTwo.data[1]));}else if(messageTwo.data[1][0]===false){nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),[finishNode]);}else{nodesInShortestPathOrder=[].concat(_toConsumableArray(messageTwo.data[0]),_toConsumableArray(messageTwo.data[1]));}_this.animatedfs(message.data[0],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,false);setTimeout(_this.animatedfs,message.data[0].length*_this.state.animationSpeed,message.data[1],nodesInShortestPathOrder,message.data[0].length+message.data[1].length,_this.state.animationSpeed,_this.state.isThereStop,true);};animateTime(message,messageTwo);});case 2:case\"end\":return _context5.stop();}}},_callee5);}));return function animateTiming(_x5){return _ref5.apply(this,arguments);};}();animateTiming(message);});return;}else if(!_this.state.isThereStop){_this.depthFirstSearchWorker.postMessage([grid,startNode,finishNode,false]);_this.depthFirstSearchWorker.addEventListener('message',function(message){_this.pathGrabWorker.postMessage([message.data,false]);_this.pathGrabWorker.addEventListener('message',function(messageTwo){var nodesInShortestPathOrder=messageTwo.data===false?[startNode,finishNode]:messageTwo.data;_this.animatedfs(message.data,nodesInShortestPathOrder,message.data.length,_this.state.animationSpeed,_this.state.isThereStop,false);});});}};_this.animateBidirectionalAlgorithm=function(visitedNodesInOrderStart,visitedNodesInOrderFinish,nodesInShortestPathOrder,isShortedPath,animationSpeed,animationStall){var isSecondAnimation=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;_this.setState({visualizingAlgorithm:true});var animationColor;animationColor=isSecondAnimation?animationColor='node-target-visited':animationColor='node-visited';//progress tracker\nvar progress=$(\"#progressBar\");progress.replaceWith($(\"#progressBar\")).clone(true);var integralVal=_this.handleProgressSetup(_this.state.isThereStop,false,animationSpeed,visitedNodesInOrderStart.length);var len=Math.max(visitedNodesInOrderStart.length,visitedNodesInOrderFinish.length);var _loop6=function _loop6(i){var nodeA=visitedNodesInOrderStart[i];var nodeB=visitedNodesInOrderFinish[i];if(i===visitedNodesInOrderStart.length){if(isSecondAnimation&&_this.state.isThereStop)return{v:void 0};setTimeout(function(){if(isShortedPath){_this.animateShortestPath(nodesInShortestPathOrder);}else{_this.setState({visualizingAlgorithm:false});}},animationStall*animationSpeed);return{v:void 0};}setTimeout(function(){//visited nodes\nif(nodeA!==undefined){document.getElementById(\"node-\".concat(nodeA.row,\"-\").concat(nodeA.col)).className=\"node \".concat(animationColor,\" node-gap-vert node-gap-horiz\");}if(nodeB!==undefined){document.getElementById(\"node-\".concat(nodeB.row,\"-\").concat(nodeB.col)).className=\"node \".concat(animationColor,\" node-gap-vert node-gap-horiz\");}progress.width(\"+=\".concat(integralVal*2,\"%\"));},i*animationSpeed);};for(var i=1;i<=len;i++){var _ret6=_loop6(i);if(typeof _ret6===\"object\")return _ret6.v;}};_this.visualizeBidirectionalGreedySearch=function(){if(_this.state.visualizingAlgorithm||_this.state.generatingMaze){return;}_this.bidirectionalGreedySearchWorker=new WebWorker(bidirectionalGreedySearchWorker);var grid=_this.state.grid;var _startNode=_this.state.startNode;var _finishNode=_this.state.finishNode;var _stopNode=_this.state.prevStop;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var stopNode=_this.state.isThereStop?grid[_stopNode[0]][_stopNode[1]]:false;if(_this.state.isThereStop){_this.bidirectionalGreedySearchWorker.postMessage([grid,startNode,finishNode,stopNode,true]);_this.bidirectionalGreedySearchWorker.addEventListener('message',function(message){var visitedNodesInOrderStart=message.data[0][0];var visitedNodesInOrderStopFirst=message.data[0][1];var isShortedPath=message.data[0][2];var visitedNodesInOrderStopSecond=message.data[1][0];var visitedNodesInOrderFinish=message.data[1][1];var isShortedPathSecond=message.data[1][2];if(visitedNodesInOrderStart[0]!==startNode)visitedNodesInOrderStart.unshift(startNode);if(visitedNodesInOrderStopFirst[0]!==stopNode)visitedNodesInOrderStopFirst.unshift(stopNode);if(visitedNodesInOrderFinish[0]!==finishNode)visitedNodesInOrderFinish.unshift(finishNode);var animationStall=visitedNodesInOrderStart.length+visitedNodesInOrderStopFirst.length+visitedNodesInOrderStopSecond.length+visitedNodesInOrderFinish.length;var nodesInShortestPathOrderFirst=getNodesInShortestPathOrderBidirectionalGreedySearch(visitedNodesInOrderStart[visitedNodesInOrderStart.length-1],visitedNodesInOrderStopFirst[visitedNodesInOrderStopFirst.length-1],false);var nodesInShortestPathOrderSecond=getNodesInShortestPathOrderBidirectionalGreedySearch(visitedNodesInOrderStopSecond[visitedNodesInOrderStopSecond.length-1],visitedNodesInOrderFinish[visitedNodesInOrderFinish.length-1],true);var nodesInShortestPathOrder=[].concat(_toConsumableArray(nodesInShortestPathOrderFirst),_toConsumableArray(nodesInShortestPathOrderSecond));setTimeout(function(){_this.animateBidirectionalAlgorithm(visitedNodesInOrderStart,visitedNodesInOrderStopFirst,nodesInShortestPathOrder,isShortedPath,_this.state.animationSpeed,animationStall,false);},_this.state.animationSpeed);setTimeout(function(){_this.animateBidirectionalAlgorithm(visitedNodesInOrderStopSecond,visitedNodesInOrderFinish,nodesInShortestPathOrder,isShortedPathSecond,_this.state.animationSpeed,animationStall,true);},_this.state.animationSpeed*(visitedNodesInOrderStart.length-1+(visitedNodesInOrderStopFirst.length-1)));});}else if(!_this.state.isThereStop){_this.bidirectionalGreedySearchWorker.postMessage([grid,startNode,finishNode,stopNode]);_this.bidirectionalGreedySearchWorker.addEventListener('message',function(message){var visitedNodesInOrderStart=message.data[0];var visitedNodesInOrderFinish=message.data[1];if(!visitedNodesInOrderFinish[0].isFinish)visitedNodesInOrderFinish.unshift(finishNode);var isShortedPath=message.data[2];var nodesInShortestPathOrder=getNodesInShortestPathOrderBidirectionalGreedySearch(visitedNodesInOrderStart[visitedNodesInOrderStart.length-1],visitedNodesInOrderFinish[visitedNodesInOrderFinish.length-1]);setTimeout(function(){_this.animateBidirectionalAlgorithm(visitedNodesInOrderStart,visitedNodesInOrderFinish,nodesInShortestPathOrder,isShortedPath,_this.state.animationSpeed);},_this.state.animationSpeed);});}};_this.animateShortestPath=function(nodesInShortestPathOrder){var startNode=_this.state.grid[_this.state.startNode[0]][_this.state.startNode[1]];var finishNode=_this.state.grid[_this.state.finishNode[0]][_this.state.finishNode[1]];var stopNode=_this.state.isThereStop?_this.state.grid[_this.state.prevStop[0]][_this.state.prevStop[1]]:[];var stall=nodesInShortestPathOrder.length*50+2;setTimeout(function(){_this.setState({visualizingAlgorithm:false});},stall);var _loop7=function _loop7(i){setTimeout(function(){var node=nodesInShortestPathOrder[i];var currObj=document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col));if(node.row===startNode.row&&node.col===startNode.col){currObj.className='node node-shortest-path node-shortest-path-start node-no-gap-vert';}else if(node.row===finishNode.row&&node.col===finishNode.col){currObj.className='node node-shortest-path node-shortest-path-finish';}else if(_this.state.isThereStop&&node.row===stopNode.row&&node.col===stopNode.col){currObj.className='node node-shortest-path node-shortest-path-stop';}else if(document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className.includes('node-shortest-path')){$(\"#node-\".concat(node.row,\"-\").concat(node.col)).replaceWith($(\"#node-\".concat(node.row,\"-\").concat(node.col)).clone(true));}else{currObj.className='node node-shortest-path';}},50*i);};for(var i=0;i<nodesInShortestPathOrder.length;i++){_loop7(i);}};_this.animateMaze=function(walls){var _loop8=function _loop8(i){if(i===walls.length){setTimeout(function(){_this.setState({generatingMaze:false});},i*10);return{v:void 0};}setTimeout(function(){var wall=walls[i];var node=_this.state.grid[wall[0]][wall[1]];node.isWall=true;document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className=\"node node-wall\";},i*10);};for(var i=0;i<=walls.length;i++){var _ret7=_loop8(i);if(typeof _ret7===\"object\")return _ret7.v;}};_this.getNewGridWithMaze=function(walls){var grid=_this.state.grid;var newGrid=grid.slice();var _iterator=_createForOfIteratorHelper(walls),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var wall=_step.value;var node=grid[wall[0]][wall[1]];var newNode=_objectSpread(_objectSpread({},node),{},{isWall:true});newGrid[wall[0]][wall[1]]=newNode;}}catch(err){_iterator.e(err);}finally{_iterator.f();}_this.setState({grid:newGrid,generatingMaze:false});return;};_this.state={grid:[],mouseIsPressed:false,showNav:false,currItemDesc:'Start',currItemObj:itemData[0],currAlgObj:algData[0],currAlgTab:0,currMazeAlg:'Recursive Division Maze',rowNum:24,colNum:49,currMazeTab:0,startNode:[9,1],finishNode:[9,47],startIsMoving:false,finishIsMoving:false,isThereStop:false,stopIsMoving:false,prevStop:[],generatingMaze:false,visualizingAlgorithm:false,animationSpeed:20,gridClean:true,maze:false};return _this;}//reminder!!\n// row is width\n// col is height\n_createClass(MainContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var handleResize=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var height,width,grid;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:height=window.innerHeight;width=window.innerWidth;if(!(width<500)){_context6.next=7;break;}_context6.next=5;return _this2.setState({rowNum:24,colNum:12,startNode:[12,1],finishNode:[12,10]});case 5:_context6.next=20;break;case 7:if(!(width<1000&&width>500)){_context6.next=12;break;}_context6.next=10;return _this2.setState({rowNum:30,colNum:23,startNode:[15,1],finishNode:[15,21]});case 10:_context6.next=20;break;case 12:if(!(width<1200&&width>1000)){_context6.next=17;break;}_context6.next=15;return _this2.setState({rowNum:24,colNum:35,startNode:[15,1],finishNode:[15,21]});case 15:_context6.next=20;break;case 17:if(!(width>1200)){_context6.next=20;break;}_context6.next=20;return _this2.setState({rowNum:24,colNum:49,startNode:[12,1],finishNode:[12,47]});case 20:grid=renderGrid(_this2.state,_this2.state.rowNum,_this2.state.colNum);_this2.setState({grid:grid});case 22:case\"end\":return _context6.stop();}}},_callee6);}));return function handleResize(){return _ref6.apply(this,arguments);};}();var resizeTimer;window.addEventListener('resize',function(){clearTimeout(resizeTimer);resizeTimer=setTimeout(function(){handleResize();},250);});// const grid = renderGrid(this.state, this.state.rowNum, this.state.colNum)\n// this.setState({grid: grid});\nhandleResize();}},{key:\"generateRandomMaze\",value:function generateRandomMaze(){var _this3=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({generatingMaze:true});setTimeout(function(){var grid=_this3.state.grid;var _startNode=_this3.state.startNode;var _finishNode=_this3.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var stopNode=_this3.state.isThereStop?grid[_this3.state.prevStop[0]][_this3.state.prevStop[1]]:false;var walls=_this3.state.isThereStop?randomMaze(grid,startNode,finishNode,true,stopNode):randomMaze(grid,startNode,finishNode,false);_this3.animateMaze(walls);},10);}},{key:\"generateRecursiveDivisionMaze\",value:function generateRecursiveDivisionMaze(){var _this4=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({generatingMaze:true});setTimeout(function(){var grid=_this4.state.grid;var _startNode=_this4.state.startNode;var _finishNode=_this4.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var stopNode=_this4.state.isThereStop?grid[_this4.state.prevStop[0]][_this4.state.prevStop[1]]:false;var walls=_this4.state.isThereStop?recursiveDivisionMaze(grid,startNode,finishNode,true,stopNode):recursiveDivisionMaze(grid,startNode,finishNode,false,stopNode);_this4.animateMaze(walls);},10);}},{key:\"generateVerticalMaze\",value:function generateVerticalMaze(){var _this5=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({generatingMaze:true});setTimeout(function(){var grid=_this5.state.grid;var _startNode=_this5.state.startNode;var _finishNode=_this5.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var stopNode=_this5.state.isThereStop?grid[_this5.state.prevStop[0]][_this5.state.prevStop[1]]:false;var walls=_this5.state.isThereStop?verticalMaze(grid,startNode,finishNode,true,stopNode):verticalMaze(grid,startNode,finishNode,false);_this5.animateMaze(walls);},10);}},{key:\"generateHorizontalMaze\",value:function generateHorizontalMaze(){var _this6=this;if(this.state.visualizingAlgorithm||this.state.generatingMaze){return;}this.setState({generatingMaze:true});setTimeout(function(){var grid=_this6.state.grid;var _startNode=_this6.state.startNode;var _finishNode=_this6.state.finishNode;var startNode=grid[_startNode[0]][_startNode[1]];var finishNode=grid[_finishNode[0]][_finishNode[1]];var stopNode=_this6.state.isThereStop?grid[_this6.state.prevStop[0]][_this6.state.prevStop[1]]:false;var walls=_this6.state.isThereStop?horizontalMaze(grid,startNode,finishNode,true,stopNode):horizontalMaze(grid,startNode,finishNode,false);_this6.animateMaze(walls);},10);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid-info-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid-text-container\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"grid-text\",children:[\"Current-algorithim: \",/*#__PURE__*/_jsx(\"span\",{className:\"grid-alg-text\",children:this.state.currAlgObj.name})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress progress-no-stop\",id:\"progressBar\"})})]}),/*#__PURE__*/_jsx(NavTop,{state:this.state,handleMiniMazeTabs:this.handleMiniMazeTabs,handleMiniTabs:this.handleMiniTabs,clearGrid:this.clearGrid,resetGrid:this.resetGrid,toggleNav:this.handleNav,handleSpeedChange:this.handleSpeedChange,handleMazeTabs:this.handleMazeTabs,genMaze:this.generateMaze,play:this.playAnimation,handleTabs:this.handleTabs,handleItemChange:this.handleItemDescChange}),/*#__PURE__*/_jsx(\"div\",{className:\"visualizer-container\",children:/*#__PURE__*/_jsx(Visualizer,{state:this.state,handleMouseDown:this.handleMouseDown,handleMouseEnter:this.handleMouseEnter,handleMouseUp:this.handleMouseUp})}),window.innerWidth>1000&&/*#__PURE__*/_jsx(Navbar,{state:this.state,toggleNav:this.handleNav,handleSpeedChange:this.handleSpeedChange,handleMazeTabs:this.handleMazeTabs,genMaze:this.generateMaze,play:this.playAnimation,handleTabs:this.handleTabs,handleItemChange:this.handleItemDescChange,visualizeDijkstra:this.visualizeDijkstra})]});}}]);return MainContainer;}(Component);export{MainContainer as default};var renderGrid=function renderGrid(state,_rowNum,_colNum){var grid=[];var rowNum=_rowNum;var colNum=_colNum;for(var row=0;row<rowNum;row++){var currentRow=[];for(var col=0;col<colNum;col++){var node=createNode(col,row,state);node.className='node';currentRow.push(node);}grid.push(currentRow);}return grid;};var createNode=function createNode(col,row,state){var startNode=state.startNode;var finishNode=state.finishNode;var stopNode=state.prevStop;return{col:col,row:row,isStart:row===startNode[0]&&col===startNode[1],isFinish:row===finishNode[0]&&col===finishNode[1],isStop:state.isThereStop?row===stopNode[0]&&col===stopNode[1]:false,isWall:false,previousNode:null,previousNodeSecond:null,isVisited:false,isVisitedSecond:false,distance:Infinity,distanceSecond:Infinity};};var getNewGridWithStart=function getNewGridWithStart(grid,row,col,prevStart){var newGrid=grid.slice();var newStart=newGrid[row][col];var oldStart=newGrid[prevStart[0]][prevStart[1]];var oldNode=_objectSpread(_objectSpread({},oldStart),{},{isStart:!oldStart.isStart});var newNode=_objectSpread(_objectSpread({},newStart),{},{isStart:!newStart.isStart,isWall:false});newGrid[row][col]=newNode;newGrid[prevStart[0]][prevStart[1]]=oldNode;return newGrid;};var getNewGridWithFinish=function getNewGridWithFinish(grid,row,col,prevFinish){var newGrid=grid.slice();var newFinish=newGrid[row][col];var oldFinish=newGrid[prevFinish[0]][prevFinish[1]];var oldNode=_objectSpread(_objectSpread({},oldFinish),{},{isFinish:!oldFinish.isFinish});var newNode=_objectSpread(_objectSpread({},newFinish),{},{isFinish:!newFinish.isFinish,isWall:false});newGrid[row][col]=newNode;newGrid[prevFinish[0]][prevFinish[1]]=oldNode;return newGrid;};var getNewGridWithWallToggled=function getNewGridWithWallToggled(grid,row,col){var newGrid=grid.slice();var node=newGrid[row][col];var newNode=_objectSpread({},node);newNode=_objectSpread(_objectSpread({},node),{},{isWall:!node.isWall});newGrid[row][col]=newNode;return newGrid;};var getNewGridWithStopToggled=function getNewGridWithStopToggled(grid,row,col,prevStop){var newGrid=grid.slice();var newStop=newGrid[row][col];if(prevStop.length===0){var _newNode=_objectSpread(_objectSpread({},newStop),{},{isStop:!newStop.isStop,isWall:false});newGrid[row][col]=_newNode;return newGrid;}var oldStop=newGrid[prevStop[0]][prevStop[1]];var oldNode=_objectSpread(_objectSpread({},oldStop),{},{isStop:!oldStop.isStop});var newNode=_objectSpread(_objectSpread({},newStop),{},{isStop:!newStop.isStop,isWall:false});newGrid[row][col]=newNode;newGrid[prevStop[0]][prevStop[1]]=oldNode;return newGrid;};var getGridWithoutPath=function getGridWithoutPath(grid){var minorReset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var newGrid=grid.slice();var _iterator2=_createForOfIteratorHelper(grid),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var row=_step2.value;var _iterator3=_createForOfIteratorHelper(row),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var node=_step3.value;var wall=false;var stop=false;if(minorReset){if(grid[node.row][node.col].isWall)wall=true;if(grid[node.row][node.col].isStop)stop=true;}var newNode=_objectSpread(_objectSpread({},node),{},{distance:Infinity,distanceSecond:Infinity,totalDistance:Infinity,isVisited:false,isVisitedSecond:false,isShortest:false,previousNode:null,isWall:wall,isWeight:false,isStop:stop});newGrid[node.row][node.col]=newNode;}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return newGrid;};function getNodesInShortestPathOrderBidirectionalGreedySearch(nodeA,nodeB){var second=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var nodesInShortestPathOrder=[];var currentNode=nodeB;while(currentNode!==null){nodesInShortestPathOrder.push(currentNode);if(second){currentNode=currentNode.previousNodeSecond;}else{currentNode=currentNode.previousNode;}}currentNode=nodeA;while(currentNode!==null){nodesInShortestPathOrder.unshift(currentNode);if(second){currentNode=currentNode.previousNodeSecond;}else{currentNode=currentNode.previousNode;}}return nodesInShortestPathOrder;}","map":{"version":3,"names":["React","Component","$","Visualizer","randomMaze","verticalMaze","horizontalMaze","recursiveDivisionMaze","Navbar","NavTop","itemData","algData","pathGrabWorker","_dijkstraWorker","aStarWorker","greedyBestFirstSearchWorker","breadthFirstSearchWorker","depthFirstSearchWorker","bidirectionalGreedySearchWorker","WebWorker","MainContainer","props","handleMouseDown","row","col","newGrid","state","grid","node","visualizingAlgorithm","generatingMaze","isStart","setState","startIsMoving","isFinish","finishIsMoving","currItemDesc","stopIsMoving","isThereStop","isStop","getNewGridWithWallToggled","mouseIsPressed","handleMouseEnter","getNewGridWithStart","startNode","getNewGridWithFinish","finishNode","getNewGridWithStopToggled","prevStop","handleMouseUp","handleNav","showNav","handleItemDescChange","e","item","newItem","map","_item","id","currItemObj","handleTabs","val","target","dataset","currAlgTab","currAlgObj","handleMiniTabs","length","handleMazeTabs","parseInt","currMazeTab","handleMiniMazeTabs","up","handleSpeedChange","currSpeed","animationSpeed","generateMaze","gridClean","maze","currAlg","generateRecursiveDivisionMaze","generateVerticalMaze","generateHorizontalMaze","generateRandomMaze","resetGrid","document","getElementsByClassName","style","width","rowNum","colNum","stopNode","getElementById","className","isWall","getGridWithoutPath","clearGrid","playAnimation","visualizeDijkstra","visualizeaStar","visualizbfs","visualizegbfs","visualizedfs","visualizeBidirectionalGreedySearch","handleProgressSetup","isSecondAnimation","animationDuration","progressBar","addEventListener","classList","remove","animateDijkstra","visitedNodesInOrder","nodesInShortestPathOrder","animationStall","animationColor","progress","integralVal","i","setTimeout","animateShortestPath","dijkstraWorker","START_NODE","FINISH_NODE","STOP_NODE","postMessage","message","animateTiming","data","messageTwo","animateTime","animateaStar","replaceWith","clone","animatebfs","animategbfs","animatedfs","animateBidirectionalAlgorithm","visitedNodesInOrderStart","visitedNodesInOrderFinish","isShortedPath","len","Math","max","nodeA","nodeB","undefined","_startNode","_finishNode","_stopNode","visitedNodesInOrderStopFirst","visitedNodesInOrderStopSecond","isShortedPathSecond","unshift","nodesInShortestPathOrderFirst","getNodesInShortestPathOrderBidirectionalGreedySearch","nodesInShortestPathOrderSecond","stall","currObj","includes","animateMaze","walls","wall","getNewGridWithMaze","slice","newNode","currMazeAlg","handleResize","height","window","innerHeight","innerWidth","renderGrid","resizeTimer","clearTimeout","name","_rowNum","_colNum","currentRow","createNode","push","previousNode","previousNodeSecond","isVisited","isVisitedSecond","distance","Infinity","distanceSecond","prevStart","newStart","oldStart","oldNode","prevFinish","newFinish","oldFinish","newStop","oldStop","minorReset","stop","totalDistance","isShortest","isWeight","second","currentNode"],"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/components/MainContainer.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport $ from 'jquery' \nimport Visualizer from './PathFindingVisualizer/Visualizer'\nimport { randomMaze } from '../mazeAlgorithims/randomMaze';\nimport { verticalMaze } from '../mazeAlgorithims/verticalMaze';\nimport { horizontalMaze } from '../mazeAlgorithims/HorizontalMaze';\nimport { recursiveDivisionMaze } from '../mazeAlgorithims/recursiveDivisionMaze';\nimport Navbar from './navComponents/Navbar';\nimport NavTop from './navComponents/sideNav';\nimport itemData from '../data/item-data'\nimport algData from '../data/alg-data'\nimport pathGrabWorker from '../workers/pathGrabWorker';\nimport _dijkstraWorker from \"../workers/dijkstraWorker\";\nimport aStarWorker from '../workers/aStarWorker'\nimport greedyBestFirstSearchWorker from '../workers/greedyBestFirstSearchWorker';\nimport breadthFirstSearchWorker from '../workers/breadthFirstSearchWorker';\nimport depthFirstSearchWorker from '../workers/depthFirstSearchWorker';\nimport bidirectionalGreedySearchWorker from '../workers/bidirectionalGreedySearchWorker';\nimport WebWorker from \"../workers/workerSetup\";\nimport './mainContainer.css'\n\nexport default class MainContainer extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            grid: [],\n            mouseIsPressed: false,\n            showNav: false,\n            currItemDesc: 'Start',\n            currItemObj: itemData[0],\n            currAlgObj: algData[0],\n            currAlgTab: 0,\n            currMazeAlg: 'Recursive Division Maze',\n            rowNum: 24,\n            colNum: 49,\n            currMazeTab: 0,\n            startNode: [9, 1],\n            finishNode: [9, 47],\n            startIsMoving: false,\n            finishIsMoving: false,\n            isThereStop: false,\n            stopIsMoving: false,\n            prevStop: [],\n            generatingMaze: false,\n            visualizingAlgorithm: false,\n            animationSpeed: 20,\n            gridClean: true,\n            maze: false\n        }\n    }\n    //reminder!!\n    // row is width\n    // col is height\n    componentDidMount() {\n\n      const handleResize = async () => {\n        var height = window.innerHeight\n        var width = window.innerWidth\n\n        if(width < 500) {\n          await this.setState({rowNum: 24, colNum: 12, startNode: [12,1], finishNode:[12, 10]})\n        } else if(width < 1000 && width > 500) {\n          await this.setState({rowNum: 30, colNum: 23, startNode: [15,1], finishNode:[15, 21]})\n        } else if(width < 1200 && width > 1000) {\n          await this.setState({rowNum: 24, colNum: 35, startNode: [15,1], finishNode:[15, 21]})\n        } else if(width > 1200) {\n          await this.setState({rowNum: 24, colNum: 49, startNode: [12,1], finishNode:[12, 47]})\n        }\n\n        const grid = renderGrid(this.state, this.state.rowNum, this.state.colNum)\n        this.setState({grid: grid});\n      }\n      \n      var resizeTimer;\n\n      window.addEventListener('resize', () => {\n\n        clearTimeout(resizeTimer);\n\n        resizeTimer = setTimeout(function() {\n      \n          handleResize()\n                  \n        }, 250);\n      })\n\n      // const grid = renderGrid(this.state, this.state.rowNum, this.state.colNum)\n      // this.setState({grid: grid});\n      handleResize()\n    }\n\n    handleMouseDown = (row, col) => {\n\n        var newGrid = this.state.grid\n        var node = newGrid[row][col]\n\n        if(this.state.visualizingAlgorithm || this.state.generatingMaze) return\n\n        if(this.state.grid[row][col].isStart){\n          this.setState({startIsMoving: true})\n          newGrid = this.state.grid\n        } else if(this.state.grid[row][col].isFinish){\n          this.setState({finishIsMoving: true})\n          newGrid = this.state.grid\n        } else if(this.state.currItemDesc === 'Stop'){\n          this.setState({stopIsMoving: true, isThereStop: true})\n        } else if(this.state.currItemDesc === 'Wall' && (!node.isStart && !node.isFinish && !node.isStop)) {\n          newGrid = getNewGridWithWallToggled( newGrid, row, col)   \n        }\n        this.setState({grid: newGrid, mouseIsPressed: true});\n    }\n    \n    handleMouseEnter = (row, col) => {\n\n        if (!this.state.mouseIsPressed) return;\n\n        var newGrid = this.state.grid;\n        var node = newGrid[row][col]\n\n        if( node.isStart || node.isStop || node.isFinish || this.state.visualizingAlgorithm || this.state.generatingMaze) return\n\n        if(this.state.startIsMoving){\n          newGrid = getNewGridWithStart(this.state.grid, row, col, this.state.startNode)\n          this.setState({startNode: [row, col]})\n        } else if(this.state.finishIsMoving){\n          newGrid = getNewGridWithFinish(this.state.grid, row, col, this.state.finishNode)\n          this.setState({finishNode: [row, col]})\n        } else if(this.state.currItemDesc === 'Stop'){\n          newGrid = getNewGridWithStopToggled(this.state.grid, row, col, this.state.prevStop);\n          this.setState({prevStop: [row, col]})\n        } else if(this.state.currItemDesc === 'Wall' && (!node.isStart && !node.isFinish && !node.isStop)) {\n          newGrid = getNewGridWithWallToggled( newGrid, row, col);\n        }\n        this.setState({grid: newGrid});\n    }\n    \n    handleMouseUp = (row, col) => {\n        this.setState({mouseIsPressed: false, startIsMoving: false, finishIsMoving: false});\n    }\n\n    handleNav = () => {\n      this.setState({showNav: !this.state.showNav})\n    }\n\n    //navBar functions\n    handleItemDescChange = (e, item) => {\n      var newItem = `${item}`\n      itemData.map((_item) => {\n        if(item === _item.id) this.setState({currItemDesc: newItem, currItemObj: _item})\n\n        return _item\n      })\n    }\n\n    handleTabs = (e) => {\n      var val = e.target.dataset.val\n      this.setState({currAlgTab: val, currAlgObj: algData[val]})\n    }\n\n    handleMiniTabs = (e) => {\n      var val = this.state.currAlgTab\n      if(val+1 > algData.length-1){\n        val = 0\n      } else {\n        val++\n      }\n\n      this.setState({currAlgTab: val, currAlgObj: algData[val]})\n    }\n\n    handleMazeTabs = (e) => {\n      var val = parseInt(e.target.dataset.val)\n      this.setState({currMazeTab: val})\n    }\n\n    handleMiniMazeTabs = (up) => {\n      var val = this.state.currMazeTab\n\n      if(up) {\n        if(val <= 0) {\n          this.setState({currMazeTab: 3})\n          return\n        }\n        val--\n      } else {\n        if(val >= 3) {\n          this.setState({currMazeTab: 0})\n          return\n        }\n        val++\n      }\n\n      this.setState({currMazeTab: val})\n    }\n\n    handleSpeedChange = (e, val) => {\n      var currSpeed = this.state.animationSpeed\n\n      if(val && currSpeed > 5){\n        this.setState({animationSpeed: currSpeed-5})\n      } if(!val && currSpeed < 35){\n        this.setState({animationSpeed: currSpeed+5})\n      }\n    }\n\n    generateMaze = (e) => {\n\n      if(this.state.generatingMaze || this.state.visualizingAlgorithm || !this.state.gridClean || this.state.maze) return\n\n      this.setState({maze: true})\n\n      var currAlg = this.state.currMazeTab\n \n      if(currAlg===0){\n        this.generateRecursiveDivisionMaze()\n      } else if(currAlg===1){\n        this.generateVerticalMaze()\n      } else if(currAlg===2){\n        this.generateHorizontalMaze()\n      } else if(currAlg===3){\n        this.generateRandomMaze()\n      }\n    }\n\n    resetGrid = () => {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      document.getElementsByClassName('progress')[0].style.width = '0%'\n\n      var rowNum = this.state.rowNum\n      var colNum = this.state.colNum\n\n      const grid = this.state.grid\n      const startNode = this.state.startNode\n      const finishNode = this.state.finishNode\n      const stopNode = this.state.isThereStop ? this.state.prevStop : false\n\n      for (let row = 0; row < rowNum; row++) {\n        for (let col = 0; col < colNum; col++) {\n          if ( (row === startNode[0] && col === startNode[1])) \n          {\n            document.getElementById(`node-${row}-${col}`).className = \"node node-start\";\n          } else if((row === finishNode[0] && col === finishNode[1]))\n          {\n            document.getElementById(`node-${row}-${col}`).className = \"node node-finish\";\n          } else if(stopNode !== false && (row === stopNode[0] && col === stopNode[1]))\n          {\n            document.getElementById(`node-${row}-${col}`).className = \"node node-stop\";\n          } else if(grid[row][col].isWall)\n          {\n            document.getElementById(`node-${row}-${col}`).className = \"node node-wall\";\n          } else {\n            document.getElementById(`node-${row}-${col}`).className = \"node\";\n          }\n        }\n      }\n      const newGrid = getGridWithoutPath(this.state.grid, true);\n      this.setState({\n        grid: newGrid,\n        visualizingAlgorithm: false,\n        generatingMaze: false,\n        gridClean: true,\n        maze: false\n      });\n    }\n\n    clearGrid = () => {\n\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      document.getElementsByClassName('progress')[0].style.width = '0%'\n      \n      var rowNum = this.state.rowNum\n      var colNum = this.state.colNum\n\n      const startNode = this.state.startNode\n      const finishNode = this.state.finishNode\n\n      for (let row = 0; row < rowNum; row++) {\n        for (let col = 0; col < colNum; col++) {\n          if ( (row === startNode[0] && col === startNode[1])) \n          {\n            document.getElementById(`node-${row}-${col}`).className = \"node node-start\";\n          } else if((row === finishNode[0] && col === finishNode[1]))\n          {\n            document.getElementById(`node-${row}-${col}`).className = \"node node-finish\";\n          } else \n          {\n            document.getElementById(`node-${row}-${col}`).className = \"node\";\n          }\n        }\n      }\n      const newGrid = getGridWithoutPath(this.state.grid);\n      this.setState({\n        grid: newGrid,\n        visualizingAlgorithm: false,\n        generatingMaze: false,\n        prevStop: [],\n        isThereStop: false  ,\n        gridClean: true,\n        maze: false\n      });\n    }\n\n    // play animation\n\n    playAnimation = (e) => {\n\n      if(this.state.generatingMaze || this.state.visualizingAlgorithm || !this.state.gridClean) return\n\n      var currAlg = this.state.currAlgObj.id\n      this.setState({\n        gridClean: false,\n        visualizingAlgorithm: true,\n        showNav: false\n      })\n      if(currAlg===0){\n        this.visualizeDijkstra()\n      } else if(currAlg===1){\n        this.visualizeaStar()\n      } else if(currAlg===4){\n        this.visualizbfs()\n      } else if(currAlg===2){\n        this.visualizegbfs()\n      } else if(currAlg===5){\n        this.visualizedfs()\n      } else if(currAlg===3){\n        this.visualizeBidirectionalGreedySearch()\n      }\n      return\n    }\n\n    handleProgressSetup = (\n      isThereStop, \n      isSecondAnimation, \n      animationSpeed,\n      animationDuration,\n    ) => {\n\n      const progressBar = document.getElementById(`progressBar`)\n      progressBar.className = 'progress progress-no-stop'\n      \n      if(!isThereStop) {\n\n        progressBar.className = 'progress progress-no-stop-anime'\n        progressBar.style.animationDuration = `${(animationDuration*animationSpeed/1000)}s`\n        progressBar.addEventListener('animationend', () => {\n          progressBar.classList.remove('progress-no-stop-anime')\n          progressBar.className = 'progress progress-no-stop'\n        })\n        return 100/animationDuration\n\n      } else if(!isSecondAnimation && isThereStop) {\n\n        progressBar.className = 'progress progress-no-stop-anime'\n        progressBar.style.animationDuration = `${(animationDuration*animationSpeed/1000)}s`\n        progressBar.addEventListener('animationend', () => {\n          progressBar.classList.remove('progress-no-stop-anime')\n          progressBar.className = 'progress progress-no-stop'\n        })\n        return 50/animationDuration\n\n      } else if(isSecondAnimation && isThereStop) {\n\n        progressBar.className = 'progress progress-stop-anime'\n        progressBar.style.animationDuration = `${(animationDuration*animationSpeed/1000)}s`\n        progressBar.addEventListener('animationend', () => {\n          progressBar.classList.remove('progress-stop-anime')\n          progressBar.className = 'progress progress-stop'\n        })\n        return 50/animationDuration\n\n      }\n    }\n\n    //animte dijkstra\n\n    animateDijkstra = (\n      visitedNodesInOrder, \n      nodesInShortestPathOrder, \n      animationStall,\n      animationSpeed=10, \n      isThereStop=false,\n      isSecondAnimation=false\n    ) => {\n\n      var animationColor;\n\n      animationColor = isSecondAnimation ? animationColor = 'node-target-visited' : animationColor = 'node-visited'\n\n      //progressTracker\n      const progress = $(\"#progressBar\")\n\n      var integralVal = this.handleProgressSetup(\n        isThereStop,\n        isSecondAnimation,\n        animationSpeed,\n        visitedNodesInOrder.length\n      )\n\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n\n        if (i === visitedNodesInOrder.length) {\n\n          if(isSecondAnimation && isThereStop) return\n\n          setTimeout(this.animateShortestPath, animationStall*animationSpeed, nodesInShortestPathOrder)\n\n          return;\n        }\n        setTimeout(() => {\n          const node = visitedNodesInOrder[i];\n            document.getElementById(`node-${node.row}-${node.col}`).className = `node ${animationColor} node-gap-vert node-gap-horiz`;\n            progress.width(`+=${integralVal}%`)\n          }, animationSpeed * i);\n      }\n    }\n    \n    visualizeDijkstra = () => {\n\n      this.dijkstraWorker = new WebWorker(_dijkstraWorker)\n\n      this.pathGrabWorker = new WebWorker(pathGrabWorker)\n\n      var grid = this.state.grid;\n      const START_NODE = this.state.startNode\n      const FINISH_NODE = this.state.finishNode\n      const STOP_NODE = this.state.prevStop\n      const startNode = grid[START_NODE[0]][START_NODE[1]];\n      const finishNode = grid[FINISH_NODE[0]][FINISH_NODE[1]];\n      const stopNode = this.state.isThereStop ? grid[STOP_NODE[0]][STOP_NODE[1]] : []\n      if(this.state.isThereStop){\n\n        this.dijkstraWorker.postMessage([grid, startNode, finishNode, stopNode])\n\n        this.dijkstraWorker.addEventListener('message', (message) => {\n            \n            const animateTiming = async (message) => {\n\n                this.pathGrabWorker.postMessage([message.data, true])\n\n                this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n                    const animateTime = (message, messageTwo) => {\n\n                      var nodesInShortestPathOrder;\n\n                      if(messageTwo.data[0][0] === false && messageTwo.data[1][0] === false) {\n                        nodesInShortestPathOrder = [startNode, stopNode, finishNode]\n                      } else if(messageTwo.data[0][0] === false) {\n                        nodesInShortestPathOrder = [startNode, ...messageTwo.data[1]]\n                      } else if(messageTwo.data[1][0] === false) {\n                        nodesInShortestPathOrder = [...messageTwo.data[0], finishNode]\n                      } else {\n                        nodesInShortestPathOrder = [...messageTwo.data[0], ...messageTwo.data[1]]\n                      }\n\n                      this.animateDijkstra(\n                        message.data[0], \n                        nodesInShortestPathOrder, \n                        (message.data[0].length+message.data[1].length), \n                        this.state.animationSpeed, \n                        this.state.isThereStop,\n                        false\n                      )\n\n                      setTimeout(this.animateDijkstra, \n                        message.data[0].length * this.state.animationSpeed, \n                        message.data[1], \n                        nodesInShortestPathOrder,\n                        (message.data[0].length+message.data[1].length), \n                        this.state.animationSpeed, \n                        this.state.isThereStop, \n                        true\n                      )\n                    }\n\n                    animateTime(message, messageTwo)\n                })\n            }\n            animateTiming(message)\n        })\n\n        return\n\n      } else if(!this.state.isThereStop){\n\n        this.dijkstraWorker.postMessage([grid, startNode, finishNode, false])\n\n        this.dijkstraWorker.addEventListener('message', (message) => {\n\n            this.pathGrabWorker.postMessage([message.data, false])\n\n            this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n              var nodesInShortestPathOrder = messageTwo.data === false ? [startNode, finishNode] : messageTwo.data\n\n              this.animateDijkstra(\n                message.data, \n                nodesInShortestPathOrder, \n                message.data.length, \n                this.state.animationSpeed, \n                this.state.isThereStop\n              )\n\n            })\n        })\n      }\n    }\n\n    //animate aStar\n\n    animateaStar = (\n      visitedNodesInOrder, \n      nodesInShortestPathOrder,\n      animationStall, \n      animationSpeed,\n      isThereStop, \n      isSecondAnimation=false\n    ) => {\n\n      var animationColor\n\n      animationColor = isSecondAnimation ? animationColor = 'node-target-visited' : animationColor = 'node-visited'\n\n      //progress tracker\n      const progress = $(\"#progressBar\")\n      progress.replaceWith($(\"#progressBar\")).clone(true)\n\n      var integralVal = this.handleProgressSetup(\n        isThereStop,\n        isSecondAnimation,\n        animationSpeed,\n        visitedNodesInOrder.length\n      )\n\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n        if (i === visitedNodesInOrder.length) {\n\n          if(isSecondAnimation && isThereStop) return\n\n          setTimeout(this.animateShortestPath, animationStall*animationSpeed, nodesInShortestPathOrder)\n\n          return;\n        }\n        setTimeout(() => {\n            const node = visitedNodesInOrder[i];\n            document.getElementById(`node-${node.row}-${node.col}`).className = `node ${animationColor} node-gap-vert node-gap-horiz`;\n            progress.width(`+=${integralVal}%`)\n          }, animationSpeed * i);\n      }\n    }\n\n    visualizeaStar = () => {\n\n      this.aStarWorker = new WebWorker(aStarWorker)\n\n      this.pathGrabWorker = new WebWorker(pathGrabWorker)\n\n      var grid = this.state.grid;\n      const START_NODE = this.state.startNode\n      const FINISH_NODE = this.state.finishNode\n      const STOP_NODE = this.state.prevStop\n      const startNode = grid[START_NODE[0]][START_NODE[1]];\n      const finishNode = grid[FINISH_NODE[0]][FINISH_NODE[1]];\n      const stopNode = this.state.isThereStop ? grid[STOP_NODE[0]][STOP_NODE[1]] : []\n\n      if(this.state.isThereStop) {\n        this.aStarWorker.postMessage([grid, startNode, finishNode, stopNode])\n\n        this.aStarWorker.addEventListener('message', (message) => {\n            \n          const animateTiming = async (message) => {\n\n            this.pathGrabWorker.postMessage([message.data, true])\n\n            this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n                const animateTime = (message, messageTwo) => {\n\n                  var nodesInShortestPathOrder;\n\n                  if(messageTwo.data[0][0] === false && messageTwo.data[1][0] === false) {\n                    nodesInShortestPathOrder = [startNode, stopNode, finishNode]\n                  } else if(messageTwo.data[0][0] === false) {\n                    nodesInShortestPathOrder = [startNode, ...messageTwo.data[1]]\n                  } else if(messageTwo.data[1][0] === false) {\n                    nodesInShortestPathOrder = [...messageTwo.data[0], finishNode]\n                  } else {\n                    nodesInShortestPathOrder = [...messageTwo.data[0], ...messageTwo.data[1]]\n                  }\n\n                  this.animateaStar(\n                    message.data[0], \n                    nodesInShortestPathOrder, \n                    (message.data[0].length+message.data[1].length), \n                    this.state.animationSpeed, \n                    this.state.isThereStop,\n                    false\n                  )\n\n                  setTimeout(this.animateaStar, \n                    message.data[0].length * this.state.animationSpeed, \n                    message.data[1], \n                    nodesInShortestPathOrder,\n                    (message.data[0].length+message.data[1].length), \n                    this.state.animationSpeed, \n                    this.state.isThereStop, \n                    true\n                  )\n                }\n\n                animateTime(message, messageTwo)\n            })\n        }\n        animateTiming(message)\n    })\n          return\n          \n      } else if(!this.state.isThereStop){\n\n          this.aStarWorker.postMessage([grid, startNode, finishNode, false])\n\n          this.aStarWorker.addEventListener('message', (message) => {\n\n              this.pathGrabWorker.postMessage([message.data, false])\n\n              this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n                var nodesInShortestPathOrder = messageTwo.data === false ? [startNode, finishNode] : messageTwo.data\n\n                this.animateaStar(\n                  message.data, \n                  nodesInShortestPathOrder, \n                  message.data.length,\n                  this.state.animationSpeed,\n                  this.state.isThereStop,\n                  false\n                )\n\n              })\n          })\n      }\n    }\n\n    //animate breadth first search \n\n    animatebfs = (\n      visitedNodesInOrder, \n      nodesInShortestPathOrder, \n      animationStall,\n      animationSpeed, \n      isThereStop,\n      isSecondAnimation=false\n    ) => {\n\n      var animationColor\n\n      animationColor = isSecondAnimation ? animationColor = 'node-target-visited' : animationColor = 'node-visited'\n\n      //progress tracker\n      const progress = $(\"#progressBar\")\n      progress.replaceWith($(\"#progressBar\")).clone(true)\n\n      var integralVal = this.handleProgressSetup(\n        isThereStop,\n        isSecondAnimation,\n        animationSpeed,\n        visitedNodesInOrder.length\n      )\n\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n        if (i === visitedNodesInOrder.length) {\n\n          if(isSecondAnimation && isThereStop) return\n          \n          setTimeout(this.animateShortestPath, animationSpeed*animationStall, nodesInShortestPathOrder)\n\n          return;\n          }\n        setTimeout(() => {\n          const node = visitedNodesInOrder[i];\n          document.getElementById(`node-${node.row}-${node.col}`).className = `node ${animationColor} node-gap-vert node-gap-horiz`;\n          progress.width(`+=${integralVal}%`)\n        }, animationSpeed * i);\n      }\n    }\n\n    visualizbfs = () => {\n      \n      this.breadthFirstSearchWorker = new WebWorker(breadthFirstSearchWorker)\n\n      this.pathGrabWorker = new WebWorker(pathGrabWorker)\n\n      var grid = this.state.grid;\n      const START_NODE = this.state.startNode\n      const FINISH_NODE = this.state.finishNode\n      const STOP_NODE = this.state.prevStop\n      const startNode = grid[START_NODE[0]][START_NODE[1]];\n      const finishNode = grid[FINISH_NODE[0]][FINISH_NODE[1]];\n      const stopNode = this.state.isThereStop ? grid[STOP_NODE[0]][STOP_NODE[1]] : []\n\n      if(this.state.isThereStop){\n\n        this.breadthFirstSearchWorker.postMessage([grid, startNode, finishNode, stopNode])\n\n        this.breadthFirstSearchWorker.addEventListener('message', (message) => {\n                       \n            const animateTiming = async (message) => {\n\n              this.pathGrabWorker.postMessage([message.data, true])\n\n              this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n                  const animateTime = (message, messageTwo) => {\n\n                    var nodesInShortestPathOrder;\n\n                    if(messageTwo.data[0][0] === false && messageTwo.data[1][0] === false) {\n                      nodesInShortestPathOrder = [startNode, stopNode, finishNode]\n                    } else if(messageTwo.data[0][0] === false) {\n                      nodesInShortestPathOrder = [startNode, ...messageTwo.data[1]]\n                    } else if(messageTwo.data[1][0] === false) {\n                      nodesInShortestPathOrder = [...messageTwo.data[0], finishNode]\n                    } else {\n                      nodesInShortestPathOrder = [...messageTwo.data[0], ...messageTwo.data[1]]\n                    }\n\n                    this.animatebfs(\n                      message.data[0], \n                      nodesInShortestPathOrder, \n                      (message.data[0].length+message.data[1].length), \n                      this.state.animationSpeed, \n                      this.state.isThereStop,\n                      false\n                    )\n\n                    setTimeout(this.animatebfs, \n                      message.data[0].length * this.state.animationSpeed, \n                      message.data[1], \n                      nodesInShortestPathOrder,\n                      (message.data[0].length+message.data[1].length), \n                      this.state.animationSpeed, \n                      this.state.isThereStop,\n                      true\n                    )\n                  }\n\n                  animateTime(message, messageTwo)\n              })\n            }\n          animateTiming(message)\n      })\n      return\n\n      } else if(!this.state.isThereStop){\n\n        this.breadthFirstSearchWorker.postMessage([grid, startNode, finishNode, false])\n\n        this.breadthFirstSearchWorker.addEventListener('message', (message) => {\n\n            this.pathGrabWorker.postMessage([message.data, false])\n\n            this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n              var nodesInShortestPathOrder = messageTwo.data === false ? [startNode, finishNode] : messageTwo.data\n\n              this.animatebfs(\n                message.data, \n                nodesInShortestPathOrder, \n                message.data.length, \n                this.state.animationSpeed, \n                false\n              )\n            })\n        })\n      }\n    }\n\n    // greedy best first search\n\n    animategbfs = (\n      visitedNodesInOrder, \n      nodesInShortestPathOrder,\n      animationStall, \n      animationSpeed, \n      isThereStop,\n      isSecondAnimation=false\n    ) => {\n\n      var animationColor\n\n      animationColor = isSecondAnimation ? animationColor = 'node-target-visited' : animationColor = 'node-visited'\n\n      //progress tracker\n      const progress = $(\"#progressBar\")\n      progress.replaceWith($(\"#progressBar\")).clone(true)\n\n      var integralVal = this.handleProgressSetup(\n        isThereStop,\n        isSecondAnimation,\n        animationSpeed,\n        visitedNodesInOrder.length\n      )\n\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n        if (i === visitedNodesInOrder.length) {\n\n          if(isSecondAnimation && isThereStop) return\n\n          setTimeout(this.animateShortestPath, animationStall*animationSpeed, nodesInShortestPathOrder)\n\n          return;\n          }\n        setTimeout(() => {\n            const node = visitedNodesInOrder[i];\n            document.getElementById(`node-${node.row}-${node.col}`).className = `node ${animationColor} node-gap-vert node-gap-horiz`;\n            progress.width(`+=${integralVal}%`)\n          }, animationSpeed * i);\n      }\n    }\n\n    visualizegbfs = () => {\n      \n      this.greedyBestFirstSearchWorker = new WebWorker(greedyBestFirstSearchWorker)\n\n      this.pathGrabWorker = new WebWorker(pathGrabWorker)\n\n      var grid = this.state.grid;\n      const START_NODE = this.state.startNode\n      const FINISH_NODE = this.state.finishNode\n      const STOP_NODE = this.state.prevStop\n      const startNode = grid[START_NODE[0]][START_NODE[1]];\n      const finishNode = grid[FINISH_NODE[0]][FINISH_NODE[1]];\n      const stopNode = this.state.isThereStop ? grid[STOP_NODE[0]][STOP_NODE[1]] : []\n\n      if(this.state.isThereStop) {\n\n        this.greedyBestFirstSearchWorker.postMessage([grid, startNode, finishNode, stopNode])\n\n        this.greedyBestFirstSearchWorker.addEventListener('message', (message) => {\n            \n          const animateTiming = async (message) => {\n\n            this.pathGrabWorker.postMessage([message.data, true])\n\n            this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n                const animateTime = (message, messageTwo) => {\n\n                  var nodesInShortestPathOrder;\n\n                  if(messageTwo.data[0][0] === false && messageTwo.data[1][0] === false) {\n                    nodesInShortestPathOrder = [startNode, stopNode, finishNode]\n                  } else if(messageTwo.data[0][0] === false) {\n                    nodesInShortestPathOrder = [startNode, ...messageTwo.data[1]]\n                  } else if(messageTwo.data[1][0] === false) {\n                    nodesInShortestPathOrder = [...messageTwo.data[0], finishNode]\n                  } else {\n                    nodesInShortestPathOrder = [...messageTwo.data[0], ...messageTwo.data[1]]\n                  }\n\n                  this.animategbfs(\n                    message.data[0], \n                    nodesInShortestPathOrder, \n                    (message.data[0].length+message.data[1].length), \n                    this.state.animationSpeed, \n                    this.state.isThereStop,\n                    false\n                  )\n\n                  setTimeout(this.animategbfs, \n                    message.data[0].length * this.state.animationSpeed, \n                    message.data[1], \n                    nodesInShortestPathOrder,\n                    (message.data[0].length+message.data[1].length), \n                    this.state.animationSpeed, \n                    this.state.isThereStop, \n                    true\n                  )\n                }\n\n                animateTime(message, messageTwo)\n            })\n          }\n          animateTiming(message)\n      })\n      \n      } else if(!this.state.isThereStop) {\n        \n        this.greedyBestFirstSearchWorker.postMessage([grid, startNode, finishNode, false])\n\n        this.greedyBestFirstSearchWorker.addEventListener('message', (message) => {\n\n            this.pathGrabWorker.postMessage([message.data, false])\n\n            this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n              var nodesInShortestPathOrder = messageTwo.data === false ? [startNode, finishNode] : messageTwo.data\n\n              this.animategbfs(\n                message.data, \n                nodesInShortestPathOrder,\n                message.data.length, \n                this.state.animationSpeed, \n                this.state.isThereStop,\n                false\n              )\n\n            })\n        })\n      }\n    }\n\n    // depth first search\n\n    animatedfs = (\n      visitedNodesInOrder, \n      nodesInShortestPathOrder, \n      animationStall, \n      animationSpeed, \n      isThereStop,\n      isSecondAnimation=false\n    ) => {\n\n      var animationColor\n\n      animationColor = isSecondAnimation ? animationColor = 'node-target-visited' : animationColor = 'node-visited'\n\n      //progress tracker\n      const progress = $(\"#progressBar\")\n      progress.replaceWith($(\"#progressBar\")).clone(true)\n\n      var integralVal = this.handleProgressSetup(\n        isThereStop,\n        isSecondAnimation,\n        animationSpeed,\n        visitedNodesInOrder.length\n      )\n\n      for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n        if (i === visitedNodesInOrder.length) {\n\n          if(isSecondAnimation && isThereStop) return\n\n          setTimeout(this.animateShortestPath, animationStall*animationSpeed, nodesInShortestPathOrder)\n\n          return;\n          }\n        setTimeout(() => {\n            const node = visitedNodesInOrder[i];\n            document.getElementById(`node-${node.row}-${node.col}`).className = `node ${animationColor} node-gap-vert node-gap-horiz`;\n            progress.width(`+=${integralVal}%`)\n          }, animationSpeed * i);\n      }\n    }\n\n    visualizedfs = () => {\n            \n      this.depthFirstSearchWorker = new WebWorker(depthFirstSearchWorker)\n\n      this.pathGrabWorker = new WebWorker(pathGrabWorker)\n\n      var grid = this.state.grid;\n      const START_NODE = this.state.startNode\n      const FINISH_NODE = this.state.finishNode\n      const STOP_NODE = this.state.prevStop\n      const startNode = grid[START_NODE[0]][START_NODE[1]];\n      const finishNode = grid[FINISH_NODE[0]][FINISH_NODE[1]];\n      const stopNode = this.state.isThereStop ? grid[STOP_NODE[0]][STOP_NODE[1]] : []\n      \n      if(this.state.isThereStop){\n\n        this.depthFirstSearchWorker.postMessage([grid, startNode, finishNode, stopNode])\n\n        this.depthFirstSearchWorker.addEventListener('message', (message) => {\n            \n          const animateTiming = async (message) => {\n\n            this.pathGrabWorker.postMessage([message.data, true])\n\n            this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n                const animateTime = (message, messageTwo) => {\n\n                  var nodesInShortestPathOrder;\n\n                  if(messageTwo.data[0][0] === false && messageTwo.data[1][0] === false) {\n                    nodesInShortestPathOrder = [startNode, stopNode, finishNode]\n                  } else if(messageTwo.data[0][0] === false) {\n                    nodesInShortestPathOrder = [startNode, ...messageTwo.data[1]]\n                  } else if(messageTwo.data[1][0] === false) {\n                    nodesInShortestPathOrder = [...messageTwo.data[0], finishNode]\n                  } else {\n                    nodesInShortestPathOrder = [...messageTwo.data[0], ...messageTwo.data[1]]\n                  }\n\n                  this.animatedfs(\n                    message.data[0], \n                    nodesInShortestPathOrder, \n                    (message.data[0].length+message.data[1].length), \n                    this.state.animationSpeed, \n                    this.state.isThereStop,\n                    false\n                  )\n\n                  setTimeout(\n                    this.animatedfs, \n                    message.data[0].length * this.state.animationSpeed, \n                    message.data[1], \n                    nodesInShortestPathOrder,\n                    (message.data[0].length+message.data[1].length), \n                    this.state.animationSpeed, \n                    this.state.isThereStop, \n                    true\n                  )\n                }\n\n                animateTime(message, messageTwo)\n            })\n          }\n          animateTiming(message)\n      })\n        return\n\n      } else if(!this.state.isThereStop){\n\n        this.depthFirstSearchWorker.postMessage([grid, startNode, finishNode, false])\n\n        this.depthFirstSearchWorker.addEventListener('message', (message) => {\n\n            this.pathGrabWorker.postMessage([message.data, false])\n\n            this.pathGrabWorker.addEventListener('message', (messageTwo) => {\n\n              var nodesInShortestPathOrder = messageTwo.data === false ? [startNode, finishNode] : messageTwo.data\n\n              this.animatedfs(\n                message.data, \n                nodesInShortestPathOrder,\n                message.data.length, \n                this.state.animationSpeed,\n                this.state.isThereStop, \n                false\n              )\n\n            })\n        })\n      }\n    }\n\n    // bidirectional greedy first search\n\n    animateBidirectionalAlgorithm = (\n      visitedNodesInOrderStart,\n      visitedNodesInOrderFinish,\n      nodesInShortestPathOrder,\n      isShortedPath,\n      animationSpeed,\n      animationStall,\n      isSecondAnimation=false\n    ) => {\n\n      this.setState({visualizingAlgorithm: true})\n\n      var animationColor\n\n      animationColor = isSecondAnimation ? animationColor = 'node-target-visited' : animationColor = 'node-visited'\n\n      //progress tracker\n      const progress = $(\"#progressBar\")\n      progress.replaceWith($(\"#progressBar\")).clone(true)\n\n      var integralVal = this.handleProgressSetup(\n        this.state.isThereStop,\n        false,\n        animationSpeed,\n        visitedNodesInOrderStart.length\n      )\n\n      let len = Math.max(\n        visitedNodesInOrderStart.length,\n        visitedNodesInOrderFinish.length\n      );\n\n      for (let i = 1; i <= len; i++) {\n        let nodeA = visitedNodesInOrderStart[i];\n        let nodeB = visitedNodesInOrderFinish[i];\n        if (i === visitedNodesInOrderStart.length) {\n\n          if(isSecondAnimation && this.state.isThereStop) return\n\n          setTimeout(() => {\n            if (isShortedPath) {\n              this.animateShortestPath(\n                nodesInShortestPathOrder\n              );\n            } else {\n              this.setState({ visualizingAlgorithm: false });\n            }\n          }, animationStall * animationSpeed);\n          return;\n        }\n        setTimeout(() => {\n          //visited nodes\n          if (nodeA !== undefined) {\n            document.getElementById(`node-${nodeA.row}-${nodeA.col}`).className = `node ${animationColor} node-gap-vert node-gap-horiz`;\n          }\n          if (nodeB !== undefined) {\n            document.getElementById(`node-${nodeB.row}-${nodeB.col}`).className = `node ${animationColor} node-gap-vert node-gap-horiz`;\n          }\n          progress.width(`+=${integralVal*2}%`)\n\n        }, i * animationSpeed);\n      }\n    }\n\n    visualizeBidirectionalGreedySearch = () => {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n\n      this.bidirectionalGreedySearchWorker = new WebWorker(bidirectionalGreedySearchWorker)\n\n      const { grid } = this.state;\n      const _startNode = this.state.startNode\n      const _finishNode = this.state.finishNode\n      const _stopNode = this.state.prevStop\n      const startNode = grid[_startNode[0]][_startNode[1]];\n      const finishNode = grid[_finishNode[0]][_finishNode[1]];\n      const stopNode = this.state.isThereStop ? grid[_stopNode[0]][_stopNode[1]] : false\n\n      if(this.state.isThereStop) {\n\n        this.bidirectionalGreedySearchWorker.postMessage([grid, startNode, finishNode, stopNode, true])\n\n        this.bidirectionalGreedySearchWorker.addEventListener('message', (message) => {\n\n            const visitedNodesInOrderStart = message.data[0][0];\n            const visitedNodesInOrderStopFirst = message.data[0][1];\n            const isShortedPath = message.data[0][2];\n\n            const visitedNodesInOrderStopSecond = message.data[1][0]\n            const visitedNodesInOrderFinish = message.data[1][1]\n            const isShortedPathSecond = message.data[1][2]\n\n            if(visitedNodesInOrderStart[0] !== startNode) visitedNodesInOrderStart.unshift(startNode)\n\n            if(visitedNodesInOrderStopFirst[0] !== stopNode) visitedNodesInOrderStopFirst.unshift(stopNode)\n\n            if(visitedNodesInOrderFinish[0] !== finishNode) visitedNodesInOrderFinish.unshift(finishNode)\n\n            const animationStall = (visitedNodesInOrderStart.length+visitedNodesInOrderStopFirst.length+visitedNodesInOrderStopSecond.length+visitedNodesInOrderFinish.length)\n\n            const nodesInShortestPathOrderFirst = getNodesInShortestPathOrderBidirectionalGreedySearch(\n              visitedNodesInOrderStart[visitedNodesInOrderStart.length - 1],\n              visitedNodesInOrderStopFirst[visitedNodesInOrderStopFirst.length - 1],\n              false\n            )\n\n            const nodesInShortestPathOrderSecond = getNodesInShortestPathOrderBidirectionalGreedySearch(\n              visitedNodesInOrderStopSecond[visitedNodesInOrderStopSecond.length - 1],\n              visitedNodesInOrderFinish[visitedNodesInOrderFinish.length - 1],\n              true\n            )\n\n            const nodesInShortestPathOrder = [...nodesInShortestPathOrderFirst, ...nodesInShortestPathOrderSecond]\n\n            setTimeout(() => {\n              this.animateBidirectionalAlgorithm(\n                visitedNodesInOrderStart,\n                visitedNodesInOrderStopFirst,\n                nodesInShortestPathOrder,\n                isShortedPath,\n                this.state.animationSpeed,\n                animationStall,\n                false\n              );\n            }, this.state.animationSpeed);\n\n            setTimeout(() => {\n              this.animateBidirectionalAlgorithm(\n                visitedNodesInOrderStopSecond,\n                visitedNodesInOrderFinish,\n                nodesInShortestPathOrder,\n                isShortedPathSecond,\n                this.state.animationSpeed,\n                animationStall,\n                true\n              );\n            }, this.state.animationSpeed*((visitedNodesInOrderStart.length-1)+(visitedNodesInOrderStopFirst.length-1)))\n\n        })\n\n      } else if(!this.state.isThereStop) {\n\n        this.bidirectionalGreedySearchWorker.postMessage([grid, startNode, finishNode, stopNode])\n\n        this.bidirectionalGreedySearchWorker.addEventListener('message', (message) => {\n\n            const visitedNodesInOrderStart = message.data[0];\n            const visitedNodesInOrderFinish = message.data[1];\n            if(!visitedNodesInOrderFinish[0].isFinish) visitedNodesInOrderFinish.unshift(finishNode)\n  \n            const isShortedPath = message.data[2];\n            const nodesInShortestPathOrder = getNodesInShortestPathOrderBidirectionalGreedySearch(\n              visitedNodesInOrderStart[visitedNodesInOrderStart.length - 1],\n              visitedNodesInOrderFinish[visitedNodesInOrderFinish.length - 1]\n            )\n\n            setTimeout(() => {\n              this.animateBidirectionalAlgorithm(\n                visitedNodesInOrderStart,\n                visitedNodesInOrderFinish,\n                nodesInShortestPathOrder,\n                isShortedPath,\n                this.state.animationSpeed\n              );\n            }, this.state.animationSpeed);\n        })\n      }\n    }\n\n    //finish animations\n\n    animateShortestPath = (nodesInShortestPathOrder) => {\n\n      const startNode = this.state.grid[this.state.startNode[0]][this.state.startNode[1]]\n      const finishNode = this.state.grid[this.state.finishNode[0]][this.state.finishNode[1]]\n      const stopNode = this.state.isThereStop ? this.state.grid[this.state.prevStop[0]][this.state.prevStop[1]] : []\n      const stall = (nodesInShortestPathOrder.length*50)+2\n\n      setTimeout(() => {this.setState({visualizingAlgorithm: false})}, stall)\n\n      for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n        setTimeout(() => {\n          const node = nodesInShortestPathOrder[i];\n\n          var currObj = document.getElementById(`node-${node.row}-${node.col}`)\n\n          if(node.row === startNode.row && node.col === startNode.col) {\n            currObj.className = 'node node-shortest-path node-shortest-path-start node-no-gap-vert';\n          } else if(node.row === finishNode.row && node.col === finishNode.col){\n            currObj.className = 'node node-shortest-path node-shortest-path-finish';\n          } else if(this.state.isThereStop && (node.row === stopNode.row && node.col === stopNode.col)) {\n            currObj.className = 'node node-shortest-path node-shortest-path-stop';\n          } else if(document.getElementById(`node-${node.row}-${node.col}`).className.includes('node-shortest-path')) {\n            $(`#node-${node.row}-${node.col}`).replaceWith($(`#node-${node.row}-${node.col}`).clone(true))\n          } else {\n            currObj.className = 'node node-shortest-path';\n          }\n\n        }, 50 * i);\n      }\n    }\n\n    //generate mazes\n\n    animateMaze = (walls) => {\n      for (let i = 0; i <= walls.length; i++) {\n        if (i === walls.length) {   \n          setTimeout(() => {\n            this.setState({ generatingMaze: false })\n          }, i * 10)      \n          return;\n        }\n        setTimeout(() => {\n\n          let wall = walls[i];\n          let node = this.state.grid[wall[0]][wall[1]];\n          node.isWall = true\n          document.getElementById(`node-${node.row}-${node.col}`).className = \"node node-wall\"\n\n        }, i * 10);\n      }\n    };\n\n    getNewGridWithMaze = (walls) => {\n      let grid = this.state.grid\n      let newGrid = grid.slice();\n      for (let wall of walls) {\n        let node = grid[wall[0]][wall[1]];\n        let newNode = {\n          ...node,\n          isWall: true,\n        };\n        newGrid[wall[0]][wall[1]] = newNode;\n      }\n      this.setState({ grid: newGrid, generatingMaze: false })\n      return\n    };\n\n    generateRandomMaze() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ generatingMaze: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]]\n        const finishNode = grid[_finishNode[0]][_finishNode[1]]\n        const stopNode = this.state.isThereStop ? grid[this.state.prevStop[0]][this.state.prevStop[1]] : false\n        const walls = this.state.isThereStop ? randomMaze(grid, startNode, finishNode, true, stopNode) : randomMaze(grid, startNode, finishNode, false);\n        this.animateMaze(walls);\n      }, 10);\n    }\n  \n    generateRecursiveDivisionMaze() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ generatingMaze: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]]\n        const finishNode = grid[_finishNode[0]][_finishNode[1]]\n        const stopNode = this.state.isThereStop ? grid[this.state.prevStop[0]][this.state.prevStop[1]] : false\n        const walls = this.state.isThereStop ? recursiveDivisionMaze(grid, startNode, finishNode, true, stopNode) : recursiveDivisionMaze(grid, startNode, finishNode, false, stopNode);\n        this.animateMaze(walls);\n      }, 10);\n    }\n  \n    generateVerticalMaze() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ generatingMaze: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]]\n        const finishNode = grid[_finishNode[0]][_finishNode[1]]\n        const stopNode = this.state.isThereStop ? grid[this.state.prevStop[0]][this.state.prevStop[1]] : false\n        const walls = this.state.isThereStop ? verticalMaze(grid, startNode, finishNode, true, stopNode) : verticalMaze(grid, startNode, finishNode, false);\n        this.animateMaze(walls);\n      }, 10);\n    }\n  \n    generateHorizontalMaze() {\n      if (this.state.visualizingAlgorithm || this.state.generatingMaze) {\n        return;\n      }\n      this.setState({ generatingMaze: true });\n      setTimeout(() => {\n        const { grid } = this.state;\n        const _startNode = this.state.startNode\n        const _finishNode = this.state.finishNode\n        const startNode = grid[_startNode[0]][_startNode[1]]\n        const finishNode = grid[_finishNode[0]][_finishNode[1]]\n        const stopNode = this.state.isThereStop ? grid[this.state.prevStop[0]][this.state.prevStop[1]] : false\n        const walls = this.state.isThereStop ? horizontalMaze(grid, startNode, finishNode, true, stopNode) : horizontalMaze(grid, startNode, finishNode, false);\n        this.animateMaze(walls);\n      }, 10);\n    }\n\n    render(){ \n\n        return(\n            <div className=\"main-container\">\n                <div className='grid-info-container'>\n                  <div className='grid-text-container'>\n                    <p className='grid-text'>Current-algorithim: <span className='grid-alg-text'>{this.state.currAlgObj.name}</span></p>\n                  </div>\n                  <div className=\"progress-bar-container\">\n                      <div className='progress progress-no-stop' id='progressBar'/>\n                  </div>\n                </div>\n                <NavTop state={this.state} handleMiniMazeTabs={this.handleMiniMazeTabs} handleMiniTabs={this.handleMiniTabs} clearGrid={this.clearGrid} resetGrid={this.resetGrid} toggleNav={this.handleNav} handleSpeedChange={this.handleSpeedChange} handleMazeTabs={this.handleMazeTabs} genMaze={this.generateMaze} play={this.playAnimation} handleTabs={this.handleTabs} handleItemChange={this.handleItemDescChange}/>\n                <div className=\"visualizer-container\">\n                    <Visualizer \n                        state={this.state} \n                        handleMouseDown={this.handleMouseDown} \n                        handleMouseEnter={this.handleMouseEnter} \n                        handleMouseUp={this.handleMouseUp}\n                    />\n                </div>\n                {window.innerWidth > 1000 && <Navbar state={this.state} toggleNav={this.handleNav} handleSpeedChange={this.handleSpeedChange} handleMazeTabs={this.handleMazeTabs} genMaze={this.generateMaze} play={this.playAnimation} handleTabs={this.handleTabs} handleItemChange={this.handleItemDescChange} visualizeDijkstra={this.visualizeDijkstra}/>}\n            </div>\n        )\n    }\n}\n\nconst renderGrid = (state, _rowNum, _colNum) => {\n    const grid = [];\n    var rowNum = _rowNum\n    var colNum = _colNum\n    for (let row = 0; row < rowNum; row++) {\n      const currentRow = []\n      for (let col = 0; col < colNum; col++) {\n        var node = createNode(col, row, state)\n        node.className = 'node'\n        currentRow.push(node)\n      }\n      grid.push(currentRow)\n    }\n    return grid;\n}\n\n\n\nconst createNode = (col, row, state) => {\n    const startNode = state.startNode\n    const finishNode = state.finishNode\n    const stopNode = state.prevStop\n    return {\n      col,\n      row,\n      isStart: row === startNode[0] && col === startNode[1],\n      isFinish: row === finishNode[0] && col === finishNode[1],\n      isStop: state.isThereStop ? row === stopNode[0] && col === stopNode[1] : false,\n      isWall: false,\n      previousNode: null,\n      previousNodeSecond: null,\n      isVisited: false,\n      isVisitedSecond: false,\n      distance: Infinity,\n      distanceSecond: Infinity\n    };\n  };\n\n  const getNewGridWithStart = (grid, row, col, prevStart) => {\n\n    const newGrid = grid.slice();\n    const newStart = newGrid[row][col]\n    const oldStart = newGrid[prevStart[0]][prevStart[1]]\n    const oldNode = {\n      ...oldStart,\n      isStart: !oldStart.isStart\n    }\n    const newNode = {\n      ...newStart,\n      isStart: !newStart.isStart,\n      isWall: false\n    };\n    newGrid[row][col] = newNode;\n    newGrid[prevStart[0]][prevStart[1]] = oldNode\n    return newGrid;\n  }\n\n  const getNewGridWithFinish = (grid, row, col, prevFinish) => {\n\n    const newGrid = grid.slice();\n    const newFinish = newGrid[row][col];\n    const oldFinish = newGrid[prevFinish[0]][prevFinish[1]]\n    const oldNode = {\n      ...oldFinish,\n      isFinish: !oldFinish.isFinish\n    }\n    const newNode = {\n      ...newFinish,\n      isFinish: !newFinish.isFinish,\n      isWall: false\n    };\n    newGrid[row][col] = newNode;\n    newGrid[prevFinish[0]][prevFinish[1]] = oldNode\n    return newGrid;\n  }\n\n  const getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice()\n    const node = newGrid[row][col]\n    var newNode = {...node}\n    newNode = {\n      ...node,\n      isWall: !node.isWall,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid\n  };\n\n  const getNewGridWithStopToggled = (grid, row, col, prevStop) => {\n\n    const newGrid = grid.slice()\n    const newStop = newGrid[row][col]\n    if(prevStop.length === 0){\n      const newNode = {\n        ...newStop,\n        isStop: !newStop.isStop,\n        isWall: false\n      };\n      newGrid[row][col] = newNode\n      return newGrid\n    }\n    const oldStop = newGrid[prevStop[0]][prevStop[1]]\n    const oldNode = {\n      ...oldStop,\n      isStop: !oldStop.isStop\n    }\n    const newNode = {\n      ...newStop,\n      isStop: !newStop.isStop,\n      isWall: false\n    };\n    newGrid[row][col] = newNode;\n    newGrid[prevStop[0]][prevStop[1]] = oldNode\n    return newGrid;\n  };\n\n  const getGridWithoutPath = (grid, minorReset=false) => {\n    let newGrid = grid.slice();\n    for (let row of grid) {\n      for (let node of row) {\n        var wall = false\n        var stop = false\n        if(minorReset){\n          if(grid[node.row][node.col].isWall) wall = true\n\n          if(grid[node.row][node.col].isStop) stop = true\n        }\n        let newNode = {\n          ...node,\n          distance: Infinity,\n          distanceSecond: Infinity,\n          totalDistance: Infinity,\n          isVisited: false,\n          isVisitedSecond: false,\n          isShortest: false,\n          previousNode: null,\n          isWall: wall,\n          isWeight: false,\n          isStop: stop\n        };\n        newGrid[node.row][node.col] = newNode;\n      }\n    }\n    return newGrid;\n  };\n\n  function getNodesInShortestPathOrderBidirectionalGreedySearch(\n    nodeA,\n    nodeB,\n    second=false\n  ) {\n    let nodesInShortestPathOrder = []\n    let currentNode = nodeB\n    while (currentNode !== null) {\n      nodesInShortestPathOrder.push(currentNode)\n      if(second){\n        currentNode = currentNode.previousNodeSecond\n      } else {\n        currentNode = currentNode.previousNode\n      }\n    }\n    currentNode = nodeA\n    while (currentNode !== null) {\n      nodesInShortestPathOrder.unshift(currentNode)\n      if(second){\n        currentNode = currentNode.previousNodeSecond\n      } else {\n        currentNode = currentNode.previousNode\n      }\n    }\n    return nodesInShortestPathOrder\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}