{"ast":null,"code":"let walls;\nexport function horizontalMaze(grid, startNode, finishNode, isThereStop) {\n  let stopNode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  if (!startNode || !finishNode || startNode === finishNode) {\n    return false;\n  }\n\n  let vertical = range(grid[0].length);\n  let horizontal = range(grid.length);\n  walls = [];\n  getHorizontalWalls(vertical, horizontal, startNode, finishNode, isThereStop, stopNode);\n  return walls;\n}\n\nfunction range(len) {\n  let result = [];\n\n  for (let i = 0; i < len; i++) {\n    result.push(i);\n  }\n\n  return result;\n}\n\nfunction getHorizontalWalls(vertical, horizontal, startNode, finishNode, isThereStop, stopNode) {\n  if (horizontal.length < 2) {\n    return;\n  }\n\n  let choice = Math.floor(Math.random() * 2);\n\n  for (let num of horizontal) {\n    if (choice === 0 && num % 2 !== 0) {\n      addWall(num, vertical, startNode, finishNode, isThereStop, stopNode);\n    }\n\n    if (choice === 1 && num % 2 === 0) {\n      addWall(num, vertical, startNode, finishNode, isThereStop, stopNode);\n    }\n  }\n}\n\nfunction addWall(num, vertical, startNode, finishNode, isThereStop, stopNode) {\n  let isStartFinish = false;\n  let tempWalls = [];\n\n  for (let temp of vertical) {\n    if (num === startNode.row && temp === startNode.col || num === finishNode.row && temp === finishNode.col || isThereStop && num === stopNode.row && temp === stopNode.col) {\n      isStartFinish = true;\n      continue;\n    }\n\n    tempWalls.push([num, temp]);\n  }\n\n  if (!isStartFinish) {\n    tempWalls.splice(Math.floor(Math.random() * tempWalls.length), 1);\n  }\n\n  for (let wall of tempWalls) {\n    walls.push(wall);\n  }\n}","map":{"version":3,"names":["walls","horizontalMaze","grid","startNode","finishNode","isThereStop","stopNode","vertical","range","length","horizontal","getHorizontalWalls","len","result","i","push","choice","Math","floor","random","num","addWall","isStartFinish","tempWalls","temp","row","col","splice","wall"],"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/mazeAlgorithims/HorizontalMaze.js"],"sourcesContent":["let walls;\nexport function horizontalMaze(grid, startNode, finishNode, isThereStop, stopNode=false) {\n  if (!startNode || !finishNode || startNode === finishNode) {\n    return false;\n  }\n  let vertical = range(grid[0].length);\n  let horizontal = range(grid.length);\n  walls = [];\n  getHorizontalWalls(vertical, horizontal, startNode, finishNode, isThereStop, stopNode);\n  return walls;\n}\n\nfunction range(len) {\n  let result = [];\n  for (let i = 0; i < len; i++) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction getHorizontalWalls(vertical, horizontal, startNode, finishNode, isThereStop, stopNode) {\n  if (horizontal.length < 2) {\n    return;\n  }\n\n  let choice = Math.floor(Math.random() * 2);\n  for (let num of horizontal) {\n    if (choice === 0 && num % 2 !== 0) {\n      addWall(num, vertical, startNode, finishNode, isThereStop, stopNode);\n    }\n    if (choice === 1 && num % 2 === 0) {\n      addWall(num, vertical, startNode, finishNode, isThereStop, stopNode);\n    }\n  }\n}\n\nfunction addWall(num, vertical, startNode, finishNode, isThereStop, stopNode) {\n  let isStartFinish = false;\n  let tempWalls = [];\n  for (let temp of vertical) {\n    if (\n      (num === startNode.row && temp === startNode.col) ||\n      (num === finishNode.row && temp === finishNode.col) ||\n      (isThereStop && (num === stopNode.row && temp === stopNode.col))\n    ) {\n      isStartFinish = true;\n      continue;\n    }\n    tempWalls.push([num, temp]);\n  }\n  if (!isStartFinish) {\n    tempWalls.splice(Math.floor(Math.random() * tempWalls.length), 1);\n  }\n  for (let wall of tempWalls) {\n    walls.push(wall);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}