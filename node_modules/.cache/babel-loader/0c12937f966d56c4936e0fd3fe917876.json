{"ast":null,"code":"// eslint-disable-next-line import/no-anonymous-default-export\nvar self = this;\nexport default (() => {\n  // eslint-disable-line no-restricted-globals\n  self.addEventListener(\"message\", message => {\n    if (!message) return;\n    const finishNode = message.data[0];\n    const nodesInShortestPathOrder = [];\n    let currentNode = finishNode;\n\n    while (currentNode !== null) {\n      if (currentNode.isStart == true && stop == false || typeof currentNode.previousNode !== 'object') break;\n      if (currentNode.isStop == true && stop == true) break;\n      nodesInShortestPathOrder.unshift(currentNode);\n      currentNode = currentNode.previousNode;\n    }\n\n    postMessage(nodesInShortestPathOrder);\n  });\n});\nexport function getNodesInShortestPathOrder(finishNode) {\n  let stop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n\n  while (currentNode !== null) {\n    if (currentNode.isStart == true && stop == false || typeof currentNode.previousNode !== 'object') break;\n    if (currentNode.isStop == true && stop == true) break;\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n\n  return nodesInShortestPathOrder;\n}","map":{"version":3,"names":["self","addEventListener","message","finishNode","data","nodesInShortestPathOrder","currentNode","isStart","stop","previousNode","isStop","unshift","postMessage","getNodesInShortestPathOrder"],"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/workers/pathGrabWorker.js"],"sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nvar self = this;\nexport default () => {\n    // eslint-disable-line no-restricted-globals\n    self.addEventListener(\"message\", message => {\n        if (!message) return;\n        const finishNode = message.data[0]\n        const nodesInShortestPathOrder = [];\n        let currentNode = finishNode;\n        while (currentNode !== null) {\n    \n            if(currentNode.isStart==true && stop==false || typeof currentNode.previousNode !== 'object') break;\n    \n            if(currentNode.isStop==true && stop==true) break;\n    \n            nodesInShortestPathOrder.unshift(currentNode);\n            currentNode = currentNode.previousNode;\n        }\n        postMessage(nodesInShortestPathOrder)\n\n    })\n}\n\nexport function getNodesInShortestPathOrder(finishNode, stop=false) {\n    const nodesInShortestPathOrder = [];\n    let currentNode = finishNode;\n    while (currentNode !== null) {\n\n      if(currentNode.isStart==true && stop==false || typeof currentNode.previousNode !== 'object') break;\n\n      if(currentNode.isStop==true && stop==true) break;\n\n      nodesInShortestPathOrder.unshift(currentNode);\n      currentNode = currentNode.previousNode;\n    }\n    return nodesInShortestPathOrder;\n}"],"mappings":"AAAA;AACA,IAAIA,IAAI,GAAG,IAAX;AACA,gBAAe,MAAM;EACjB;EACAA,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiCC,OAAO,IAAI;IACxC,IAAI,CAACA,OAAL,EAAc;IACd,MAAMC,UAAU,GAAGD,OAAO,CAACE,IAAR,CAAa,CAAb,CAAnB;IACA,MAAMC,wBAAwB,GAAG,EAAjC;IACA,IAAIC,WAAW,GAAGH,UAAlB;;IACA,OAAOG,WAAW,KAAK,IAAvB,EAA6B;MAEzB,IAAGA,WAAW,CAACC,OAAZ,IAAqB,IAArB,IAA6BC,IAAI,IAAE,KAAnC,IAA4C,OAAOF,WAAW,CAACG,YAAnB,KAAoC,QAAnF,EAA6F;MAE7F,IAAGH,WAAW,CAACI,MAAZ,IAAoB,IAApB,IAA4BF,IAAI,IAAE,IAArC,EAA2C;MAE3CH,wBAAwB,CAACM,OAAzB,CAAiCL,WAAjC;MACAA,WAAW,GAAGA,WAAW,CAACG,YAA1B;IACH;;IACDG,WAAW,CAACP,wBAAD,CAAX;EAEH,CAhBD;AAiBH,CAnBD;AAqBA,OAAO,SAASQ,2BAAT,CAAqCV,UAArC,EAA6D;EAAA,IAAZK,IAAY,uEAAP,KAAO;EAChE,MAAMH,wBAAwB,GAAG,EAAjC;EACA,IAAIC,WAAW,GAAGH,UAAlB;;EACA,OAAOG,WAAW,KAAK,IAAvB,EAA6B;IAE3B,IAAGA,WAAW,CAACC,OAAZ,IAAqB,IAArB,IAA6BC,IAAI,IAAE,KAAnC,IAA4C,OAAOF,WAAW,CAACG,YAAnB,KAAoC,QAAnF,EAA6F;IAE7F,IAAGH,WAAW,CAACI,MAAZ,IAAoB,IAApB,IAA4BF,IAAI,IAAE,IAArC,EAA2C;IAE3CH,wBAAwB,CAACM,OAAzB,CAAiCL,WAAjC;IACAA,WAAW,GAAGA,WAAW,CAACG,YAA1B;EACD;;EACD,OAAOJ,wBAAP;AACH"},"metadata":{},"sourceType":"module"}