{"ast":null,"code":"export function randomMaze(grid,startNode,finishNode){if(!startNode||!finishNode||startNode===finishNode){return false;}var walls=[];for(var row=0;row<grid.length;row++){for(var col=0;col<grid[0].length;col++){if(row===startNode.row&&col===startNode.col||row===finishNode.row&&col===finishNode.col)continue;if(Math.random()<0.33){walls.push([row,col]);}}}walls.sort(function(){return Math.random()-0.5;});return walls;}","map":{"version":3,"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/mazeAlgorithims/randomMaze.js"],"names":["randomMaze","grid","startNode","finishNode","walls","row","length","col","Math","random","push","sort"],"mappings":"AAAA,MAAO,SAASA,CAAAA,UAAT,CAAoBC,IAApB,CAA0BC,SAA1B,CAAqCC,UAArC,CAAiD,CACpD,GAAI,CAACD,SAAD,EAAc,CAACC,UAAf,EAA6BD,SAAS,GAAKC,UAA/C,CAA2D,CACzD,MAAO,MAAP,CACD,CACD,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIC,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGJ,IAAI,CAACK,MAA7B,CAAqCD,GAAG,EAAxC,CAA4C,CAC1C,IAAK,GAAIE,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQK,MAAhC,CAAwCC,GAAG,EAA3C,CAA+C,CAC7C,GACGF,GAAG,GAAKH,SAAS,CAACG,GAAlB,EAAyBE,GAAG,GAAKL,SAAS,CAACK,GAA5C,EACCF,GAAG,GAAKF,UAAU,CAACE,GAAnB,EAA0BE,GAAG,GAAKJ,UAAU,CAACI,GAFhD,CAIE,SACF,GAAIC,IAAI,CAACC,MAAL,GAAgB,IAApB,CAA0B,CACxBL,KAAK,CAACM,IAAN,CAAW,CAACL,GAAD,CAAME,GAAN,CAAX,EACD,CACF,CACF,CACDH,KAAK,CAACO,IAAN,CAAW,iBAAMH,CAAAA,IAAI,CAACC,MAAL,GAAgB,GAAtB,EAAX,EACA,MAAOL,CAAAA,KAAP,CACD","sourcesContent":["export function randomMaze(grid, startNode, finishNode) {\n    if (!startNode || !finishNode || startNode === finishNode) {\n      return false;\n    }\n    let walls = [];\n    for (let row = 0; row < grid.length; row++) {\n      for (let col = 0; col < grid[0].length; col++) {\n        if (\n          (row === startNode.row && col === startNode.col) ||\n          (row === finishNode.row && col === finishNode.col)\n        )\n          continue;\n        if (Math.random() < 0.33) {\n          walls.push([row, col]);\n        }\n      }\n    }\n    walls.sort(() => Math.random() - 0.5);\n    return walls;\n  }"]},"metadata":{},"sourceType":"module"}