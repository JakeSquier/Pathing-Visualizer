{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";export function breadthFirstSearch(grid,startNode,endNode){var visitedNodesInOrder=[];var openList=[];startNode.distance=0;var unvisitedNodes=getAllNodes(grid);openList.push(startNode);startNode.isVisited=true;console.log('here');while(openList.length){console.log('gg');var node=openList.shift();node.isVisited=true;visitedNodesInOrder.push(node);if(node===endNode){console.log(visitedNodesInOrder);return visitedNodesInOrder;}var neighbors=getUnvisitedNeighbors(node,grid);for(var i=0;i<neighbors.length;i++){var neighbor=neighbors[i];if(neighbor.isWall)continue;openList.push(neighbor);neighbor.isVisited=true;neighbor.previousNode=node;}}}function sortNodesByDistance(unvisitedNodes,finishNode){unvisitedNodes.sort(function(nodeA,nodeB){return nodeA.distance-nodeB.distance;});}function updateUnvisitedNeighbors(node,grid){var unvisitedNeighbors=getUnvisitedNeighbors(node,grid);var _iterator=_createForOfIteratorHelper(unvisitedNeighbors),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var neighbor=_step.value;neighbor.distance=node.distance+1;neighbor.previousNode=node;}}catch(err){_iterator.e(err);}finally{_iterator.f();}}function getUnvisitedNeighbors(node,grid){var neighbors=[];var col=node.col,row=node.row;if(row>0)neighbors.push(grid[row-1][col]);if(row<grid.length-1)neighbors.push(grid[row+1][col]);if(col>0)neighbors.push(grid[row][col-1]);if(col<grid[0].length-1)neighbors.push(grid[row][col+1]);return neighbors.filter(function(neighbor){return!neighbor.isVisited;});}function getAllNodes(grid){var nodes=[];var _iterator2=_createForOfIteratorHelper(grid),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var row=_step2.value;var _iterator3=_createForOfIteratorHelper(row),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var node=_step3.value;nodes.push(node);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return nodes;}export function getNodesInShortestPathOrder(finishNode){var nodesInShortestPathOrder=[];var currentNode=finishNode;while(currentNode!==null){nodesInShortestPathOrder.unshift(currentNode);currentNode=currentNode.previousNode;}return nodesInShortestPathOrder;}","map":{"version":3,"sources":["/Users/Jake.Squier/SE-Projects/pathing-visualizer/pathing-visualizer/src/algorithims/breadthFirstSearch.js"],"names":["breadthFirstSearch","grid","startNode","endNode","visitedNodesInOrder","openList","distance","unvisitedNodes","getAllNodes","push","isVisited","console","log","length","node","shift","neighbors","getUnvisitedNeighbors","i","neighbor","isWall","previousNode","sortNodesByDistance","finishNode","sort","nodeA","nodeB","updateUnvisitedNeighbors","unvisitedNeighbors","col","row","filter","nodes","getNodesInShortestPathOrder","nodesInShortestPathOrder","currentNode","unshift"],"mappings":"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","sourcesContent":["export function breadthFirstSearch(grid, startNode, endNode){\n    const visitedNodesInOrder = [];\n    const openList = []\n    startNode.distance = 0;\n    const unvisitedNodes = getAllNodes(grid)\n    openList.push(startNode)\n    startNode.isVisited = true\n    console.log('here')\n    while(openList.length){\n      console.log('gg')\n      var node = openList.shift();\n      node.isVisited = true;\n      visitedNodesInOrder.push(node)\n\n      if(node === endNode){\n        console.log(visitedNodesInOrder)\n        return visitedNodesInOrder\n      }\n\n      var neighbors = getUnvisitedNeighbors(node, grid)\n      for(let i = 0; i < neighbors.length; i++){\n        var neighbor = neighbors[i]\n\n        if(neighbor.isWall) continue;\n\n        openList.push(neighbor)\n        neighbor.isVisited = true\n        neighbor.previousNode = node\n      }\n    }\n\n}\n\nfunction sortNodesByDistance(unvisitedNodes, finishNode) {\n    unvisitedNodes.sort((nodeA, nodeB) => {\n        return (nodeA.distance) - (nodeB.distance)\n    });\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n    const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n    for (const neighbor of unvisitedNeighbors) {\n      neighbor.distance = node.distance + 1;\n      neighbor.previousNode = node;\n    }\n}\n  \nfunction getUnvisitedNeighbors(node, grid) {\n    const neighbors = [];\n    const {col, row} = node;\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n    const nodes = [];\n    for (const row of grid) {\n      for (const node of row) {\n        nodes.push(node);\n      }\n    }\n    return nodes;\n}\n\nexport function getNodesInShortestPathOrder(finishNode) {\n    const nodesInShortestPathOrder = [];\n    let currentNode = finishNode;\n    while (currentNode !== null) {\n      nodesInShortestPathOrder.unshift(currentNode);\n      currentNode = currentNode.previousNode;\n    }\n    return nodesInShortestPathOrder;\n}"]},"metadata":{},"sourceType":"module"}